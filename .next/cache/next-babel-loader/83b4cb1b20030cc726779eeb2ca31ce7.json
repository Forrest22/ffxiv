{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Highlight from './Highlight';\nconst setImmediatePolyfill = typeof setImmediate !== 'undefined' ? setImmediate : action => setTimeout(action, 1);\nlet calledRender = false;\n\nfunction queueRenderMath() {\n  if (typeof MathJax !== 'undefined' && !calledRender) {\n    MathJax.Hub.Queue(['Typeset', MathJax.Hub]);\n    calledRender = true;\n    setImmediatePolyfill(() => {\n      calledRender = false;\n    });\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  noMathJaxBlock: {\n    marginBottom: theme.spacing(2)\n  },\n  noMathJaxInline: {\n    fontFamily: 'monospace',\n    whiteSpace: 'normal',\n    wordWrap: 'break-word'\n  },\n  mathJaxBlock: {\n    maxWidth: '100%',\n    overflowX: 'auto',\n    fontSize: '1.125em'\n  },\n  mathJaxInline: {}\n}));\n\n// TODO: SSR still not happy\nconst MathJaxComponent = ({\n  math,\n  displayMode\n}) => {\n  const classes = useStyles();\n  const {\n    0: isMounted,\n    1: setIsMounted\n  } = useState(false);\n  useEffect(() => {\n    isMounted && queueRenderMath();\n  }, [isMounted, math, displayMode]);\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  if (!isMounted || typeof MathJax === 'undefined') {\n    return displayMode // @ts-ignore\n    ?\n    /*#__PURE__*/\n    _jsx(Highlight, {\n      language: \"latex\",\n      className: classes.noMathJaxBlock,\n      children: `\\\\[${math}\\\\]`\n    }) : /*#__PURE__*/_jsx(\"span\", {\n      className: classes.noMathJaxInline,\n      children: `\\\\(${math}\\\\)`\n    });\n  } else {\n    return displayMode ? /*#__PURE__*/_jsx(\"div\", {\n      className: classes.mathJaxBlock,\n      children: `\\\\[${math}\\\\]`\n    }) : /*#__PURE__*/_jsx(\"span\", {\n      className: classes.mathJaxInline,\n      children: `\\\\(${math}\\\\)`\n    });\n  }\n};\n\nexport default MathJaxComponent;\nexport const $ = math => /*#__PURE__*/_jsx(MathJaxComponent, {\n  math: math\n});\nexport const $$ = math => /*#__PURE__*/_jsx(MathJaxComponent, {\n  math: math,\n  displayMode: true\n});","map":null,"metadata":{},"sourceType":"module"}