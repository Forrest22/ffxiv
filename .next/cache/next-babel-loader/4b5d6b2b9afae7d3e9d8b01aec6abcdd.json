{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { fishes, baits, achievements } from './gists/data/ocean-fish-data.json'; // import ICONS_URL from './gists/data/ocean-fishing-icons.png'\n\nimport ICONS_MAP from './gists/data/ocean-fishing-icons-map.json';\nimport { translate } from './utils';\nconst ICON_ROWS = ICONS_MAP.length;\nconst ICON_COLS = Math.max(...ICONS_MAP.map(row => row.length));\n\nfunction camelCase(id) {\n  if (typeof id === 'number') {\n    return String(id);\n  } else {\n    id = id.replace(/[^a-z]/g, '');\n    return id[0].toLowerCase() + id.slice(1);\n  }\n}\n\nconst useStyles = makeStyles(theme => {\n  const styles = {\n    oceanFishIcon: {\n      display: 'inline-block',\n      width: '2.5em',\n      height: '2.5em',\n      margin: theme.spacing(0.5),\n      backgroundImage: `url(\"${'/images/ocean-fishing-icons.png'}\")`,\n      backgroundSize: `${ICON_COLS * 100}% ${ICON_ROWS * 100}%`,\n      verticalAlign: 'middle'\n    }\n  };\n\n  for (let row = 0; row < ICON_ROWS; ++row) {\n    for (let col = 0; col < ICONS_MAP[row].length; ++col) {\n      styles[camelCase(ICONS_MAP[row][col])] = {\n        backgroundPosition: `${col * -100}% ${row * -100}%`\n      };\n    }\n  }\n\n  return styles;\n});\n\nconst OceanFishIcon = ({\n  type,\n  id,\n  className\n}) => {\n  const classes = useStyles();\n  const router = useRouter();\n  const locale = router.locale;\n  let info;\n\n  switch (type) {\n    case 'fish':\n      info = fishes[id];\n      break;\n\n    case 'bait':\n      info = baits[id];\n      break;\n\n    case 'achievement':\n      info = achievements[id];\n      break;\n\n    case 'bonus-icon':\n      info = {\n        name_en: String(id)\n      };\n      break;\n  }\n\n  if (!info) {\n    console.error(`Could not find info for ${id} (${type})`);\n    info = {\n      name_en: String(id)\n    };\n  }\n\n  return /*#__PURE__*/_jsx(Tooltip, {\n    arrow: true,\n    placement: \"top\",\n    title: translate(info, 'name', locale),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: clsx(classes.oceanFishIcon, classes[camelCase(id)], className)\n    })\n  });\n};\n\nexport default /*#__PURE__*/React.memo(OceanFishIcon);","map":null,"metadata":{},"sourceType":"module"}