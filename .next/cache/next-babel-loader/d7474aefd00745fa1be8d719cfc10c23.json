{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport cn from 'classnames';\nimport EorzeaWeather from '@pillowfication/eorzea-weather';\nimport REGIONS from './regions';\nimport { getEorzeanTime, getLocalTime } from './get-eorzean-time';\nimport calculateWeathers from './calculate-weathers';\nimport { paddedZero } from '../utils';\nimport Section from '../Section';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport WeatherIcon from './WeatherIcon';\nconst ZONES = REGIONS.map(region => region.zones).flat();\nconst WEATHER_CELL_WIDTH = 75;\nconst BELL = 8 * 3600000 / (1440 / 70);\nconst eorzeaWeather = new EorzeaWeather({\n  locale: 'en'\n});\n\nfunction displayDate(date) {\n  return paddedZero(date.getHours()) + ':' + paddedZero(date.getMinutes());\n}\n\nconst useStyles = makeStyles(theme => ({\n  options: {\n    marginBottom: theme.spacing(2)\n  },\n  weatherTable: {\n    '& thead th': {\n      fontWeight: 'normal',\n      '&$current': {\n        fontWeight: 'bold'\n      }\n    },\n    ':not(:last-child) > &': {\n      marginBottom: theme.spacing(4)\n    }\n  },\n  weatherTime: {\n    textAlign: 'center',\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    '&:last-child': {\n      paddingRight: theme.spacing(1),\n      width: WEATHER_CELL_WIDTH + theme.spacing(1.5)\n    }\n  },\n  regionCell: {\n    minWidth: 200\n  },\n  weatherCell: {\n    width: WEATHER_CELL_WIDTH + theme.spacing(1),\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    textAlign: 'center',\n    verticalAlign: 'top',\n    lineHeight: 1,\n    '& span': {\n      display: 'inline-block',\n      width: WEATHER_CELL_WIDTH,\n      lineHeight: 1.1\n    },\n    '&:last-child': {\n      paddingRight: theme.spacing(1),\n      width: WEATHER_CELL_WIDTH + theme.spacing(1.5)\n    }\n  },\n  current: {\n    position: 'relative',\n    backgroundColor: theme.palette.action.hover\n  },\n  timeLine: {\n    position: 'absolute',\n    display: 'block',\n    top: 0,\n    left: 0,\n    bottom: -1,\n    width: ({\n      now\n    }) => {\n      if (!now) return 0;\n      const eorzeanTime = getEorzeanTime(now);\n      const hours = eorzeanTime.getUTCHours() % 8;\n      const minutes = hours * 60 + eorzeanTime.getUTCMinutes();\n      return `${minutes / 480 * 100}%`;\n    },\n    borderRight: `2px solid ${fade(theme.palette.action.hover, 0.2)}`\n  }\n}));\n\nconst UpcomingWeather = props => {\n  const {\n    now\n  } = props;\n  const {\n    0: filter,\n    1: setFilter\n  } = useState('none');\n  const {\n    0: showLabels,\n    1: setShowLabels\n  } = useState(true);\n  const {\n    0: showLocalTime,\n    1: setShowLocalTime\n  } = useState(false);\n  const {\n    0: showWeatherChance,\n    1: setShowWeatherChance\n  } = useState(false);\n  const classes = useStyles(props);\n  const router = useRouter();\n  const firstRender = useRef(false);\n  const cachedForecast = useRef(null);\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\n  const md = useMediaQuery(theme.breakpoints.up('md'));\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\n  useEffect(() => {\n    const queryFilter = REGIONS.find(region => region.query === router.query.filter) ? router.query.filter : 'none';\n\n    if (!firstRender.current && now || filter !== queryFilter) {\n      firstRender.current = true;\n      cachedForecast.current = null;\n      setFilter(queryFilter);\n    }\n\n    if (!now || getEorzeanTime(now).getUTCMinutes() === 0) {\n      cachedForecast.current = null;\n    }\n  });\n\n  const handleSelectFilter = event => {\n    const filter = event.target.value;\n    router.push({\n      pathname: router.pathname,\n      query: filter === 'none' ? null : {\n        filter\n      }\n    });\n  };\n\n  const handleToggleLabels = () => {\n    setShowLabels(!showLabels);\n  };\n\n  const handleToggleLocalTime = () => {\n    setShowLocalTime(!showLocalTime);\n  };\n\n  const handleToggleWeatherChance = () => {\n    setShowWeatherChance(!showWeatherChance);\n  };\n\n  return /*#__PURE__*/_jsxs(Section, {\n    title: \"Upcoming Weather\",\n    children: [/*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 1,\n      className: classes.options,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          variant: \"filled\",\n          fullWidth: true,\n          margin: \"dense\",\n          children: [/*#__PURE__*/_jsx(InputLabel, {\n            children: \"Select a region\"\n          }), /*#__PURE__*/_jsxs(Select, {\n            onChange: handleSelectFilter,\n            value: filter,\n            children: [/*#__PURE__*/_jsx(MenuItem, {\n              value: \"none\",\n              children: \"Show all regions\"\n            }), REGIONS.map(({\n              regionId,\n              query\n            }) => /*#__PURE__*/_jsx(MenuItem, {\n              value: query,\n              children: eorzeaWeather.translateRegion(regionId)\n            }, query))]\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsx(FormControlLabel, {\n          control: /*#__PURE__*/_jsx(Checkbox, {\n            checked: showLabels,\n            onChange: handleToggleLabels,\n            color: \"primary\"\n          }),\n          label: \"Show Labels\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsx(FormControlLabel, {\n          control: /*#__PURE__*/_jsx(Checkbox, {\n            checked: showLocalTime,\n            onChange: handleToggleLocalTime,\n            color: \"primary\"\n          }),\n          label: \"Show local times\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsx(FormControlLabel, {\n          control: /*#__PURE__*/_jsx(Checkbox, {\n            checked: showWeatherChance,\n            onChange: handleToggleWeatherChance,\n            color: \"primary\"\n          }),\n          label: /*#__PURE__*/_jsxs(_Fragment, {\n            children: [\"Show \", /*#__PURE__*/_jsx(\"code\", {\n              children: \"weatherChance\"\n            })]\n          })\n        })\n      })]\n    }), /*#__PURE__*/_jsx(NoSsr, {\n      children: (() => {\n        if (!now) return null;\n        const weathersCount = lg ? 9 : md ? 7 : sm ? 6 : 3;\n        const {\n          weathers,\n          weatherChances\n        } = cachedForecast.current || (cachedForecast.current = calculateWeathers(ZONES, 9, now));\n        const eorzeanTime = getEorzeanTime(now);\n        const timeChunk = Math.floor(eorzeanTime.getUTCHours() / 8) * 8;\n        const filteredRegion = filter !== 'none' && REGIONS.find(region => region.query === filter);\n        let currentBell = new Date(eorzeanTime.getTime());\n        currentBell.setUTCHours(timeChunk);\n        currentBell.setUTCMinutes(0);\n        currentBell.setUTCSeconds(0);\n        currentBell.setUTCMilliseconds(0);\n        currentBell = getLocalTime(currentBell);\n        return (filteredRegion ? [filteredRegion] : REGIONS).map(({\n          regionId,\n          zones\n        }) => /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: eorzeaWeather.translateRegion(regionId)\n          }), /*#__PURE__*/_jsx(TableContainer, {\n            children: /*#__PURE__*/_jsxs(Table, {\n              size: \"small\",\n              className: classes.weatherTable,\n              children: [/*#__PURE__*/_jsx(TableHead, {\n                children: /*#__PURE__*/_jsxs(TableRow, {\n                  children: [/*#__PURE__*/_jsx(TableCell, {}), Array(weathersCount + 1).fill().map((_, index) => /*#__PURE__*/_jsxs(TableCell, {\n                    className: cn(classes.weatherTime, index === 1 && classes.current),\n                    children: [showLocalTime ? index === 1 ? /*#__PURE__*/_jsxs(_Fragment, {\n                      children: [eorzeanTime.toString(), \" ET\", /*#__PURE__*/_jsx(\"br\", {}), displayDate(now), \" LT\"]\n                    }) : /*#__PURE__*/_jsxs(_Fragment, {\n                      children: [paddedZero((24 + timeChunk + 8 * (index - 1)) % 24) + ':00', \" ET\", /*#__PURE__*/_jsx(\"br\", {}), displayDate(new Date(currentBell.getTime() + BELL * (index - 1))), \" LT\"]\n                    }) : index === 1 ? eorzeanTime.toString() : paddedZero((24 + timeChunk + 8 * (index - 1)) % 24) + ':00', showWeatherChance && /*#__PURE__*/_jsxs(_Fragment, {\n                      children: [/*#__PURE__*/_jsx(\"br\", {}), paddedZero(weatherChances[index])]\n                    })]\n                  }, index))]\n                })\n              }), /*#__PURE__*/_jsx(TableBody, {\n                children: zones.map(zoneId => /*#__PURE__*/_jsxs(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsx(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    className: classes.regionCell,\n                    children: /*#__PURE__*/_jsx(Typography, {\n                      children: eorzeaWeather.translateZone(zoneId)\n                    })\n                  }), weathers[zoneId].slice(0, weathersCount + 1).map((weatherId, index) => /*#__PURE__*/_jsxs(TableCell, {\n                    className: cn(classes.weatherCell, {\n                      [classes.previous]: index === 0,\n                      [classes.current]: index === 1\n                    }),\n                    children: [index === 1 && /*#__PURE__*/_jsx(\"div\", {\n                      className: classes.timeLine\n                    }), /*#__PURE__*/_jsx(WeatherIcon, {\n                      weatherId: weatherId,\n                      showLabel: showLabels\n                    })]\n                  }, index))]\n                }, zoneId))\n              })]\n            })\n          })]\n        }, regionId));\n      })()\n    })]\n  });\n};\n\nexport default UpcomingWeather;","map":null,"metadata":{},"sourceType":"module"}