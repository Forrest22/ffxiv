{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport calculateVoyages, { LULU_EPOCH } from './calculate-voyages';\nimport { DEST_MAP, TIME_MAP, ROUTE_MAP, FISH_MAP, BLUE_FISH_MAP } from './maps';\nimport BAIT_GROUPS from './bait-groups';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Section from '../Section';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport RouteCardContainer from './RouteCardContainer';\nimport RouteCard from './RouteCard';\nimport BaitList from './BaitList';\nvar TIMES = 'DSN';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    headerSub: _defineProperty({\n      marginLeft: theme.spacing(2)\n    }, theme.breakpoints.down('xs'), {\n      marginLeft: '0',\n      display: 'block'\n    }),\n    headerTime: {\n      position: 'relative',\n      top: '-0.2em'\n    }\n  };\n});\nexport default function RouteInformation(props) {\n  var now = props.now,\n      selectedRoute = props.selectedRoute;\n  if (!now || !selectedRoute) return null;\n  var classes = useStyles();\n\n  var _selectedRoute = _slicedToArray(selectedRoute, 2),\n      name = _selectedRoute[0],\n      time = _selectedRoute[1];\n\n  var timeIndex = TIMES.indexOf(time);\n  var routeStops = ROUTE_MAP[name].map(function (dest, index) {\n    return dest + TIMES[(timeIndex + index + 1) % 3];\n  });\n  var next = calculateVoyages(now, 1, selectedRoute)[0];\n  var nextMoment = LULU_EPOCH.clone().add(next.day, 'days').add(next.hour, 'hours').utcOffset(moment().utcOffset());\n  var timeUntil = nextMoment.diff(now);\n  return __jsx(Section, {\n    title: __jsx(React.Fragment, null, DEST_MAP[name], \" \", __jsx(\"span\", {\n      className: classes.headerTime\n    }, TIME_MAP[time]), __jsx(Typography, {\n      display: \"inline\",\n      className: classes.headerSub\n    }, \"next is \", timeUntil <= 0 ? 'boarding now / en route' : \"\".concat(moment.duration(timeUntil).humanize(true), \" at \").concat(nextMoment.format('HH:mm'))))\n  }, __jsx(RouteCardContainer, null, routeStops.map(function (stop, index) {\n    return __jsx(RouteCard, {\n      key: index\n    }, __jsx(CardHeader, {\n      title: __jsx(Typography, {\n        variant: \"h6\"\n      }, index + 1, \". \", DEST_MAP[stop[0]], \" \", TIME_MAP[stop[1]]),\n      disableTypography: true\n    }), __jsx(CardContent, null, function () {\n      var baitGroups = FISH_MAP[stop[0]].map(function (fish) {\n        return {\n          header: fish,\n          baitGroup: BAIT_GROUPS[fish]\n        };\n      });\n      var blueFish = BLUE_FISH_MAP[stop];\n\n      if (blueFish) {\n        baitGroups.push({\n          header: blueFish,\n          baitGroup: BAIT_GROUPS[blueFish]\n        });\n      }\n\n      return __jsx(BaitList, {\n        baitGroups: baitGroups\n      });\n    }()));\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}