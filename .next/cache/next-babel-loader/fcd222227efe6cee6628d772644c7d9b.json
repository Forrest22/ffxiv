{"ast":null,"code":"import _slicedToArray from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport calculateVoyages from './calculate-voyages';\nimport { DEST_MAP, TIME_MAP, ROUTE_MAP, FISH_MAP, BLUE_FISH_MAP } from './maps';\nimport BAIT_GROUPS from './bait-groups';\nimport { timeUntil } from './utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Section from '../Section';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport RouteCardContainer from './RouteCardContainer';\nimport RouteCard from './RouteCard';\nimport FishPanel from './FishPanel';\nimport BaitList from './BaitList';\nvar TIMES = 'DSN';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    headerSub: _defineProperty({\n      marginLeft: theme.spacing(2)\n    }, theme.breakpoints.down('xs'), {\n      marginLeft: 0,\n      display: 'block'\n    }),\n    headerTime: {\n      position: 'relative',\n      top: '-0.2em'\n    }\n  };\n});\n\nvar RouteInformation = function RouteInformation(_ref) {\n  var now = _ref.now,\n      selectedRoute = _ref.selectedRoute,\n      checklist = _ref.checklist,\n      setChecklist = _ref.setChecklist;\n  if (!now || !selectedRoute) return null;\n  var classes = useStyles();\n\n  var _selectedRoute = _slicedToArray(selectedRoute, 2),\n      name = _selectedRoute[0],\n      time = _selectedRoute[1];\n\n  var timeIndex = TIMES.indexOf(time);\n  var routeStops = ROUTE_MAP[name].map(function (dest, index) {\n    return dest + TIMES[(timeIndex + index + 1) % 3];\n  });\n  var next = calculateVoyages(now, 1, selectedRoute)[0];\n\n  var _useState = useState(false),\n      showAllFish = _useState[0],\n      setShowAllFish = _useState[1];\n\n  var _useState2 = useState(0),\n      tab = _useState2[0],\n      setTab = _useState2[1];\n\n  var handleToggleShowAllFish = function handleToggleShowAllFish() {\n    setShowAllFish(!showAllFish);\n  };\n\n  var handleChangeTab = function handleChangeTab(event, value) {\n    setTab(value);\n  };\n\n  return /*#__PURE__*/_jsx(Section, {\n    title: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 12,\n        lg: 8,\n        children: [DEST_MAP[name], \" \", /*#__PURE__*/_jsx(\"span\", {\n          className: classes.headerTime,\n          children: TIME_MAP[time]\n        }), /*#__PURE__*/_jsx(Typography, {\n          display: \"inline\",\n          className: classes.headerSub,\n          children: timeUntil(now, next.time, true)\n        })]\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        lg: 4,\n        align: \"right\",\n        children: /*#__PURE__*/_jsx(FormControlLabel, {\n          control: /*#__PURE__*/_jsx(Checkbox, {\n            checked: showAllFish,\n            onChange: handleToggleShowAllFish,\n            color: \"primary\"\n          }),\n          label: \"Show all fish\"\n        })\n      })]\n    }),\n    children: function () {\n      if (showAllFish) {\n        return /*#__PURE__*/_jsxs(Card, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsx(Tabs, {\n            variant: \"fullWidth\",\n            value: tab,\n            onChange: handleChangeTab,\n            children: routeStops.map(function (stop, index) {\n              return /*#__PURE__*/_jsx(Tab, {\n                label: /*#__PURE__*/_jsxs(_Fragment, {\n                  children: [index + 1, \". \", DEST_MAP[stop[0]], \" \", TIME_MAP[stop[1]]]\n                })\n              }, index);\n            })\n          }), routeStops.map(function (stop, index) {\n            return /*#__PURE__*/_jsx(FishPanel, {\n              tab: tab,\n              index: index,\n              stop: stop,\n              checklist: checklist,\n              setChecklist: setChecklist\n            }, index);\n          })]\n        });\n      } else {\n        return /*#__PURE__*/_jsx(RouteCardContainer, {\n          children: routeStops.map(function (stop, index) {\n            return /*#__PURE__*/_jsxs(RouteCard, {\n              children: [/*#__PURE__*/_jsx(CardHeader, {\n                title: /*#__PURE__*/_jsxs(Typography, {\n                  variant: \"h6\",\n                  children: [index + 1, \". \", DEST_MAP[stop[0]], \" \", TIME_MAP[stop[1]]]\n                }),\n                disableTypography: true\n              }), /*#__PURE__*/_jsx(CardContent, {\n                children: function () {\n                  var baitGroups = FISH_MAP[stop[0]].map(function (fish) {\n                    return {\n                      header: fish,\n                      baitGroup: BAIT_GROUPS[fish]\n                    };\n                  });\n                  var blueFish = BLUE_FISH_MAP[stop];\n\n                  if (blueFish) {\n                    baitGroups.push({\n                      header: blueFish,\n                      baitGroup: BAIT_GROUPS[blueFish]\n                    });\n                  }\n\n                  return /*#__PURE__*/_jsx(BaitList, {\n                    baitGroups: baitGroups\n                  });\n                }()\n              })]\n            }, index);\n          })\n        });\n      }\n    }()\n  });\n};\n\nexport default RouteInformation;","map":null,"metadata":{},"sourceType":"module"}