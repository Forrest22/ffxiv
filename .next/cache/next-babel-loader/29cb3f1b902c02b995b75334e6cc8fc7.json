{"ast":null,"code":"import _toConsumableArray from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Popper from '@material-ui/core/Popper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport OceanFishPopper from './OceanFishPopper';\nimport { fishes, baits, achievements } from './gists/data/ocean-fish-data.json'; // import ICONS_URL from './gists/data/ocean-fishing-icons.png'\n\nimport ICONS_MAP from './gists/data/ocean-fishing-icons-map.json';\nimport { translate } from './utils';\nvar ICON_ROWS = ICONS_MAP.length;\nvar ICON_COLS = Math.max.apply(Math, _toConsumableArray(ICONS_MAP.map(function (row) {\n  return row.length;\n})));\n\nfunction camelCase(id) {\n  if (typeof id === 'number') {\n    return String(id);\n  } else {\n    id = id.replace(/[^a-z]/g, '');\n    return id[0].toLowerCase() + id.slice(1);\n  }\n}\n\nvar useStyles = makeStyles(function (theme) {\n  var styles = {\n    iconContainer: {\n      display: 'inline-block',\n      width: function width(_ref) {\n        var size = _ref.size;\n        return size * 1.2;\n      },\n      height: function height(_ref2) {\n        var size = _ref2.size;\n        return size * 1.1;\n      },\n      position: 'relative',\n      margin: theme.spacing(0.5, 0.25),\n      verticalAlign: 'middle'\n    },\n    oceanFishIcon: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: function width(_ref3) {\n        var size = _ref3.size;\n        return size;\n      },\n      height: function height(_ref4) {\n        var size = _ref4.size;\n        return size;\n      },\n      margin: function margin(_ref5) {\n        var size = _ref5.size;\n        return \"\".concat(size * 0.05, \"px \").concat(size * 0.1, \"px\");\n      },\n      backgroundImage: \"url(\\\"\".concat('/images/ocean-fishing-icons.png', \"\\\")\"),\n      backgroundSize: \"\".concat(ICON_COLS * 100, \"% \").concat(ICON_ROWS * 100, \"%\")\n    },\n    iconOverlay: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: function width(_ref6) {\n        var size = _ref6.size;\n        return size * 1.2;\n      }\n    },\n    hasPopper: {\n      cursor: 'pointer'\n    }\n  };\n\n  for (var row = 0; row < ICON_ROWS; ++row) {\n    for (var col = 0; col < ICONS_MAP[row].length; ++col) {\n      styles[camelCase(ICONS_MAP[row][col])] = {\n        backgroundPosition: \"\".concat(col * -100, \"% \").concat(row * -100, \"%\")\n      };\n    }\n  }\n\n  return styles;\n});\n\nvar OceanFishIcon = function OceanFishIcon(_ref7) {\n  var type = _ref7.type,\n      id = _ref7.id,\n      _ref7$size = _ref7.size,\n      size = _ref7$size === void 0 ? 40 : _ref7$size,\n      className = _ref7.className;\n  var classes = useStyles({\n    size: size\n  });\n  var router = useRouter();\n\n  var _useState = useState(null),\n      anchorEl = _useState[0],\n      setAnchorEl = _useState[1];\n\n  var locale = router.locale;\n\n  var handleClick = function handleClick(event) {\n    if (type === 'fish' && !anchorEl) {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  var handleClickAway = function handleClickAway() {\n    setAnchorEl(null);\n  };\n\n  var info;\n  var overlayUrl;\n\n  switch (type) {\n    case 'fish':\n      info = fishes[id];\n      overlayUrl = '/images/item-overlay.png';\n      break;\n\n    case 'bait':\n      info = baits[id];\n      overlayUrl = '/images/item-overlay.png';\n      break;\n\n    case 'achievement':\n      info = achievements[id];\n      overlayUrl = '/images/achievement-overlay.png';\n      break;\n\n    case 'bonus-icon':\n      info = {\n        name_en: String(id)\n      };\n      break;\n  }\n\n  if (!info) {\n    console.error(\"Could not find info for \".concat(id, \" (\").concat(type, \")\"));\n    info = {\n      name_en: String(id)\n    };\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Tooltip, {\n      arrow: true,\n      placement: \"top\",\n      title: translate(locale, info, 'name'),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: clsx(classes.iconContainer, type === 'fish' && classes.hasPopper, className),\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: clsx(classes.oceanFishIcon, classes[camelCase(id)])\n        }), overlayUrl && /*#__PURE__*/_jsx(\"img\", {\n          src: overlayUrl,\n          className: classes.iconOverlay\n        })]\n      })\n    }), type === 'fish' && /*#__PURE__*/_jsx(Popper, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      children: /*#__PURE__*/_jsx(ClickAwayListener, {\n        onClickAway: handleClickAway,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(OceanFishPopper, {\n            id: id\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(OceanFishIcon);","map":null,"metadata":{},"sourceType":"module"}