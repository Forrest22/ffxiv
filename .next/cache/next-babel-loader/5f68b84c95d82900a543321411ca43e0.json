{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cn from 'classnames';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  cell: {\n    width: '5em',\n    height: '5em',\n    backgroundColor: theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[100],\n    borderRadius: 0,\n    [theme.breakpoints.up('md')]: {\n      width: '7.5em',\n      height: '7.5em'\n    }\n  },\n  cellInput: {\n    textAlign: 'center',\n    fontSize: '2.5em',\n    [theme.breakpoints.up('md')]: {\n      fontSize: '4em'\n    }\n  },\n  suggested: {\n    backgroundColor: fade(theme.palette.primary.main, 0.2)\n  },\n  error: {\n    backgroundColor: fade(theme.palette.error.main, 0.25)\n  }\n}));\n\nconst CalculatorCell = ({\n  value,\n  suggested,\n  error,\n  onInputDigit\n}) => {\n  const classes = useStyles();\n\n  const handleInputDigit = event => {\n    const {\n      key\n    } = event;\n\n    if (key === 'Backspace' || key === 'Delete') {\n      onInputDigit(null);\n    } else {\n      const digit = Number(key);\n\n      if (digit >= 1 && digit <= 9) {\n        onInputDigit(digit);\n      }\n    }\n  };\n\n  return __jsx(TextField, {\n    variant: \"outlined\",\n    error: error,\n    InputProps: {\n      className: cn(classes.cell, suggested && classes.suggested, error && classes.error)\n    },\n    inputProps: {\n      className: classes.cellInput\n    },\n    onKeyDown: handleInputDigit,\n    value: value || ''\n  });\n};\n\nexport default CalculatorCell;","map":null,"metadata":{},"sourceType":"module"}