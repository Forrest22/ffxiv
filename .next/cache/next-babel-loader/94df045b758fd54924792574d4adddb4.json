{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport AchievementInformation from './AchievementInformation';\nimport RouteCardContainer from './RouteCardContainer';\nimport RouteCard from './RouteCard';\nimport BaitList from './BaitList';\nimport { getStops, getBaitGroup } from './utils';\n\nconst AchievementBalloons = ({\n  selectedRoute\n}) => {\n  const stops = getStops(selectedRoute);\n  return /*#__PURE__*/_jsx(AchievementInformation, {\n    achievement: 2754,\n    subtitle: \"catch 250 balloons (31.25 each)\",\n    children: /*#__PURE__*/_jsxs(RouteCardContainer, {\n      children: [/*#__PURE__*/_jsxs(RouteCard, {\n        index: 0,\n        stop: stops[0],\n        children: [/*#__PURE__*/_jsx(CardContent, {\n          children: /*#__PURE__*/_jsx(BaitList, {\n            baitGroups: [{\n              header: 'IC–DH at 5-10s',\n              baitGroupProps: _objectSpread({\n                showDH: true\n              }, getBaitGroup(32057))\n            }, {\n              header: 'DH at <5s',\n              baitGroupProps: _objectSpread({\n                showDH: true\n              }, getBaitGroup(32066))\n            }]\n          })\n        }), /*#__PURE__*/_jsxs(CardContent, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"overline\",\n            children: \"Non-spectral\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            paragraph: true,\n            children: \"In general, IC\\u2013DH when possible and don\\u2019t rely heavily on spectrals.\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"overline\",\n            children: \"Spectral\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            paragraph: true,\n            children: \"Anomalocaris Saron appears at 5s.\"\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(RouteCard, {\n        index: 1,\n        stop: stops[1],\n        children: [/*#__PURE__*/_jsx(CardContent, {\n          children: /*#__PURE__*/_jsx(BaitList, {\n            baitGroups: [{\n              header: 'IC–DH at 10-16s',\n              baitGroupProps: _objectSpread({\n                showDH: true\n              }, getBaitGroup(29732))\n            }, {\n              header: 'IC–DH at 2-6s',\n              baitGroupProps: _objectSpread({\n                showDH: true\n              }, getBaitGroup(29768))\n            }]\n          })\n        }), /*#__PURE__*/_jsxs(CardContent, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            paragraph: true,\n            children: \"You may opt for no spectral here for an extended one in the next zone.\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"overline\",\n            children: \"Non-spectral\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            paragraph: true,\n            children: \"Lampfish can probably be a blind DH.\"\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(RouteCard, {\n        index: 2,\n        stop: stops[2],\n        children: [/*#__PURE__*/_jsx(CardContent, {\n          children: /*#__PURE__*/_jsx(BaitList, {\n            baitGroups: [{\n              header: 'No buffs at 2-5s',\n              baitGroupProps: _objectSpread({\n                showDH: true\n              }, getBaitGroup(32095))\n            }, {\n              header: 'DH at ≥11s',\n              baitGroupProps: _objectSpread({\n                showDH: true\n              }, getBaitGroup(32098))\n            }, {\n              header: 'IC–DH',\n              baitGroupProps: _objectSpread({\n                showDH: true\n              }, getBaitGroup(32105))\n            }, {\n              header: 'IC–DH',\n              baitGroupProps: _objectSpread({\n                showDH: true\n              }, getBaitGroup(32109))\n            }]\n          })\n        }), /*#__PURE__*/_jsxs(CardContent, {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"overline\",\n            children: \"Non-spectral\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            paragraph: true,\n            children: \"Save GP when possible to blind DH Honeycomb Fish.\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"overline\",\n            children: \"Spectral\"\n          }), /*#__PURE__*/_jsx(Typography, {\n            paragraph: true,\n            children: \"Switch to Krill to go for both Garum Jugs and Pearl Bombfish.\"\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nexport default AchievementBalloons;","map":null,"metadata":{},"sourceType":"module"}