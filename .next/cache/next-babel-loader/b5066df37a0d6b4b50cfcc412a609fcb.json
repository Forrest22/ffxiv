{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Popper from '@material-ui/core/Popper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport OceanFishPopper from './OceanFishPopper';\nimport { fishes, baits, achievements } from './gists/data/ocean-fish-data.json'; // import ICONS_URL from './gists/data/ocean-fishing-icons.png'\n\nimport ICONS_MAP from './gists/data/ocean-fishing-icons-map.json';\nimport { translate } from './utils';\nconst ICON_ROWS = ICONS_MAP.length;\nconst ICON_COLS = Math.max(...ICONS_MAP.map(row => row.length));\n\nfunction camelCase(id) {\n  if (typeof id === 'number') {\n    return String(id);\n  } else {\n    id = id.replace(/[^a-z]/g, '');\n    return id[0].toLowerCase() + id.slice(1);\n  }\n}\n\nconst useStyles = makeStyles(theme => {\n  const styles = {\n    iconContainer: {\n      display: 'inline-block',\n      width: ({\n        size\n      }) => size * 1.2,\n      height: ({\n        size\n      }) => size * 1.1,\n      position: 'relative',\n      margin: theme.spacing(0.5, 0.25),\n      verticalAlign: 'middle'\n    },\n    oceanFishIcon: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: ({\n        size\n      }) => size,\n      height: ({\n        size\n      }) => size,\n      margin: ({\n        size\n      }) => `${size * 0.05}px ${size * 0.1}px`,\n      backgroundImage: `url(\"${'/images/ocean-fishing-icons.png'}\")`,\n      backgroundSize: `${ICON_COLS * 100}% ${ICON_ROWS * 100}%`\n    },\n    iconOverlay: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: ({\n        size\n      }) => size * 1.2\n    },\n    hasPopper: {\n      cursor: 'pointer'\n    }\n  };\n\n  for (let row = 0; row < ICON_ROWS; ++row) {\n    for (let col = 0; col < ICONS_MAP[row].length; ++col) {\n      styles[camelCase(ICONS_MAP[row][col])] = {\n        backgroundPosition: `${col * -100}% ${row * -100}%`\n      };\n    }\n  }\n\n  return styles;\n});\n\nconst OceanFishIcon = ({\n  type,\n  id,\n  size = 40,\n  className\n}) => {\n  const classes = useStyles({\n    size\n  });\n  const router = useRouter();\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const locale = router.locale;\n\n  const handleClick = event => {\n    if (type === 'fish' && !anchorEl) {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleClickAway = () => {\n    setAnchorEl(null);\n  };\n\n  let info;\n  let overlayUrl;\n\n  switch (type) {\n    case 'fish':\n      info = fishes[id];\n      overlayUrl = '/images/item-overlay.png';\n      break;\n\n    case 'bait':\n      info = baits[id];\n      overlayUrl = '/images/item-overlay.png';\n      break;\n\n    case 'achievement':\n      info = achievements[id];\n      overlayUrl = '/images/achievement-overlay.png';\n      break;\n\n    case 'bonus-icon':\n      info = {\n        name_en: String(id)\n      };\n      break;\n  }\n\n  if (!info) {\n    console.error(`Could not find info for ${id} (${type})`);\n    info = {\n      name_en: String(id)\n    };\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Tooltip, {\n      arrow: true,\n      placement: \"top\",\n      title: translate(locale, info, 'name'),\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: clsx(classes.iconContainer, type === 'fish' && classes.hasPopper, className),\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: clsx(classes.oceanFishIcon, classes[camelCase(id)])\n        }), overlayUrl && /*#__PURE__*/_jsx(\"img\", {\n          src: overlayUrl,\n          className: classes.iconOverlay\n        })]\n      })\n    }), type === 'fish' && /*#__PURE__*/_jsx(Popper, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      placement: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(ClickAwayListener, {\n        onClickAway: handleClickAway,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(OceanFishPopper, {\n            id: id\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(OceanFishIcon);","map":null,"metadata":{},"sourceType":"module"}