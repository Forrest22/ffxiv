{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport CheckIcon from '@material-ui/icons/Check';\nimport OceanFishIcon from './OceanFishIcon';\nimport TimeIcon from './TimeIcon';\nimport Tug from './Tug';\nimport WeatherIcon from '../skywatcher/WeatherIcon';\nimport { fishingSpots, fishes } from './gists/data/ocean-fish-data.json';\nimport { getFish, getFishInfo, getBait, translate } from './utils';\nimport i18n from '../../i18n';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    table: {\n      '& td': {\n        fontSize: '0.9em',\n        padding: 0\n      }\n    },\n    check: {\n      padding: 10\n    },\n    stars: {\n      marginTop: '-0.3em',\n      opacity: 0.8\n    },\n    count: {\n      verticalAlign: 'middle'\n    },\n    intuition: {\n      position: 'relative',\n      verticalAlign: 'middle',\n      margin: '2px 2px 0'\n    },\n    tug: {\n      fontSize: '1.33em'\n    },\n    disabled: {\n      backgroundColor: theme.palette.type === 'dark' ? '#333333' : '#DDDDDD',\n      opacity: 0.5\n    },\n    unchecked: {\n      opacity: 0.33\n    },\n    checked: {\n      color: 'green'\n    }\n  };\n});\n\nvar FishTable = function FishTable(_ref) {\n  var spots = _ref.spots,\n      time = _ref.time,\n      checklist = _ref.checklist,\n      setChecklist = _ref.setChecklist,\n      t = _ref.t,\n      i18n = _ref.i18n;\n  var classes = useStyles();\n\n  var toggleFish = function toggleFish(fishId) {\n    if (checklist.includes(fishId)) {\n      var copy = checklist.slice();\n      copy.splice(copy.findIndex(function (id) {\n        return id === fishId;\n      }), 1);\n      setChecklist(copy);\n    } else {\n      var _copy = checklist.slice();\n\n      _copy.push(fishId);\n\n      _copy.sort(function (a, b) {\n        return a - b;\n      });\n\n      setChecklist(_copy);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(TableContainer, {\n    children: /*#__PURE__*/_jsx(Table, {\n      size: \"small\",\n      className: classes.table,\n      children: spots.map(function (spotId) {\n        var fishingSpot = fishingSpots[spotId];\n        var isSpectral = /spectral/i.test(fishingSpot.place_name_en);\n        return /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsx(TableHead, {\n            children: /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                colSpan: 3,\n                align: \"center\",\n                children: t('fish')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('bait')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('tug')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('bite-time')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('points')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('double-hook')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t(isSpectral ? 'time-of-day' : 'weather')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('category')\n              })]\n            })\n          }), /*#__PURE__*/_jsx(TableBody, {\n            children: fishingSpot.fishes.map(function (fishId) {\n              var fish = fishes[fishId];\n              var fishInfo = getFishInfo(fish.name_en);\n              return /*#__PURE__*/_jsxs(TableRow, {\n                hover: true,\n                className: clsx(time && fishInfo.time && fishInfo.time.indexOf(time) === -1 && classes.disabled),\n                children: [/*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsx(IconButton, {\n                    className: clsx(classes.check, checklist.includes(fish.id) ? classes.checked : classes.unchecked),\n                    onClick: toggleFish.bind(null, fish.id),\n                    children: /*#__PURE__*/_jsx(CheckIcon, {})\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  children: /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"fish\",\n                    id: fish.id\n                  })\n                }), /*#__PURE__*/_jsxs(TableCell, {\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    children: /*#__PURE__*/_jsx(Typography, {\n                      children: translate(i18n.language, fish, 'name')\n                    })\n                  }), fishInfo.stars && /*#__PURE__*/_jsx(\"div\", {\n                    className: classes.stars,\n                    children: 'â˜…'.repeat(fishInfo.stars)\n                  })]\n                }), /*#__PURE__*/_jsxs(TableCell, {\n                  align: \"center\",\n                  children: [fishInfo.intuition && /*#__PURE__*/_jsxs(_Fragment, {\n                    children: [fishInfo.intuition.map(function (intuitionFish, index) {\n                      return /*#__PURE__*/_jsxs(React.Fragment, {\n                        children: [/*#__PURE__*/_jsx(Typography, {\n                          className: classes.count,\n                          display: \"inline\",\n                          children: index === 0 ? \"\".concat(intuitionFish.count, \"\\xD7\") : \", \".concat(intuitionFish.count, \"\\xD7\")\n                        }), /*#__PURE__*/_jsx(OceanFishIcon, {\n                          type: \"fish\",\n                          id: getFish(intuitionFish.name).id\n                        })]\n                      }, index);\n                    }), /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/images/fishers-intuition.png\",\n                      className: classes.intuition\n                    })]\n                  }), [fishInfo.bait, fishInfo.mooch].filter(function (x) {\n                    return x;\n                  }).map(function (bait, index) {\n                    return /*#__PURE__*/_jsxs(React.Fragment, {\n                      children: [index > 0 && 'or', getBait(bait) && /*#__PURE__*/_jsx(OceanFishIcon, {\n                        type: \"bait\",\n                        id: getBait(bait).id\n                      }), getFish(bait) && /*#__PURE__*/_jsx(OceanFishIcon, {\n                        type: \"fish\",\n                        id: getFish(bait).id\n                      })]\n                    }, bait);\n                  })]\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.tug && /*#__PURE__*/_jsx(Tug, {\n                    strength: fishInfo.tug,\n                    className: classes.tug\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.timer && /*#__PURE__*/_jsx(Typography, {\n                    children: fishInfo.timer[0] === fishInfo.timer[1] ? fishInfo.timer[0] : fishInfo.timer.join('-')\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.points && /*#__PURE__*/_jsx(Typography, {\n                    children: fishInfo.points\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.doubleHook && /*#__PURE__*/_jsx(Typography, {\n                    children: Array.isArray(fishInfo.doubleHook) ? fishInfo.doubleHook.join('-') : fishInfo.doubleHook\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: function () {\n                    if (isSpectral) {\n                      return fishInfo.time === 'DSN' ? 'Any' : fishInfo.time && fishInfo.time.split('').map(function (time) {\n                        return /*#__PURE__*/_jsx(TimeIcon, {\n                          time: time\n                        }, time);\n                      });\n                    } else {\n                      if (!fishInfo.weathers) return null;\n\n                      switch (fishInfo.weathers.type) {\n                        case 'ALL':\n                          return 'Any';\n\n                        case 'OK':\n                          return fishInfo.weathers.list.map(function (weather) {\n                            return /*#__PURE__*/_jsx(WeatherIcon, {\n                              weatherId: weather,\n                              showLabel: false\n                            }, weather);\n                          });\n\n                        case 'NOT OK':\n                          return /*#__PURE__*/_jsxs(_Fragment, {\n                            children: [/*#__PURE__*/_jsx(\"span\", {\n                              style: {\n                                verticalAlign: 'super'\n                              },\n                              children: \"Not\\xA0\"\n                            }), fishInfo.weathers.list.map(function (weather) {\n                              return /*#__PURE__*/_jsx(WeatherIcon, {\n                                weatherId: weather,\n                                showLabel: false\n                              }, weather);\n                            })]\n                          });\n                      }\n                    }\n                  }()\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.category && /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"bonus-icon\",\n                    id: fishInfo.category,\n                    size: 30\n                  })\n                })]\n              }, fishId);\n            })\n          })]\n        }, spotId);\n      })\n    })\n  });\n};\n\nexport default i18n.withTranslation('ocean-fishing')(FishTable);","map":null,"metadata":{},"sourceType":"module"}