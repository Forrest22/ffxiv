{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport cn from 'classnames';\nimport { TIME_MAP } from './maps';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport CheckIcon from '@material-ui/icons/Check';\nimport OceanFishIcon from './OceanFishIcon';\nimport Tug from './Tug';\nimport WeatherIcon from '../skywatcher/WeatherIcon';\nimport FISH from './gists/fish.json';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    table: {\n      '& td': {\n        padding: 0\n      }\n    },\n    stars: {\n      marginTop: '-0.3em',\n      opacity: 0.8\n    },\n    tug: {\n      fontSize: '1.33em'\n    },\n    category: {\n      fontSize: '0.75em'\n    },\n    disabled: {\n      backgroundColor: theme.palette.type === 'dark' ? '#333333' : '#DDDDDD',\n      opacity: 0.5\n    },\n    unchecked: {\n      opacity: 0.33\n    },\n    checked: {\n      color: 'green'\n    }\n  };\n});\n\nvar FishTable = function FishTable(_ref) {\n  var regions = _ref.regions,\n      time = _ref.time,\n      checklist = _ref.checklist,\n      setChecklist = _ref.setChecklist;\n  var classes = useStyles();\n  return /*#__PURE__*/_jsx(Table, {\n    size: \"small\",\n    className: classes.table,\n    children: regions.map(function (region, index) {\n      return /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(TableHead, {\n          children: /*#__PURE__*/_jsxs(TableRow, {\n            children: [/*#__PURE__*/_jsx(TableCell, {\n              colSpan: 3,\n              align: \"center\",\n              children: \"Fish\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Bait\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Tug\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Points\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Double Hook\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Line Time\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Time\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Weather\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Category\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(TableBody, {\n          children: FISH[region].map(function (fish) {\n            return /*#__PURE__*/_jsxs(TableRow, {\n              hover: true,\n              className: cn(time && fish.time && fish.time.indexOf(time) === -1 && classes.disabled),\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsx(IconButton, {\n                  className: checklist.includes(fish.name) ? classes.checked : classes.unchecked,\n                  onClick: function onClick() {\n                    if (checklist.includes(fish.name)) {\n                      var copy = checklist.slice();\n                      copy.splice(copy.findIndex(function (x) {\n                        return x === fish.name;\n                      }), 1);\n                      setChecklist(copy);\n                    } else {\n                      var _copy = checklist.slice();\n\n                      _copy.push(fish.name);\n\n                      setChecklist(_copy);\n                    }\n                  },\n                  children: /*#__PURE__*/_jsx(CheckIcon, {})\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                children: /*#__PURE__*/_jsx(OceanFishIcon, {\n                  name: fish.name\n                })\n              }), /*#__PURE__*/_jsxs(TableCell, {\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  children: /*#__PURE__*/_jsx(Typography, {\n                    children: fish.name\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: classes.stars,\n                  children: 'â˜…'.repeat(fish.stars)\n                })]\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: [fish.bait, fish.mooch].filter(function (x) {\n                  return x;\n                }).map(function (bait) {\n                  return /*#__PURE__*/_jsx(OceanFishIcon, {\n                    name: bait\n                  }, bait);\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fish.tug && /*#__PURE__*/_jsx(Tug, {\n                  strength: fish.tug,\n                  className: classes.tug\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: fish.points\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: Array.isArray(fish.doubleHook) ? fish.doubleHook.join(', ') : fish.doubleHook\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: Array.isArray(fish.timer) ? fish.timer.join('-') : fish.timer\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fish.time === 'DSN' ? /*#__PURE__*/_jsx(Typography, {\n                  children: \"Any\"\n                }) : fish.time.split('').map(function (time) {\n                  return TIME_MAP[time];\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fish.weathers && function () {\n                  switch (fish.weathers.type) {\n                    case 'ALL':\n                      return /*#__PURE__*/_jsx(Typography, {\n                        children: \"Any\"\n                      });\n\n                    case 'OK':\n                      return fish.weathers.list.map(function (weather) {\n                        return /*#__PURE__*/_jsx(WeatherIcon, {\n                          weatherId: weather,\n                          showLabel: false\n                        }, weather);\n                      });\n\n                    case 'NOT OK':\n                      return /*#__PURE__*/_jsxs(_Fragment, {\n                        children: [/*#__PURE__*/_jsx(\"span\", {\n                          style: {\n                            verticalAlign: 'super'\n                          },\n                          children: \"Not\\xA0\"\n                        }), fish.weathers.list.map(function (weather) {\n                          return /*#__PURE__*/_jsx(WeatherIcon, {\n                            weatherId: weather,\n                            showLabel: false\n                          }, weather);\n                        })]\n                      });\n                  }\n                }()\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fish.category && /*#__PURE__*/_jsx(OceanFishIcon, {\n                  name: {\n                    octopus: 'Octopus Travelers',\n                    shark: 'Certifiable Shark Hunters',\n                    jellyfish: 'Jelled Together',\n                    seadragon: 'Maritime Dragonslayers',\n                    balloon: 'Balloon Catchers',\n                    crab: 'Crab Boat Crew',\n                    manta: 'Sticking it to the Manta'\n                  }[fish.category],\n                  className: classes.category\n                })\n              })]\n            }, fish.name);\n          })\n        })]\n      }, index);\n    })\n  });\n};\n\nexport default FishTable;","map":null,"metadata":{},"sourceType":"module"}