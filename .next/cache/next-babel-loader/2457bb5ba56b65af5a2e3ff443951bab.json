{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Section from '../Section';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport HighOrLowCard from './HighOrLowCard';\nimport calculateHighOrLow from './calculate-high-or-low';\n\nfunction toPercent(p, q) {\n  return (p / q * 100 | 0) + '%';\n}\n\nconst useStyles = makeStyles(theme => ({\n  cardsContainer: {\n    textAlign: 'center',\n    whiteSpace: 'nowrap',\n    overflowX: 'auto'\n  }\n}));\n\nconst Calculator = () => {\n  const {\n    0: tb1,\n    1: setTb1\n  } = useState(null);\n  const {\n    0: tb2,\n    1: setTb2\n  } = useState(null);\n  const {\n    0: me,\n    1: setMe\n  } = useState(null);\n  const classes = useStyles();\n  const {\n    err,\n    tb1Err,\n    tb2Err,\n    meErr,\n    high,\n    low,\n    both\n  } = calculateHighOrLow(tb1, tb2, me);\n\n  const handleClickReset = event => {\n    setTb1(null);\n    setTb2(null);\n    setMe(null);\n  };\n\n  return /*#__PURE__*/_jsx(Section, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.cardsContainer,\n      children: [/*#__PURE__*/_jsx(HighOrLowCard, {\n        value: tb1,\n        error: tb1Err,\n        onInputDigit: setTb1\n      }), /*#__PURE__*/_jsx(HighOrLowCard, {\n        value: tb2,\n        error: tb2Err,\n        onInputDigit: setTb2\n      }), /*#__PURE__*/_jsx(HighOrLowCard, {\n        disabled: true\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(HighOrLowCard, {\n        value: me,\n        error: meErr,\n        onInputDigit: setMe\n      }), /*#__PURE__*/_jsx(HighOrLowCard, {\n        disabled: true\n      }), /*#__PURE__*/_jsx(HighOrLowCard, {\n        disabled: true\n      }), /*#__PURE__*/_jsx(\"br\", {}), (() => {\n        switch (err) {\n          case 'INCOMPLETE':\n            return /*#__PURE__*/_jsx(Typography, {\n              paragraph: true,\n              children: \"Input cards above\"\n            });\n\n          case 'DUPLICATE':\n            return /*#__PURE__*/_jsx(Typography, {\n              paragraph: true,\n              children: \"Cannot have duplicate cards\"\n            });\n\n          default:\n            {\n              const sum = high + low + both;\n\n              if (high > low) {\n                return /*#__PURE__*/_jsxs(Typography, {\n                  paragraph: true,\n                  children: [\"You are \", /*#__PURE__*/_jsx(\"b\", {\n                    children: \"High\"\n                  }), \" (\", toPercent(high, sum), \")\"]\n                });\n              } else if (high < low) {\n                return /*#__PURE__*/_jsxs(Typography, {\n                  paragraph: true,\n                  children: [\"You are \", /*#__PURE__*/_jsx(\"b\", {\n                    children: \"Low\"\n                  }), \" (\", toPercent(low, sum), \")\"]\n                });\n              } else {\n                return /*#__PURE__*/_jsxs(Typography, {\n                  paragraph: true,\n                  children: [\"You are \", /*#__PURE__*/_jsx(\"b\", {\n                    children: \"High\"\n                  }), \" or \", /*#__PURE__*/_jsx(\"b\", {\n                    children: \"Low\"\n                  }), \" (\", toPercent(low, sum), \")\"]\n                });\n              }\n            }\n        }\n      })(), /*#__PURE__*/_jsx(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: handleClickReset,\n        children: \"Reset\"\n      })]\n    })\n  });\n};\n\nexport default Calculator;","map":null,"metadata":{},"sourceType":"module"}