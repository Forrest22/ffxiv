{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cn from 'classnames';\nimport EorzeaWeather from '@pillowfication/eorzea-weather';\nimport Typography from '@material-ui/core/Typography';\nvar WEATHERS = [EorzeaWeather.WEATHER_CLEAR_SKIES, EorzeaWeather.WEATHER_FAIR_SKIES, EorzeaWeather.WEATHER_CLOUDS, EorzeaWeather.WEATHER_WIND, EorzeaWeather.WEATHER_GALES, EorzeaWeather.WEATHER_FOG, EorzeaWeather.WEATHER_RAIN, EorzeaWeather.WEATHER_SHOWERS, EorzeaWeather.WEATHER_THUNDER, EorzeaWeather.WEATHER_THUNDERSTORMS, EorzeaWeather.WEATHER_DUST_STORMS, 'sandstorms', // EorzeaWeather.WEATHER_SANDSTORMS,\nEorzeaWeather.WEATHER_HEAT_WAVES, 'hotSpells', // EorzeaWeather.WEATHER_HOT_SPELLS,\nEorzeaWeather.WEATHER_SNOW, EorzeaWeather.WEATHER_BLIZZARDS, EorzeaWeather.WEATHER_GLOOM, EorzeaWeather.WEATHER_UMBRAL_STATIC, EorzeaWeather.WEATHER_UMBRAL_WIND];\nvar WEATHER_THUNDERSTORM = 'Thunder' + String.fromCharCode(173) + 'storms';\nvar useStyles = makeStyles(function (theme) {\n  var styles = {\n    weatherIcon: {\n      display: 'inline-block',\n      width: '30px',\n      height: '30px',\n      backgroundImage: 'url(\"./images/weather-icons.png\")',\n      backgroundSize: \"\".concat(WEATHERS.length * 100, \"% 100%\")\n    }\n  };\n  WEATHERS.forEach(function (weatherId, index) {\n    styles[weatherId] = {\n      backgroundPosition: \"\".concat(index * -100, \"% 0%\")\n    };\n  });\n  return styles;\n});\n\nvar WeatherIcon = function WeatherIcon(_ref) {\n  var weatherId = _ref.weatherId,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? 'en' : _ref$locale,\n      _ref$showLabel = _ref.showLabel,\n      showLabel = _ref$showLabel === void 0 ? true : _ref$showLabel;\n  var classes = useStyles();\n  var weatherString = EorzeaWeather.translateWeather(weatherId, locale);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: cn(classes.weatherIcon, classes[weatherId]),\n    title: weatherString\n  }), showLabel && __jsx(React.Fragment, null, __jsx(\"br\", null), __jsx(Typography, {\n    variant: \"caption\"\n  }, weatherString === 'Thunderstorms' ? WEATHER_THUNDERSTORM : weatherString)));\n};\n\nexport default WeatherIcon;","map":null,"metadata":{},"sourceType":"module"}