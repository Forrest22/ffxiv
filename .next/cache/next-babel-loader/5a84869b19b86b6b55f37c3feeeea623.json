{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Section from '../Section';\nimport NameAutocomplete from './NameAutocomplete';\nimport MyNameIs from './MyNameIs';\nimport { translate } from './names';\nimport { upperFirst } from './names/utils';\nimport { Clan, Gender } from './names/types';\nimport { PHONEMES } from './names/generate-lalafell';\nimport i18n from '../i18n';\n\nvar PlainsfolkFemale = function PlainsfolkFemale(_ref) {\n  var i18n = _ref.i18n;\n\n  var _useState = useState(''),\n      phonemeA = _useState[0],\n      setPhonemeA = _useState[1];\n\n  var _useState2 = useState(''),\n      phonemeB = _useState2[0],\n      setPhonemeB = _useState2[1];\n\n  var name = \"\".concat(upperFirst(phonemeA + phonemeB + phonemeB), \" \").concat(upperFirst(phonemeA + phonemeB)).trim();\n  var locale = i18n.language;\n  return /*#__PURE__*/_jsx(Section, {\n    title: \"\".concat(translate('clan', Clan.Plainsfolk, locale), \" (\").concat(translate('gender', Gender.Female, locale), \")\"),\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(NameAutocomplete, {\n              options: PHONEMES[Clan.Plainsfolk].A,\n              value: phonemeA,\n              onChange: setPhonemeA,\n              label: \"Phoneme A\",\n              placeholder: \"Enter a phoneme\"\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(NameAutocomplete, {\n              options: PHONEMES[Clan.Plainsfolk].B,\n              value: phonemeB,\n              onChange: setPhonemeB,\n              label: \"Phoneme B\",\n              placeholder: \"Enter a phoneme\"\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxs(Typography, {\n          paragraph: true,\n          children: [\"Female Plainsfolk names follow the phoneme pattern \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"ABB AB\"\n          }), \".\"]\n        }), /*#__PURE__*/_jsxs(Typography, {\n          children: [\"The \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"A\"\n          }), \" and \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"B\"\n          }), \" phonemes are one syllable.\"]\n        })]\n      }), name && /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(MyNameIs, {\n          name: name\n        })\n      })]\n    })\n  });\n};\n\nexport default i18n.withTranslation('name-generator')(PlainsfolkFemale);","map":null,"metadata":{},"sourceType":"module"}