{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport calculateVoyages, { LULU_EPOCH } from './calculate-voyages';\nimport { DEST_MAP, TIME_MAP, ROUTE_MAP, FISH_MAP, BLUE_FISH_MAP } from './maps';\nimport BAIT_GROUPS from './bait-groups';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Section from '../Section';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport RouteCardContainer from './RouteCardContainer';\nimport RouteCard from './RouteCard';\nimport BaitList from './BaitList';\nconst TIMES = 'DSN';\nconst useStyles = makeStyles(theme => ({\n  headerSub: {\n    marginLeft: theme.spacing(2),\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: '0',\n      display: 'block'\n    }\n  },\n  headerTime: {\n    position: 'relative',\n    top: '-0.2em'\n  }\n}));\nexport default function RouteInformation(props) {\n  const {\n    now,\n    selectedRoute\n  } = props;\n  if (!now || !selectedRoute) return null;\n  const classes = useStyles();\n  const [name, time] = selectedRoute;\n  const timeIndex = TIMES.indexOf(time);\n  const routeStops = ROUTE_MAP[name].map((dest, index) => dest + TIMES[(timeIndex + index + 1) % 3]);\n  const next = calculateVoyages(now, 1, selectedRoute)[0];\n  const nextMoment = LULU_EPOCH.clone().add(next.day, 'days').add(next.hour, 'hours').utcOffset(moment().utcOffset());\n  const timeUntil = nextMoment.diff(now);\n  return __jsx(Section, {\n    title: __jsx(React.Fragment, null, DEST_MAP[name], \" \", __jsx(\"span\", {\n      className: classes.headerTime\n    }, TIME_MAP[time]), __jsx(Typography, {\n      display: \"inline\",\n      className: classes.headerSub\n    }, \"next is \", timeUntil <= 0 ? 'boarding now / en route' : `${moment.duration(timeUntil).humanize(true)} at ${nextMoment.format('HH:mm')}`))\n  }, __jsx(RouteCardContainer, null, routeStops.map((stop, index) => __jsx(RouteCard, {\n    key: index\n  }, __jsx(CardHeader, {\n    title: __jsx(Typography, {\n      variant: \"h6\"\n    }, index + 1, \". \", DEST_MAP[stop[0]], \" \", TIME_MAP[stop[1]]),\n    disableTypography: true\n  }), __jsx(CardContent, null, (() => {\n    const baitGroups = FISH_MAP[stop[0]].map(fish => ({\n      header: fish,\n      baitGroup: BAIT_GROUPS[fish]\n    }));\n    const blueFish = BLUE_FISH_MAP[stop];\n\n    if (blueFish) {\n      baitGroups.push({\n        header: blueFish,\n        baitGroup: BAIT_GROUPS[blueFish]\n      });\n    }\n\n    return __jsx(BaitList, {\n      baitGroups: baitGroups\n    });\n  })())))));\n}","map":null,"metadata":{},"sourceType":"module"}