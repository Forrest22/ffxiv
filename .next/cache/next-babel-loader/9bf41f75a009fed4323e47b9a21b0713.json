{"ast":null,"code":"import EorzeaWeather from '@pillowfication/eorzea-weather';\nvar EORZEAN_RATIO = 1440 / 70;\n\nvar _8HR = 8 * 3600 * 1000 / EORZEAN_RATIO;\n\nvar eorzeaWeather = new EorzeaWeather();\n\nfunction forecastWeather(zoneId) {\n  var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();\n  var transitionWeather = arguments.length > 2 ? arguments[2] : undefined;\n  var targetWeather = arguments.length > 3 ? arguments[3] : undefined;\n  var timeChunks = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n    0: true,\n    8: true,\n    16: true\n  };\n  var timeChunk = (now.getTime() / _8HR | 0) - 1;\n  var occurences = [];\n  var previousWeather;\n\n  var currentWeather = eorzeaWeather._getWeather(zoneId, timeChunk * _8HR);\n\n  while (occurences.length < 10) {\n    var date = ++timeChunk * _8HR;\n    previousWeather = currentWeather;\n    currentWeather = eorzeaWeather._getWeather(zoneId, ++timeChunk * _8HR);\n    var transitionMatch = !transitionWeather || previousWeather === transitionWeather;\n    var targetMatch = !targetWeather || currentWeather === targetWeather;\n\n    if (transitionMatch && targetMatch) {\n      var currTimeChunk = timeChunk % 3 * 8;\n\n      if (timeChunks[currTimeChunk]) {\n        occurences.push({\n          date: new Date(date),\n          timeChunk: currTimeChunk,\n          previousWeather: previousWeather,\n          currentWeather: currentWeather\n        });\n      }\n    }\n  }\n\n  return occurences;\n}\n\nexport default forecastWeather;","map":null,"metadata":{},"sourceType":"module"}