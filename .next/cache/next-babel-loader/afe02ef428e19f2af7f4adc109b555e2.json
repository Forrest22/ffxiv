{"ast":null,"code":"import { ROUTE_MAP } from './maps';\nexport function toTimeString(now, padded) {\n  const hours = now.getHours();\n  const displayHours = hours % 12 === 0 ? 12 : hours % 12;\n  return `${padded && displayHours < 10 ? 'â€‡' + displayHours : displayHours}:00 ${hours < 12 ? 'AM' : 'PM'}`;\n}\nexport function timeUntil(now, then, full) {\n  const diff = then.getTime() - now.getTime();\n\n  if (diff < -900000) {\n    return 'en route';\n  } else if (diff < 0) {\n    return 'boarding now';\n  } else {\n    let days = diff / 86400000;\n\n    if (days >= 1) {\n      days = Math.round(days);\n      return full ? `next is in ${days} ${days > 1 ? 'days' : 'day'} at ${toTimeString(then)}` : `in ${days} ${days > 1 ? 'days' : 'day'}`;\n    }\n\n    let hours = diff / 3600000;\n\n    if (hours >= 1) {\n      hours = Math.round(hours);\n      return full ? `next is in ${hours} ${hours > 1 ? 'hours' : 'hour'} at ${toTimeString(then)}` : `in ${hours} ${hours > 1 ? 'hours' : 'hour'}`;\n    }\n\n    const minutes = Math.round(diff / 60000);\n    return full ? `next is in ${minutes} ${minutes > 1 ? 'minutes' : 'minute'} at ${toTimeString(then)}` : `in ${minutes} ${minutes > 1 ? 'minutes' : 'minute'}`;\n  }\n}\nexport function getStops(destinationCode) {\n  const stops = ROUTE_MAP[destinationCode[0]];\n  const timeIndex = 'DSN'.indexOf(destinationCode[1]);\n  return stops.map((stop, index) => stop + 'DSN'.charAt((index + timeIndex + 1) % 3));\n}","map":null,"metadata":{},"sourceType":"module"}