{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\nimport { lightTheme, darkTheme } from '../src/themes';\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    minHeight: 0,\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5)\n  },\n  homeIcon: {\n    marginRight: theme.spacing(1)\n  },\n  titleButton: {\n    textTransform: 'none'\n  },\n  main: {\n    paddingTop: '4rem',\n    paddingBottom: '6rem'\n  }\n}));\nconst useGlobalStyles = makeStyles(theme => ({\n  '@global': {\n    section: {\n      marginBottom: theme.spacing(4)\n    }\n  }\n}));\n\nconst GlobalStyles = props => {\n  useGlobalStyles();\n  return null;\n};\n\nexport default function App(props) {\n  const {\n    Component,\n    pageProps\n  } = props;\n  const {\n    0: theme,\n    1: setTheme\n  } = useState('light');\n  const classes = useStyles();\n  useEffect(() => {\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n\n    setTheme(false && window.localStorage.getItem('theme') || 'light');\n  }, []);\n  useEffect(() => {\n    window.localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  const handleChangeTheme = event => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Lulu\\u2019s FFXIV Tools\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-AMS_HTML\"\n  })), __jsx(ThemeProvider, {\n    theme: theme === 'dark' ? darkTheme : lightTheme\n  }, __jsx(CssBaseline, null), __jsx(GlobalStyles, null), __jsx(AppBar, {\n    position: \"fixed\"\n  }, __jsx(Container, {\n    maxWidth: \"lg\"\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Toolbar, {\n    disableGutters: true,\n    className: classes.toolbar\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(Button, {\n    className: classes.titleButton,\n    color: \"inherit\"\n  }, __jsx(HomeIcon, {\n    className: classes.homeIcon\n  }), __jsx(Typography, null, \"Lulu\\u2019s Tools\"))))), __jsx(Grid, {\n    item: true\n  }, __jsx(Toolbar, {\n    disableGutters: true,\n    className: classes.toolbar\n  }, __jsx(Brightness5Icon, null), __jsx(Switch, {\n    checked: theme === 'dark',\n    onChange: handleChangeTheme\n  }), __jsx(Brightness2Icon, null)))))), __jsx(Container, {\n    maxWidth: \"lg\",\n    className: classes.main,\n    component: \"main\"\n  }, __jsx(Component, pageProps))));\n}","map":null,"metadata":{},"sourceType":"module"}