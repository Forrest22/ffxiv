{"ast":null,"code":"import _defineProperty from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n// https://github.com/mui-org/material-ui/blob/next/docs/src/modules/components/Link.js\n//\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link'; // import { useUserLanguage } from 'docs/src/modules/utils/i18n';\n\nvar NextComposed = /*#__PURE__*/React.forwardRef(function NextComposed(props, ref) {\n  var linkAs = props.linkAs,\n      href = props.href,\n      other = _objectWithoutProperties(props, [\"linkAs\", \"href\"]);\n\n  return /*#__PURE__*/_jsx(NextLink, {\n    href: href,\n    as: linkAs,\n    children: /*#__PURE__*/_jsx(\"a\", _objectSpread({\n      ref: ref\n    }, other))\n  });\n});\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction Link(props) {\n  var _props$activeClassNam = props.activeClassName,\n      activeClassName = _props$activeClassNam === void 0 ? 'active' : _props$activeClassNam,\n      classNameProps = props.className,\n      href = props.href,\n      innerRef = props.innerRef,\n      naked = props.naked,\n      roleProp = props.role,\n      _props$as = props.as,\n      asProp = _props$as === void 0 ? href : _props$as,\n      other = _objectWithoutProperties(props, [\"activeClassName\", \"className\", \"href\", \"innerRef\", \"naked\", \"role\", \"as\"]);\n\n  var router = useRouter(); // const userLanguage = useUserLanguage();\n\n  var className = clsx(classNameProps, _defineProperty({}, activeClassName, router.pathname === href && activeClassName));\n  var linkAs = asProp; // if (userLanguage !== 'en' && href.indexOf('/') === 0 && href.indexOf('/blog') !== 0) {\n  //   linkAs = `/${userLanguage}${linkAs}`;\n  // }\n  // catch role passed from ButtonBase. This is definitely a link\n\n  var role = roleProp === 'button' ? undefined : roleProp;\n  var isExternal = href.indexOf('https:') === 0 || href.indexOf('mailto:') === 0;\n\n  if (isExternal) {\n    if (naked) {\n      return /*#__PURE__*/_jsx(\"a\", _objectSpread({\n        className: className,\n        href: href,\n        ref: innerRef,\n        role: role\n      }, other));\n    }\n\n    return /*#__PURE__*/_jsx(MuiLink, _objectSpread({\n      className: className,\n      href: href,\n      ref: innerRef,\n      role: role\n    }, other));\n  }\n\n  if (naked) {\n    return /*#__PURE__*/_jsx(NextComposed, _objectSpread({\n      linkAs: linkAs,\n      className: className,\n      href: href,\n      ref: innerRef,\n      role: role\n    }, other));\n  }\n\n  return /*#__PURE__*/_jsx(MuiLink, _objectSpread({\n    linkAs: linkAs,\n    component: NextComposed,\n    className: className,\n    href: href,\n    ref: innerRef,\n    role: role\n  }, other));\n}\n\nexport default /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/_jsx(Link, _objectSpread(_objectSpread({}, props), {}, {\n    innerRef: ref\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}