{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cn from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { translateId } from './weather';\nimport * as WEATHERS from './weather/consts/weathers';\nvar WEATHER_IDS = [WEATHERS.CLEAR_SKIES, WEATHERS.FAIR_SKIES, WEATHERS.CLOUDS, WEATHERS.WIND, WEATHERS.GALES, WEATHERS.FOG, WEATHERS.RAIN, WEATHERS.SHOWERS, WEATHERS.THUNDER, WEATHERS.THUNDERSTORMS, WEATHERS.DUST_STORMS, WEATHERS.SANDSTORMS, WEATHERS.HEAT_WAVES, WEATHERS.HOT_SPELLS, WEATHERS.SNOW, WEATHERS.BLIZZARDS, WEATHERS.GLOOM, WEATHERS.UMBRAL_STATIC, WEATHERS.UMBRAL_WIND];\nvar useStyles = makeStyles(function (theme) {\n  var styles = {\n    weatherIcon: {\n      display: 'inline-block',\n      width: '30px',\n      height: '30px',\n      backgroundImage: 'url(\"./images/weather-icons.png\")',\n      backgroundSize: \"\".concat(WEATHER_IDS.length * 100, \"% 100%\")\n    }\n  };\n  WEATHER_IDS.forEach(function (weatherId, index) {\n    styles[weatherId] = {\n      backgroundPosition: \"\".concat(index * -100, \"% 0%\")\n    };\n  });\n  return styles;\n});\n\nvar WeatherIcon = function WeatherIcon(_ref) {\n  var weatherId = _ref.weatherId,\n      _ref$showLabel = _ref.showLabel,\n      showLabel = _ref$showLabel === void 0 ? true : _ref$showLabel;\n  var classes = useStyles();\n  var weatherString = translateId(weatherId);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: cn(classes.weatherIcon, classes[weatherId]),\n      title: weatherString\n    }), showLabel && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Typography, {\n        variant: \"caption\",\n        children: weatherString\n      })]\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(WeatherIcon);","map":null,"metadata":{},"sourceType":"module"}