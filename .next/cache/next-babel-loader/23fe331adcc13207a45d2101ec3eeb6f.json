{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport OceanFishIcon from './OceanFishIcon';\nimport { fishingSpots } from './gists/data';\nimport * as maps from './maps';\nimport { toTimeString } from '../utils';\nimport calculateVoyages from './calculate-voyages';\nimport { getBlueFish, timeUntil, translate, upperFirst } from './utils';\nimport i18n from '../i18n';\nconst DATE_FORMAT = {\n  month: '2-digit',\n  day: '2-digit'\n};\nconst useStyles = makeStyles(theme => ({\n  schedule: {\n    '& td': {\n      height: 53,\n      paddingTop: theme.spacing(0.25),\n      paddingBottom: theme.spacing(0.25),\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      whiteSpace: 'nowrap'\n    },\n    '& td:first-child': {\n      paddingLeft: theme.spacing(2)\n    },\n    '& td:last-child': {\n      paddingRight: theme.spacing(2)\n    },\n    '& tbody tr:hover': {\n      cursor: 'pointer'\n    }\n  },\n  hoverRow: {\n    backgroundColor: theme.palette.action.hover\n  },\n  timeUntil: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  },\n  timeCell: {\n    '& svg': {\n      top: 0,\n      verticalAlign: 'middle'\n    }\n  },\n  objectivesCell: {\n    '& div': {\n      verticalAlign: 'middle',\n      fontSize: '1rem'\n    }\n  }\n}));\n\nconst UpcomingVoyagesTable = ({\n  now,\n  numRows,\n  filter,\n  onSelectRoute,\n  t,\n  i18n\n}) => {\n  const classes = useStyles();\n  const {\n    0: hover,\n    1: setHover\n  } = useState(null);\n  const upcomingVoyages = calculateVoyages(now, Math.min(Math.max(numRows, 1), 50), filter);\n  return /*#__PURE__*/_jsx(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxs(Table, {\n      size: \"small\",\n      className: classes.schedule,\n      children: [/*#__PURE__*/_jsx(TableHead, {\n        children: /*#__PURE__*/_jsxs(TableRow, {\n          children: [/*#__PURE__*/_jsx(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: t('time')\n          }), /*#__PURE__*/_jsx(TableCell, {\n            colSpan: 2,\n            align: \"center\",\n            children: t('route')\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: t('objectives')\n          })]\n        })\n      }), /*#__PURE__*/_jsx(TableBody, {\n        onMouseOut: setHover.bind(null, null),\n        children: (() => {\n          let previousDate;\n          return upcomingVoyages.map(({\n            time,\n            destinationCode\n          }) => {\n            const dateString = time.toLocaleDateString(i18n.language, DATE_FORMAT);\n            const timeString = toTimeString(time, {\n              padded: true,\n              locale: i18n.language\n            });\n            return /*#__PURE__*/_jsxs(TableRow, {\n              hover: true,\n              className: clsx(!filter && hover === destinationCode && classes.hoverRow),\n              onMouseOver: setHover.bind(null, destinationCode),\n              onClick: onSelectRoute.bind(null, destinationCode),\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                align: \"right\",\n                children: previousDate !== (previousDate = dateString) && /*#__PURE__*/_jsx(Typography, {\n                  children: dateString\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: timeString\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                children: /*#__PURE__*/_jsx(Typography, {\n                  className: classes.timeUntil,\n                  children: timeUntil(now, time, {\n                    t,\n                    locale: i18n.language\n                  })\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"right\",\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: upperFirst(translate(i18n.language, fishingSpots[maps.STOP_MAP[destinationCode[0]]], 'place_name_sub', 'no_article'))\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                className: classes.timeCell,\n                children: maps.TIME_MAP[destinationCode[1]]\n              }), /*#__PURE__*/_jsxs(TableCell, {\n                className: classes.objectivesCell,\n                children: [maps.ACHIEVEMENTS_MAP[destinationCode].map(achievement => /*#__PURE__*/_jsx(OceanFishIcon, {\n                  type: \"achievement\",\n                  id: achievement\n                }, achievement)), getBlueFish(destinationCode).map(fishId => fishId && /*#__PURE__*/_jsx(OceanFishIcon, {\n                  type: \"fish\",\n                  id: fishId\n                }, fishId))]\n              })]\n            }, time.getTime());\n          });\n        })()\n      })]\n    })\n  });\n};\n\nexport default i18n.withTranslation('ocean-fishing')(UpcomingVoyagesTable);","map":null,"metadata":{},"sourceType":"module"}