{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cn from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nexport var WEATHERS = ['Clear Skies', 'Fair Skies', 'Clouds', 'Wind', 'Gales', 'Fog', 'Rain', 'Showers', 'Thunder', 'Thunderstorms', 'Dust Storms', 'Sandstorms', 'Heat Waves', 'Hot Spells', 'Snow', 'Blizzards', 'Gloom', 'Umbral Static', 'Umbral Wind'];\nvar WEATHER_THUNDERSTORM = 'Thunder' + String.fromCharCode(173) + 'storms';\nexport var ICON_TITLES = {};\n\nfor (var _i = 0, _WEATHERS = WEATHERS; _i < _WEATHERS.length; _i++) {\n  var icon = _WEATHERS[_i];\n  ICON_TITLES[toCamelCase(icon)] = icon;\n}\n\nfunction toCamelCase(str) {\n  str = str.replace(' ', '');\n  return str[0].toLowerCase() + str.slice(1);\n}\n\nvar useStyles = makeStyles(function (theme) {\n  var styles = {\n    weatherIcon: {\n      display: 'inline-block',\n      width: '30px',\n      height: '30px',\n      backgroundImage: 'url(\"./images/weather-icons.png\")',\n      backgroundSize: \"\".concat(WEATHERS.length * 100, \"% 100%\")\n    }\n  };\n  WEATHERS.forEach(function (icon, index) {\n    styles[toCamelCase(icon)] = {\n      backgroundPosition: \"\".concat(index * -100, \"% 0%\")\n    };\n  });\n  return styles;\n});\nexport default function WeatherIcon(props) {\n  var name = props.name;\n  var classes = useStyles();\n  var baseName = toCamelCase(name);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: cn(classes.weatherIcon, classes[baseName]),\n    title: ICON_TITLES[baseName]\n  }), __jsx(\"br\", null), __jsx(Typography, {\n    variant: \"caption\"\n  }, name === 'Thunderstorms' ? WEATHER_THUNDERSTORM : name));\n}","map":null,"metadata":{},"sourceType":"module"}