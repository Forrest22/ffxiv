{"ast":null,"code":"import _defineProperty from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Section from '../Section';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport RouteCardContainer from './RouteCardContainer';\nimport RouteCard from './RouteCard';\nimport FishPanel from './FishPanel';\nimport BaitList from './BaitList';\nimport calculateVoyages from './calculate-voyages';\nimport { fishingSpots, fishes } from './gists/data/ocean-fish-data.json';\nimport * as maps from './maps';\nimport { timeUntil, getStops, getBlueFish, getBaitGroup, translate } from './utils';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    headerSub: _defineProperty({\n      marginLeft: theme.spacing(2)\n    }, theme.breakpoints.down('md'), {\n      marginLeft: 0,\n      display: 'block'\n    }),\n    headerTime: {\n      position: 'relative',\n      top: '-0.2em',\n      marginLeft: '0.25em'\n    },\n    showAllFishCheckbox: {\n      padding: 0,\n      margin: theme.spacing(0, 1)\n    }\n  };\n});\n\nvar RouteInformation = function RouteInformation(_ref) {\n  var now = _ref.now,\n      selectedRoute = _ref.selectedRoute,\n      checklist = _ref.checklist,\n      setChecklist = _ref.setChecklist;\n  if (!now || !selectedRoute) return null;\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _useState = useState(false),\n      showAllFish = _useState[0],\n      setShowAllFish = _useState[1];\n\n  var _useState2 = useState(0),\n      tab = _useState2[0],\n      setTab = _useState2[1];\n\n  var locale = router.locale;\n  var stops = getStops(selectedRoute);\n  var next = calculateVoyages(now, 1, [selectedRoute])[0].time;\n\n  var handleToggleShowAllFish = function handleToggleShowAllFish() {\n    setShowAllFish(!showAllFish);\n  };\n\n  var handleChangeTab = function handleChangeTab(_, value) {\n    setTab(value);\n  };\n\n  return /*#__PURE__*/_jsx(Section, {\n    title: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 12,\n        lg: 8,\n        children: [translate(fishingSpots[maps.STOP_MAP[selectedRoute[0]]], 'name_sub', locale), /*#__PURE__*/_jsx(\"span\", {\n          className: classes.headerTime,\n          children: maps.TIME_MAP[selectedRoute[1]]\n        }), /*#__PURE__*/_jsx(Typography, {\n          display: \"inline\",\n          className: classes.headerSub,\n          children: timeUntil(now, next, true)\n        })]\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        lg: 4,\n        align: \"right\",\n        children: /*#__PURE__*/_jsx(FormControlLabel, {\n          control: /*#__PURE__*/_jsx(Checkbox, {\n            className: classes.showAllFishCheckbox,\n            checked: showAllFish,\n            onChange: handleToggleShowAllFish,\n            color: \"primary\"\n          }),\n          label: \"Show all fish\"\n        })\n      })]\n    }),\n    children: function () {\n      if (showAllFish) {\n        return /*#__PURE__*/_jsxs(Card, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsx(Tabs, {\n            variant: \"fullWidth\",\n            value: tab,\n            onChange: handleChangeTab,\n            children: stops.map(function (stop, index) {\n              return /*#__PURE__*/_jsx(Tab, {\n                label: /*#__PURE__*/_jsxs(_Fragment, {\n                  children: [index + 1, \". \", translate(fishingSpots[maps.STOP_MAP[stop[0]]], 'name', locale), \" \", maps.TIME_MAP[stop[1]]]\n                })\n              }, stop);\n            })\n          }), stops.map(function (stop, index) {\n            return /*#__PURE__*/_jsx(FishPanel, {\n              tab: tab,\n              index: index,\n              stop: stop,\n              checklist: checklist,\n              setChecklist: setChecklist\n            }, stop);\n          })]\n        });\n      } else {\n        return /*#__PURE__*/_jsx(RouteCardContainer, {\n          children: stops.map(function (stop, index) {\n            return /*#__PURE__*/_jsx(RouteCard, {\n              index: index,\n              stop: stop,\n              children: /*#__PURE__*/_jsx(CardContent, {\n                children: /*#__PURE__*/_jsx(BaitList, {\n                  baitGroups: [maps.SPECTRAL_FISH_MAP[stop[0]], maps.GREEN_FISH_MAP[stop[0]], getBlueFish(selectedRoute)[index]].filter(function (x) {\n                    return x;\n                  }).map(function (fishId) {\n                    return {\n                      header: translate(fishes[fishId], 'name', locale),\n                      baitGroupProps: getBaitGroup(fishId)\n                    };\n                  })\n                })\n              })\n            }, stop);\n          })\n        });\n      }\n    }()\n  });\n};\n\nexport default RouteInformation;","map":null,"metadata":{},"sourceType":"module"}