{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport cn from 'classnames';\nimport calculateVoyages from './calculate-voyages';\nimport { DEST_MAP, TIME_MAP, OBJECTIVES_MAP, FILTER_MAP } from './maps';\nimport { timeUntil } from './utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Section from '../Section';\nimport OceanFishIcon from './OceanFishIcon';\nconst useStyles = makeStyles(theme => ({\n  schedule: {\n    '& td': {\n      paddingTop: theme.spacing(0.25),\n      paddingBottom: theme.spacing(0.25),\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n      whiteSpace: 'nowrap',\n      fontSize: '1.25em'\n    },\n    '& td:first-child': {\n      paddingLeft: theme.spacing(2)\n    },\n    '& td:last-child': {\n      paddingRight: theme.spacing(2)\n    },\n    '& tbody tr:hover': {\n      cursor: 'pointer'\n    }\n  },\n  hoverRow: {\n    backgroundColor: theme.palette.action.hover\n  },\n  timeUntil: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  },\n  timeCell: {\n    '& svg': {\n      top: 0,\n      verticalAlign: 'middle'\n    }\n  },\n  objectivesCell: {\n    '& div': {\n      verticalAlign: 'middle',\n      fontSize: '1rem'\n    }\n  }\n}));\n\nconst UpcomingVoyages = ({\n  now,\n  onSelectRoute\n}) => {\n  const {\n    0: numRows,\n    1: setNumRows\n  } = useState(10);\n  const {\n    0: filter,\n    1: setFilter\n  } = useState('none');\n  const {\n    0: hover,\n    1: setHover\n  } = useState(null);\n  const classes = useStyles();\n  const router = useRouter();\n  const firstRender = useRef(false);\n  const upcomingVoyages = now && calculateVoyages(now, Math.min(Math.max(Number(numRows) || 10, 1), 50), FILTER_MAP[filter] || null);\n  useEffect(() => {\n    const queryFilter = FILTER_MAP[router.query.filter] ? router.query.filter : 'none';\n\n    if (!firstRender.current && now || filter !== queryFilter) {\n      firstRender.current = true;\n      setFilter(queryFilter);\n      onSelectRoute(calculateVoyages(now, 1, FILTER_MAP[queryFilter] || null)[0].destinationCode);\n    }\n  });\n\n  const handleInputNumRows = event => {\n    setNumRows(event.target.value);\n  };\n\n  const handleBlurNumRows = event => {\n    const numRows = Number(event.target.value);\n\n    if (!numRows) {\n      setNumRows(10);\n    } else {\n      setNumRows(Math.min(Math.max(Number(numRows) || 10, 1), 50));\n    }\n  };\n\n  const handleSelectFilter = event => {\n    const filter = event.target.value;\n    router.push({\n      pathname: router.pathname,\n      query: filter === 'none' ? null : {\n        filter\n      }\n    });\n  };\n\n  const handleHoverRow = {\n    none: setHover.bind(null, null),\n    ND: setHover.bind(null, 'ND'),\n    NS: setHover.bind(null, 'NS'),\n    NN: setHover.bind(null, 'NN'),\n    RD: setHover.bind(null, 'RD'),\n    RS: setHover.bind(null, 'RS'),\n    RN: setHover.bind(null, 'RN')\n  };\n  const handleSelectRow = {\n    ND: onSelectRoute.bind(null, 'ND'),\n    NS: onSelectRoute.bind(null, 'NS'),\n    NN: onSelectRoute.bind(null, 'NN'),\n    RD: onSelectRoute.bind(null, 'RD'),\n    RS: onSelectRoute.bind(null, 'RS'),\n    RN: onSelectRoute.bind(null, 'RN')\n  };\n  return /*#__PURE__*/_jsx(Section, {\n    title: \"Upcoming Voyages\",\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsx(FormControl, {\n          fullWidth: true,\n          children: /*#__PURE__*/_jsx(TextField, {\n            variant: \"filled\",\n            label: \"Number of rows\",\n            type: \"number\",\n            value: numRows,\n            onChange: handleInputNumRows,\n            onBlur: handleBlurNumRows\n          })\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          fullWidth: true,\n          variant: \"filled\",\n          children: [/*#__PURE__*/_jsx(InputLabel, {\n            children: \"Filter Route\"\n          }), /*#__PURE__*/_jsxs(Select, {\n            native: true,\n            value: filter,\n            onChange: handleSelectFilter,\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"none\",\n              children: \"No filter\"\n            }), /*#__PURE__*/_jsxs(\"optgroup\", {\n              label: \"Route\",\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"ND\",\n                children: \"Northern Strait - Day\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"NS\",\n                children: \"Northern Strait - Sunset\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"NN\",\n                children: \"Northern Strait - Night\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"RD\",\n                children: \"Rhotano Sea - Day\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"RS\",\n                children: \"Rhotano Sea - Sunset\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"RN\",\n                children: \"Rhotano Sea - Night\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"optgroup\", {\n              label: \"Blue Fish\",\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"sothis\",\n                children: \"Sothis\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"coral_manta\",\n                children: \"Coral Manta\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"elasmosaurus\",\n                children: \"Elasmosaurus\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"stonescale\",\n                children: \"Stonescale\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"optgroup\", {\n              label: \"Achievements\",\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"jellyfish\",\n                children: \"Jellyfish\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"seadragons\",\n                children: \"Seadragons\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"sharks\",\n                children: \"Sharks\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"octopodes\",\n                children: \"Octopodes\"\n              })]\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsx(NoSsr, {\n        children: now && /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxs(Table, {\n              size: \"small\",\n              className: classes.schedule,\n              children: [/*#__PURE__*/_jsx(TableHead, {\n                children: /*#__PURE__*/_jsxs(TableRow, {\n                  children: [/*#__PURE__*/_jsx(TableCell, {\n                    colSpan: 3,\n                    align: \"center\",\n                    children: \"Time\"\n                  }), /*#__PURE__*/_jsx(TableCell, {\n                    colSpan: 2,\n                    align: \"center\",\n                    children: \"Route\"\n                  }), /*#__PURE__*/_jsx(TableCell, {\n                    align: \"center\",\n                    children: \"Objectives\"\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(TableBody, {\n                onMouseOut: handleHoverRow.none,\n                children: (() => {\n                  let previousDate;\n                  return upcomingVoyages.map(({\n                    time,\n                    destinationCode\n                  }) => {\n                    const dateString = time.toLocaleDateString(undefined, {\n                      month: '2-digit',\n                      day: '2-digit'\n                    });\n                    const timeString = time.toLocaleTimeString(undefined, {\n                      hour: '2-digit',\n                      minute: '2-digit'\n                    });\n                    return /*#__PURE__*/_jsxs(TableRow, {\n                      hover: filter === 'none',\n                      className: cn(filter === 'none' && hover === destinationCode && classes.hoverRow),\n                      onMouseOver: handleHoverRow[destinationCode],\n                      onClick: handleSelectRow[destinationCode],\n                      children: [/*#__PURE__*/_jsx(TableCell, {\n                        align: \"right\",\n                        children: previousDate !== (previousDate = dateString) && dateString\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        children: timeString\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        children: /*#__PURE__*/_jsx(\"span\", {\n                          className: classes.timeUntil,\n                          children: timeUntil(now, time)\n                        })\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        align: \"right\",\n                        children: DEST_MAP[destinationCode[0]]\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        className: classes.timeCell,\n                        children: TIME_MAP[destinationCode[1]]\n                      }), /*#__PURE__*/_jsx(TableCell, {\n                        className: classes.objectivesCell,\n                        children: OBJECTIVES_MAP[destinationCode].map((name, index) => /*#__PURE__*/_jsx(OceanFishIcon, {\n                          name: name\n                        }, index))\n                      })]\n                    }, time.getTime());\n                  });\n                })()\n              })]\n            })\n          })\n        })\n      })]\n    })\n  });\n};\n\nexport default UpcomingVoyages;","map":null,"metadata":{},"sourceType":"module"}