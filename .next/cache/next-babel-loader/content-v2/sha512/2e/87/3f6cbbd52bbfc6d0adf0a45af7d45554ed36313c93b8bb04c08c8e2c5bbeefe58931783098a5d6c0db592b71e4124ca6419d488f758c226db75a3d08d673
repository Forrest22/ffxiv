{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nvar NameAutocomplete = function NameAutocomplete(_ref) {\n  var options = _ref.options,\n      sort = _ref.sort,\n      getOptionLabel = _ref.getOptionLabel,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? 'Label' : _ref$label,\n      _ref$placeholder = _ref.placeholder,\n      placeholder = _ref$placeholder === void 0 ? 'Placeholder' : _ref$placeholder;\n\n  var handleChangeAutocomplete = function handleChangeAutocomplete(_, value) {\n    onChange(value || '');\n  };\n\n  var handleChangeInput = function handleChangeInput(event) {\n    onChange(event.target.value || '');\n  };\n\n  return /*#__PURE__*/_jsx(Autocomplete, {\n    freeSolo: true,\n    options: options.sort(sort).filter(function (name, index, array) {\n      return array.indexOf(name, index + 1) === -1;\n    }),\n    getOptionLabel: getOptionLabel,\n    value: value,\n    inputValue: value,\n    onChange: handleChangeAutocomplete,\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({}, params), {}, {\n        variant: \"outlined\",\n        onChange: handleChangeInput,\n        label: label,\n        placeholder: placeholder,\n        autoComplete: \"off\",\n        InputLabelProps: {\n          shrink: true\n        }\n      }));\n    }\n  });\n};\n\nexport default NameAutocomplete;","map":null,"metadata":{},"sourceType":"module"}