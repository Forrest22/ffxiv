{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst NameAutocomplete = ({\n  options,\n  sort,\n  getOptionLabel,\n  value,\n  onChange,\n  label = 'Label',\n  placeholder = 'Placeholder'\n}) => {\n  const handleChangeAutocomplete = (_, value) => {\n    onChange(value !== null ? value : '');\n  };\n\n  const handleChangeInput = event => {\n    onChange(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsx(Autocomplete, {\n    freeSolo: true,\n    options: (sort !== undefined ? options.sort(sort) : options).filter((name, index, array) => name !== array[index + 1]),\n    getOptionLabel: getOptionLabel,\n    value: value,\n    inputValue: value,\n    onChange: handleChangeAutocomplete,\n    renderInput: params => /*#__PURE__*/_jsx(TextField, _objectSpread(_objectSpread({}, params), {}, {\n      variant: \"outlined\",\n      onChange: handleChangeInput,\n      label: label,\n      placeholder: placeholder,\n      autoComplete: \"off\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }))\n  });\n};\n\nexport default NameAutocomplete;","map":null,"metadata":{},"sourceType":"module"}