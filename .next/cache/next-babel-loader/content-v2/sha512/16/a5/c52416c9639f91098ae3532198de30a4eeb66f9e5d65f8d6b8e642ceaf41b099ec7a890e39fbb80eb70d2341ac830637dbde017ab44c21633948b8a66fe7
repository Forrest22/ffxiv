{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport BaitGroup from './BaitGroup';\nconst useStyles = makeStyles(theme => ({\n  baitList: {\n    listStyleType: 'none',\n    margin: 0,\n    paddingLeft: 0,\n    '& > li:not(:last-child)': {\n      paddingBottom: theme.spacing(1)\n    }\n  }\n}));\n\nconst BaitList = ({\n  baitGroups\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsx(\"ul\", {\n    className: classes.baitList,\n    children: baitGroups.map(({\n      header,\n      baitGroupProps\n    }, index) => /*#__PURE__*/_jsxs(\"li\", {\n      children: [/*#__PURE__*/_jsx(Typography, {\n        gutterBottom: true,\n        children: header\n      }), /*#__PURE__*/_jsx(BaitGroup, _objectSpread({}, baitGroupProps))]\n    }, index))\n  });\n};\n\nexport default BaitList;","map":null,"metadata":{},"sourceType":"module"}