{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useTranslation } from '../i18n';\nconst useStyles = makeStyles(theme => ({\n  tug: {\n    display: 'inline-block',\n    width: '1.2em',\n    height: '1.2em',\n    borderRadius: '0.2em',\n    fontWeight: 'bold',\n    lineHeight: '1.2em',\n    textAlign: 'center'\n  },\n  small: {\n    fontSize: '0.95em'\n  },\n  light: {\n    backgroundColor: theme.palette.type === 'dark' ? '#078203' : '#aaffaa'\n  },\n  medium: {\n    backgroundColor: theme.palette.type === 'dark' ? '#195ecf' : '#aaaaff'\n  },\n  heavy: {\n    backgroundColor: theme.palette.type === 'dark' ? '#9e0000' : '#ffaaaa'\n  }\n}));\n\nconst Tug = ({\n  strength,\n  size = 'normal',\n  className\n}) => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation('ocean-fishing');\n\n  switch (strength) {\n    case 1:\n      return /*#__PURE__*/_jsx(Tooltip, {\n        arrow: true,\n        placement: \"top\",\n        title: String(t('tug.light')),\n        children: /*#__PURE__*/_jsx(Paper, {\n          component: \"span\",\n          className: clsx(classes.tug, size === 'small' && classes.small, classes.light, className),\n          children: \"!\"\n        })\n      });\n\n    case 2:\n      return /*#__PURE__*/_jsx(Tooltip, {\n        arrow: true,\n        placement: \"top\",\n        title: String(t('tug.medium')),\n        children: /*#__PURE__*/_jsx(Paper, {\n          component: \"span\",\n          className: clsx(classes.tug, size === 'small' && classes.small, classes.medium, className),\n          children: \"!!\"\n        })\n      });\n\n    case 3:\n      return /*#__PURE__*/_jsx(Tooltip, {\n        arrow: true,\n        placement: \"top\",\n        title: String(t('tug.heavy')),\n        children: /*#__PURE__*/_jsx(Paper, {\n          component: \"span\",\n          className: clsx(classes.tug, size === 'small' && classes.small, classes.heavy, className),\n          children: \"!!!\"\n        })\n      });\n  }\n};\n\nexport default /*#__PURE__*/React.memo(Tug);","map":null,"metadata":{},"sourceType":"module"}