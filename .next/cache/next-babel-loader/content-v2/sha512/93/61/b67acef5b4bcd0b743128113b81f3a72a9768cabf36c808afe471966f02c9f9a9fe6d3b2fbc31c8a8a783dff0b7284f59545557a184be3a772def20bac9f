{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Popper from '@material-ui/core/Popper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport OceanFishPopper from './OceanFishPopper';\nimport { oceanFishes, baits, achievements, contentBonuses } from './ffxiv-ocean-fishing/data';\nimport ICONS_MAP from './ffxiv-ocean-fishing/data/ocean-fishing-icons-map.json';\nimport { translate } from '../utils';\nimport { useTranslation } from '../i18n';\nconst ICON_ROWS = ICONS_MAP.length;\nconst ICON_COLS = Math.max(...ICONS_MAP.map(row => row.length));\nconst useStyles = makeStyles(theme => {\n  const styles = {\n    iconContainer: {\n      display: 'inline-block',\n      position: 'relative',\n      width: ({\n        size\n      }) => size * 1.2,\n      height: ({\n        size\n      }) => size * 1.2,\n      margin: theme.spacing(0.1),\n      verticalAlign: 'middle'\n    },\n    oceanFishIcon: {\n      position: 'absolute',\n      top: ({\n        size\n      }) => size * 0.1,\n      left: ({\n        size\n      }) => size * 0.1,\n      width: ({\n        size\n      }) => size,\n      height: ({\n        size\n      }) => size,\n      backgroundImage: 'url(\"/images/ocean-fishing/ocean-fishing-icons.png\")',\n      backgroundSize: `${ICON_COLS * 100}% ${ICON_ROWS * 100}%`\n    },\n    itemCover: {\n      position: 'absolute',\n      top: ({\n        size\n      }) => size * 0.05,\n      left: 0,\n      width: ({\n        size\n      }) => size * 1.2,\n      height: ({\n        size\n      }) => size * 1.1,\n      backgroundImage: 'url(\"/images/ocean-fishing/item-cover.png\")'\n    },\n    achievementCover: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: ({\n        size\n      }) => size * 1.2,\n      height: ({\n        size\n      }) => size * 1.2,\n      backgroundImage: 'url(\"/images/ocean-fishing/achievement-cover.png\")'\n    },\n    hasPopper: {\n      cursor: 'pointer'\n    },\n    badge: {\n      position: 'absolute',\n      top: '-0.25em',\n      left: '100%',\n      marginLeft: '-1em'\n    }\n  };\n\n  for (let row = 0; row < ICON_ROWS; ++row) {\n    for (let col = 0; col < ICONS_MAP[row].length; ++col) {\n      styles[ICONS_MAP[row][col]] = {\n        backgroundPosition: `${col * -100}% ${row * -100}%`\n      };\n    }\n  }\n\n  return styles;\n});\n\nconst OceanFishIcon = ({\n  type,\n  id,\n  size = 40,\n  Badge,\n  className\n}) => {\n  const classes = useStyles({\n    size\n  });\n  const {\n    i18n\n  } = useTranslation();\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const locale = i18n.language;\n\n  const handleClick = event => {\n    if (type === 'fish' && !anchorEl) {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleClickAway = () => {\n    setAnchorEl(null);\n  };\n\n  let tooltip;\n\n  switch (type) {\n    case 'fish':\n      tooltip = translate(locale, oceanFishes[id], 'name');\n      break;\n\n    case 'bait':\n      tooltip = translate(locale, baits[id], 'name');\n      break;\n\n    case 'achievement':\n      tooltip = translate(locale, achievements[id], 'name');\n      break;\n\n    case 'content-bonus':\n      tooltip = translate(locale, contentBonuses[id], 'objective');\n      break;\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Tooltip, {\n      arrow: true,\n      placement: \"top\",\n      title: tooltip,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: clsx(classes.iconContainer, type === 'fish' && classes.hasPopper, className),\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: clsx(classes.oceanFishIcon, classes[`${type}_${id}`])\n        }), type === 'fish' && /*#__PURE__*/_jsx(\"div\", {\n          className: classes.itemCover\n        }), type === 'bait' && /*#__PURE__*/_jsx(\"div\", {\n          className: classes.itemCover\n        }), type === 'achievement' && /*#__PURE__*/_jsx(\"div\", {\n          className: classes.achievementCover\n        }), Badge && /*#__PURE__*/_jsx(\"div\", {\n          className: classes.badge,\n          children: Badge\n        })]\n      })\n    }), type === 'fish' && /*#__PURE__*/_jsx(Popper, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      placement: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(ClickAwayListener, {\n        onClickAway: handleClickAway,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(OceanFishPopper, {\n            fishId: id\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(OceanFishIcon);","map":null,"metadata":{},"sourceType":"module"}