{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ItemIcon from './ItemIcon';\nimport TimeIcon from './TimeIcon';\nimport BaitGroup from './BaitGroup';\nimport ChecklistCheckmark from './ChecklistCheckmark';\nimport WeatherIcon from '../skywatcher/WeatherIcon';\nimport { getBaitGroup, subtextBiteTime } from './utils';\nimport translate from '../translate';\nimport { useTranslation } from '../i18n';\n\nfunction getImgUrl(fish) {\n  if (fish.lodestoneData !== null) {\n    return `https://img.finalfantasyxiv.com/lds/pc/global/images/itemicon/${fish.lodestoneData.icon_lg.slice(0, 2)}/${fish.lodestoneData.icon_lg}.png`;\n  } else {\n    // Fallback to XIVAPI's icons\n    return `https://xivapi.com/i/${`000000${fish.icon - fish.icon % 1000}`.slice(-6)}/${`000000${fish.icon}`.slice(-6)}.png`;\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: 400\n  },\n  header: {\n    padding: theme.spacing(2),\n    alignItems: 'start'\n  },\n  title: {\n    paddingTop: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 2, 2)\n  },\n  description: {\n    whiteSpace: 'pre-line'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\n\nconst OceanFishPopper = ({\n  fish\n}) => {\n  const classes = useStyles();\n  const {\n    t,\n    i18n\n  } = useTranslation('ocean-fishing');\n  const [expanded, setExpanded] = React.useState(false);\n  const spreadsheetData = fish.spreadsheetData;\n  const locale = i18n.language;\n\n  const handleClickExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  return /*#__PURE__*/_jsx(Box, {\n    boxShadow: 8,\n    children: /*#__PURE__*/_jsxs(Card, {\n      variant: \"outlined\",\n      className: classes.container,\n      children: [/*#__PURE__*/_jsx(CardHeader, {\n        avatar: /*#__PURE__*/_jsx(ItemIcon, {\n          src: getImgUrl(fish)\n        }),\n        title: translate(locale, fish, 'name'),\n        titleTypographyProps: {\n          variant: 'h6',\n          paragraph: true,\n          className: classes.title\n        },\n        subheader: /*#__PURE__*/_jsxs(\"div\", {\n          children: [fish.lodestoneData !== null && /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(Link, {\n              href: `https://na.finalfantasyxiv.com/lodestone/playguide/db/item/${fish.lodestoneData.item}/`,\n              children: \"Lodestone\"\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(Link, {\n              href: `https://ffxivteamcraft.com/db/${locale}/item/${fish.id}`,\n              children: \"Teamcraft\"\n            })\n          })]\n        }),\n        action: /*#__PURE__*/_jsx(ChecklistCheckmark, {\n          fishId: fish.id\n        }),\n        className: classes.header\n      }), /*#__PURE__*/_jsx(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsx(BaitGroup, _objectSpread(_objectSpread({}, getBaitGroup(fish)), {}, {\n          subtext: subtextBiteTime\n        }))\n      }), /*#__PURE__*/_jsx(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsx(Table, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxs(TableBody, {\n            children: [/*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('fishInfo.rating')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: spreadsheetData.stars !== null ? 'â˜…'.repeat(spreadsheetData.stars) : '?'\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('fishInfo.points')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: spreadsheetData.points !== null ? spreadsheetData.points : '?'\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('fishInfo.doubleHook')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: spreadsheetData.doubleHook !== null ? Array.isArray(spreadsheetData.doubleHook) ? spreadsheetData.doubleHook.join('-') : spreadsheetData.doubleHook : '?'\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('fishInfo.weather')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: spreadsheetData.weathers !== null ? (() => {\n                  switch (spreadsheetData.weathers.type) {\n                    case 'ALL':\n                      return 'Any';\n\n                    case 'OK':\n                      return spreadsheetData.weathers.list.map(weather => /*#__PURE__*/_jsx(WeatherIcon, {\n                        weather: weather,\n                        showLabel: false\n                      }, weather));\n\n                    case 'NOT OK':\n                      return /*#__PURE__*/_jsxs(_Fragment, {\n                        children: [/*#__PURE__*/_jsx(\"span\", {\n                          style: {\n                            verticalAlign: 'middle'\n                          },\n                          children: \"Not \"\n                        }), spreadsheetData.weathers.list.map(weather => /*#__PURE__*/_jsx(WeatherIcon, {\n                          weather: weather,\n                          showLabel: false\n                        }, weather))]\n                      });\n                  }\n                })() : '?'\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('fishInfo.timeOfDay')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: spreadsheetData.time !== null ? spreadsheetData.time.length === 3 ? 'Any' : spreadsheetData.time.map(time => /*#__PURE__*/_jsx(TimeIcon, {\n                  time: time\n                }, time)) : '?'\n              })]\n            })]\n          })\n        })\n      }), /*#__PURE__*/_jsx(Collapse, {\n        in: expanded,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsx(CardContent, {\n          className: classes.content,\n          children: /*#__PURE__*/_jsx(Typography, {\n            variant: \"body2\",\n            className: classes.description,\n            children: translate(locale, fish, 'description').replace(/\\n\\n+/g, '\\n\\n')\n          })\n        })\n      }), /*#__PURE__*/_jsx(CardActions, {\n        disableSpacing: true,\n        children: /*#__PURE__*/_jsx(IconButton, {\n          onClick: handleClickExpand,\n          className: clsx(classes.expand, expanded && classes.expandOpen),\n          children: /*#__PURE__*/_jsx(ExpandMoreIcon, {})\n        })\n      })]\n    })\n  });\n};\n\nexport default OceanFishPopper;","map":null,"metadata":{},"sourceType":"module"}