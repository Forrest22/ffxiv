{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport OceanFishIcon from './OceanFishIcon';\nimport TimeIcon from './TimeIcon';\nimport Tug from './Tug';\nimport StarBadge from './StarBadge';\nimport ChecklistCheckmark from './ChecklistCheckmark';\nimport WeatherIcon from '../skywatcher/WeatherIcon';\nimport { fishes, baits } from './ffxiv-ocean-fishing/data';\nimport { isBaitRequired } from './utils';\nimport translate from '../translate';\nimport { useTranslation } from '../i18n';\nvar BAIT_IDS = [29714, 29715, 29716, 29717, 2587, 2591, 2603, 2613, 2619, 27590, 29722, 29761, 29718, 32107];\n\nfunction getValidBaits(fishingSpots) {\n  return BAIT_IDS.filter(function (baitId) {\n    var _iterator = _createForOfIteratorHelper(fishingSpots),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var fishingSpot = _step.value;\n\n        var _iterator2 = _createForOfIteratorHelper(fishingSpot.fishes),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var fish = _step2.value;\n\n            if (fish.biteTimes[baitId] != null) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return false;\n  });\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    tableContainer: {\n      overflowY: 'hidden' // This is a mysterious issue appearing inconsistently only on Chrome\n\n    },\n    table: {\n      '& td': {\n        fontSize: '0.9em',\n        padding: 0\n      }\n    },\n    fishName: {\n      lineHeight: 1.25\n    },\n    stars: {\n      marginTop: '-0.125em',\n      opacity: 0.8\n    },\n    baitSelect: {\n      margin: theme.spacing(0.25, 1),\n      '& > div:first-child': {\n        padding: theme.spacing(0.33, 0.67),\n        fontSize: 'initial'\n      },\n      '& > svg': {\n        display: 'none'\n      }\n    },\n    baitCell: {\n      whiteSpace: 'nowrap',\n      '& > *': {\n        verticalAlign: 'middle'\n      }\n    },\n    intuition: {\n      position: 'relative',\n      verticalAlign: 'middle',\n      margin: '2px 2px 0'\n    },\n    tug: {\n      fontSize: '1.33em'\n    },\n    disabled: {\n      backgroundColor: theme.palette.type === 'dark' ? '#333333' : '#DDDDDD',\n      opacity: 0.5\n    }\n  };\n});\n\nvar FishTable = function FishTable(_ref) {\n  var fishingSpots = _ref.fishingSpots,\n      time = _ref.time;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('ocean-fishing'),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState('all'),\n      bait = _useState[0],\n      setBait = _useState[1];\n\n  var locale = i18n.language;\n\n  var handleSelectBait = function handleSelectBait(event) {\n    var baitId = event.target.value === 'all' ? 'all' : +event.target.value;\n    setBait(baitId);\n  };\n\n  return /*#__PURE__*/_jsx(TableContainer, {\n    className: classes.tableContainer,\n    children: /*#__PURE__*/_jsx(Table, {\n      size: \"small\",\n      className: classes.table,\n      children: fishingSpots.map(function (fishingSpot) {\n        var isSpectral = /spectral/i.test(fishingSpot.placeName.name.en);\n        return /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsx(TableHead, {\n            children: /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                colSpan: 3,\n                align: \"center\",\n                children: t('fish')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.bait')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.tug')\n              }), /*#__PURE__*/_jsxs(TableCell, {\n                align: \"center\",\n                children: [t('fishInfo.biteTime'), \":\", /*#__PURE__*/_jsxs(Select, {\n                  variant: \"outlined\",\n                  value: bait !== null ? bait : 'all',\n                  onChange: handleSelectBait,\n                  className: classes.baitSelect,\n                  children: [/*#__PURE__*/_jsx(MenuItem, {\n                    value: \"all\",\n                    children: t('fishInfo.allBaits')\n                  }), getValidBaits(fishingSpots).map(function (baitId) {\n                    return /*#__PURE__*/_jsx(MenuItem, {\n                      value: baitId,\n                      children: translate(locale, baits[baitId] || fishes[baitId], 'name')\n                    }, baitId);\n                  })]\n                })]\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.points')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.doubleHook')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t(\"fishInfo.\".concat(isSpectral ? 'timeOfDay' : 'weather'))\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.category')\n              })]\n            })\n          }), /*#__PURE__*/_jsx(TableBody, {\n            children: fishingSpot.fishes.map(function (fish) {\n              var _fish$biteTimes$bait, _fish$biteTimes$bait2, _fish$biteTimes$bait3, _fish$biteTimes$bait4;\n\n              var spreadsheetData = fish.spreadsheetData;\n              return /*#__PURE__*/_jsxs(TableRow, {\n                hover: true,\n                className: clsx(time !== undefined && spreadsheetData.time !== null && !spreadsheetData.time.includes(time) && classes.disabled),\n                children: [/*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsx(ChecklistCheckmark, {\n                    fishId: fish.id\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  children: /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"fish\",\n                    id: fish.id\n                  })\n                }), /*#__PURE__*/_jsxs(TableCell, {\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    children: /*#__PURE__*/_jsx(Typography, {\n                      className: classes.fishName,\n                      children: translate(locale, fish, 'name')\n                    })\n                  }), spreadsheetData.stars !== null && /*#__PURE__*/_jsx(\"div\", {\n                    className: classes.stars,\n                    children: 'â˜…'.repeat(spreadsheetData.stars)\n                  })]\n                }), /*#__PURE__*/_jsxs(TableCell, {\n                  align: \"center\",\n                  className: classes.baitCell,\n                  children: [spreadsheetData.intuition !== null && /*#__PURE__*/_jsxs(_Fragment, {\n                    children: [spreadsheetData.intuition.map(function (_ref2, index) {\n                      var fish = _ref2.fish,\n                          count = _ref2.count;\n                      return /*#__PURE__*/_jsxs(React.Fragment, {\n                        children: [/*#__PURE__*/_jsx(Typography, {\n                          display: \"inline\",\n                          children: index === 0 ? \"\".concat(count, \"\\xD7\") : \", \".concat(count, \"\\xD7\")\n                        }), /*#__PURE__*/_jsx(OceanFishIcon, {\n                          type: \"fish\",\n                          id: fish.id\n                        })]\n                      }, fish.id);\n                    }), /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/images/ocean-fishing/fishers-intuition.png\",\n                      className: classes.intuition\n                    })]\n                  }), spreadsheetData.bestBait !== null && /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"bait\",\n                    id: spreadsheetData.bestBait.id,\n                    badge: isBaitRequired(fish, spreadsheetData.bestBait) && /*#__PURE__*/_jsx(StarBadge, {})\n                  }), spreadsheetData.bestBait !== null && spreadsheetData.mooch !== null && 'or', spreadsheetData.mooch !== null && /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"fish\",\n                    id: spreadsheetData.mooch.id\n                  })]\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: spreadsheetData.tug !== null && /*#__PURE__*/_jsx(Tug, {\n                    strength: spreadsheetData.tug,\n                    className: classes.tug\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fish.biteTimes[bait] !== null && /*#__PURE__*/_jsx(Typography, {\n                    children: ((_fish$biteTimes$bait = fish.biteTimes[bait]) === null || _fish$biteTimes$bait === void 0 ? void 0 : _fish$biteTimes$bait[0]) === ((_fish$biteTimes$bait2 = fish.biteTimes[bait]) === null || _fish$biteTimes$bait2 === void 0 ? void 0 : _fish$biteTimes$bait2[1]) ? (_fish$biteTimes$bait3 = fish.biteTimes[bait]) === null || _fish$biteTimes$bait3 === void 0 ? void 0 : _fish$biteTimes$bait3[0] : (_fish$biteTimes$bait4 = fish.biteTimes[bait]) === null || _fish$biteTimes$bait4 === void 0 ? void 0 : _fish$biteTimes$bait4.join('-')\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: spreadsheetData.points !== null && /*#__PURE__*/_jsx(Typography, {\n                    children: spreadsheetData.points\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: spreadsheetData.doubleHook !== undefined && /*#__PURE__*/_jsx(Typography, {\n                    children: Array.isArray(spreadsheetData.doubleHook) ? spreadsheetData.doubleHook.join('-') : spreadsheetData.doubleHook\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: function () {\n                    if (isSpectral) {\n                      var _spreadsheetData$time, _spreadsheetData$time2;\n\n                      return ((_spreadsheetData$time = spreadsheetData.time) === null || _spreadsheetData$time === void 0 ? void 0 : _spreadsheetData$time.length) === 3 ? 'Any' : (_spreadsheetData$time2 = spreadsheetData.time) === null || _spreadsheetData$time2 === void 0 ? void 0 : _spreadsheetData$time2.map(function (time) {\n                        return /*#__PURE__*/_jsx(TimeIcon, {\n                          time: time\n                        }, time);\n                      });\n                    } else {\n                      if (spreadsheetData.weathers === null) return null;\n\n                      switch (spreadsheetData.weathers.type) {\n                        case 'ALL':\n                          return 'Any';\n\n                        case 'OK':\n                          return spreadsheetData.weathers.list.map(function (weather) {\n                            return /*#__PURE__*/_jsx(WeatherIcon, {\n                              weather: weather,\n                              showLabel: false\n                            }, weather);\n                          });\n\n                        case 'NOT OK':\n                          return /*#__PURE__*/_jsxs(_Fragment, {\n                            children: [/*#__PURE__*/_jsx(\"span\", {\n                              style: {\n                                verticalAlign: 'middle'\n                              },\n                              children: \"Not \"\n                            }), spreadsheetData.weathers.list.map(function (weather) {\n                              return /*#__PURE__*/_jsx(WeatherIcon, {\n                                weather: weather,\n                                showLabel: false\n                              }, weather);\n                            })]\n                          });\n                      }\n                    }\n                  }()\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fish.contentBonus !== null && /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"content-bonus\",\n                    id: fish.contentBonus.id,\n                    size: 30\n                  })\n                })]\n              }, fish.id);\n            })\n          })]\n        }, fishingSpot.id);\n      })\n    })\n  });\n};\n\nexport default FishTable;","map":null,"metadata":{},"sourceType":"module"}