{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport HomeIcon from '@material-ui/icons/Home';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TranslateIcon from '@material-ui/icons/Translate';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\nimport Link from './Link';\nimport { useTranslation } from './i18n';\nvar LANGUAGES = {\n  en: 'English',\n  de: 'Deutsch',\n  fr: 'Français',\n  ja: '日本語'\n};\n\nfunction getLanguage(locale) {\n  return LANGUAGES[locale] || (locale || '').toUpperCase();\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    toolbar: {\n      minHeight: 0,\n      paddingTop: theme.spacing(0.5),\n      paddingBottom: theme.spacing(0.5),\n      '& a': {\n        color: '#ffffff',\n        textTransform: 'none'\n      }\n    },\n    homeIcon: {\n      marginRight: theme.spacing(1)\n    },\n    languageButton: {\n      marginRight: theme.spacing(2)\n    },\n    brightnessIcon: {\n      verticalAlign: 'middle'\n    }\n  };\n});\n\nvar Header = function Header(_ref) {\n  var theme = _ref.theme,\n      setTheme = _ref.setTheme;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('common'),\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(null),\n      languageAnchorEl = _useState[0],\n      setLanguageAnchorEl = _useState[1];\n\n  useEffect(function () {\n    if (true) {\n      setTheme(window.localStorage.getItem('theme') === 'dark' ? 'dark' : 'light');\n    }\n  }, []);\n  useEffect(function () {\n    window.localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  var handleClickLanguage = function handleClickLanguage(event) {\n    setLanguageAnchorEl(event.currentTarget);\n  };\n\n  var handleSelectLanguage = function handleSelectLanguage(locale) {\n    setLanguageAnchorEl(null);\n    locale && i18n.changeLanguage(locale);\n  };\n\n  var handleChangeTheme = function handleChangeTheme() {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return /*#__PURE__*/_jsx(AppBar, {\n    position: \"fixed\",\n    children: /*#__PURE__*/_jsx(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsx(Toolbar, {\n            disableGutters: true,\n            className: classes.toolbar,\n            children: /*#__PURE__*/_jsx(Tooltip, {\n              title: \"Go home\",\n              enterDelay: 300,\n              children: /*#__PURE__*/_jsxs(Button, {\n                component: Link,\n                variant: \"contained\",\n                color: \"primary\",\n                disableElevation: true,\n                underline: \"none\",\n                href: \"/\",\n                children: [/*#__PURE__*/_jsx(HomeIcon, {\n                  className: classes.homeIcon\n                }), /*#__PURE__*/_jsx(Typography, {\n                  children: \"Lulu\\u2019s Tools\"\n                })]\n              })\n            })\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxs(Toolbar, {\n            disableGutters: true,\n            className: classes.toolbar,\n            children: [/*#__PURE__*/_jsx(Box, {\n              display: {\n                xs: 'none',\n                md: 'inline-block'\n              },\n              children: /*#__PURE__*/_jsx(Tooltip, {\n                title: \"Source code\",\n                enterDelay: 300,\n                children: /*#__PURE__*/_jsx(Button, {\n                  component: Link,\n                  variant: \"contained\",\n                  color: \"primary\",\n                  disableElevation: true,\n                  underline: \"none\",\n                  href: \"https://github.com/pillowfication/ffxiv\",\n                  children: /*#__PURE__*/_jsx(GitHubIcon, {})\n                })\n              })\n            }), /*#__PURE__*/_jsx(Tooltip, {\n              title: \"Change language\",\n              enterDelay: 300,\n              children: /*#__PURE__*/_jsxs(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                disableElevation: true,\n                className: classes.languageButton,\n                onClick: handleClickLanguage,\n                children: [/*#__PURE__*/_jsx(TranslateIcon, {\n                  fontSize: \"small\"\n                }), /*#__PURE__*/_jsx(Box, {\n                  display: {\n                    xs: 'none',\n                    md: 'inline-block'\n                  },\n                  px: 1,\n                  children: /*#__PURE__*/_jsx(NoSsr, {\n                    children: getLanguage(i18n.language)\n                  })\n                }), /*#__PURE__*/_jsx(ExpandMoreIcon, {\n                  fontSize: \"small\"\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Menu, {\n              anchorEl: languageAnchorEl,\n              marginThreshold: 0,\n              open: Boolean(languageAnchorEl),\n              onClose: handleSelectLanguage.bind(null, null),\n              children: // @ts-ignore\n              [i18n.options.defaultLanguage].concat(_toConsumableArray(i18n.options.otherLanguages)).map(function (locale) {\n                return /*#__PURE__*/_jsx(MenuItem, {\n                  onClick: handleSelectLanguage.bind(null, locale),\n                  children: getLanguage(locale)\n                }, locale);\n              })\n            }), /*#__PURE__*/_jsx(Box, {\n              display: {\n                xs: 'none',\n                md: 'inline-block'\n              },\n              children: /*#__PURE__*/_jsx(Brightness5Icon, {\n                className: classes.brightnessIcon\n              })\n            }), /*#__PURE__*/_jsx(Switch, {\n              checked: theme === 'dark',\n              onChange: handleChangeTheme\n            }), /*#__PURE__*/_jsx(Box, {\n              display: {\n                xs: 'none',\n                md: 'inline-block'\n              },\n              children: /*#__PURE__*/_jsx(Brightness2Icon, {\n                className: classes.brightnessIcon\n              })\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}