{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport CardContent from '@material-ui/core/CardContent';\nimport StopCardsContainer from './StopCardsContainer';\nimport StopCard from './StopCard';\nimport BaitList from './BaitList';\nimport { fishingSpots, fishes } from './ffxiv-ocean-fishing/data';\nimport * as maps from './maps';\nimport { getBaitGroup } from './utils';\nimport { translate } from '../utils';\nimport { useTranslation } from '../i18n';\n\nfunction getTimeSensitiveFishes(stopTime) {\n  const fishingSpotId = maps.STOP_MAP[stopTime[0]];\n  const spectralFishingSpot = fishingSpots[fishingSpotId + 1];\n  const time = stopTime[1];\n  return spectralFishingSpot.fishes.filter(fishId => {\n    const {\n      time: spreadsheetTime\n    } = fishes[fishId].spreadsheetData;\n    return spreadsheetTime && spreadsheetTime.length !== 3 && spreadsheetTime.includes(time);\n  });\n}\n\nconst RouteInformationTimeSensitive = ({\n  stopTimes\n}) => {\n  const {\n    i18n\n  } = useTranslation('ocean-fishing');\n  const locale = i18n.language;\n  return /*#__PURE__*/_jsx(StopCardsContainer, {\n    children: stopTimes.map((stopTime, index) => /*#__PURE__*/_jsx(StopCard, {\n      index: index,\n      stopTime: stopTime,\n      children: /*#__PURE__*/_jsx(CardContent, {\n        children: /*#__PURE__*/_jsx(BaitList, {\n          baitGroups: [maps.SPECTRAL_FISH_MAP[stopTime[0]], ...getTimeSensitiveFishes(stopTime)].filter(x => x).map(fishId => ({\n            header: translate(locale, fishes[fishId], 'name'),\n            baitGroupProps: getBaitGroup(fishId)\n          }))\n        })\n      })\n    }, stopTime))\n  });\n};\n\nexport default RouteInformationTimeSensitive;","map":null,"metadata":{},"sourceType":"module"}