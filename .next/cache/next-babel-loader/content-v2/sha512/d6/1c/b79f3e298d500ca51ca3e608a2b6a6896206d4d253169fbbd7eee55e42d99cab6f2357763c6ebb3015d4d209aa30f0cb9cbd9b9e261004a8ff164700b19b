{"ast":null,"code":"var SHY = \"\\xAD\"; // Not sure of any better way yet\n// Split all words that are >= 10 letters\n\nvar WITH_HYPHENS = {\n  Thunderstorms: \"Thunder\".concat(SHY, \"storms\"),\n  Sandstorms: \"Sand\".concat(SHY, \"storms\"),\n  Hyperelectricity: \"Hyper\".concat(SHY, \"elec\").concat(SHY, \"tricity\"),\n  Oppression: \"Oppres\".concat(SHY, \"sion\"),\n  Multiplicity: \"Multi\".concat(SHY, \"plicity\"),\n  Dragonstorms: \"Dragon\".concat(SHY, \"storms\"),\n  Subterrain: \"Sub\".concat(SHY, \"terrain\"),\n  Concordance: \"Concord\".concat(SHY, \"ance\"),\n  Wyrmstorms: \"Wyrm\".concat(SHY, \"storms\"),\n  Revelstorms: \"Revel\".concat(SHY, \"storms\"),\n  Quicklevin: \"Quick\".concat(SHY, \"levin\"),\n  'Dimensional Disruption': \"Dimen\".concat(SHY, \"sional Disrup\").concat(SHY, \"tion\"),\n  'Umbral Turbulence': \"Umbral Turbu\".concat(SHY, \"lence\"),\n  Brilliance: \"Bril\".concat(SHY, \"liance\"),\n  'Everlasting Light': \"Ever\".concat(SHY, \"lasting Light\"),\n  Termination: \"Termi\".concat(SHY, \"nation\"),\n  Irradiance: \"Irradi\".concat(SHY, \"ance\"),\n  Wolkenbruch: \"Wolken\".concat(SHY, \"bruch\"),\n  Schneesturm: \"Schnee\".concat(SHY, \"sturm\"),\n  Unheimlich: \"Unheim\".concat(SHY, \"lich\"),\n  Kernstrahlung: \"Kern\".concat(SHY, \"strah\").concat(SHY, \"lung\"),\n  Wolkenschleier: \"Wolken\".concat(SHY, \"schleier\"),\n  Bedrückend: \"Bedr\\xFC\".concat(SHY, \"ckend\"),\n  Schattenwind: \"Schatten\".concat(SHY, \"wind\"),\n  Schattengewitter: \"Schatten\".concat(SHY, \"gewitter\"),\n  Hochspannung: \"Hoch\".concat(SHY, \"span\").concat(SHY, \"nung\"),\n  Königsgewitter: \"K\\xF6nigs\".concat(SHY, \"gewitter\"),\n  Regnerisch: \"Regne\".concat(SHY, \"risch\"),\n  Unterirdisch: \"Unter\".concat(SHY, \"irdisch\"),\n  Gerechtigkeit: \"Gerech\".concat(SHY, \"tigkeit\"),\n  Drachensturm: \"Drachen\".concat(SHY, \"sturm\"),\n  Feiersturm: \"Feier\".concat(SHY, \"sturm\"),\n  Blitzsturm: \"Blitz\".concat(SHY, \"sturm\"),\n  Dimensionsspaltend: \"Dimen\".concat(SHY, \"sions\").concat(SHY, \"spal\").concat(SHY, \"tend\"),\n  Rotlodernd: \"Rotlo\".concat(SHY, \"dernd\"),\n  'Astrale Turbulenzen': \"Astrale Turbu\".concat(SHY, \"len\").concat(SHY, \"zen\"),\n  Blauschimmernd: \"Blau\".concat(SHY, \"schim\").concat(SHY, \"mernd\"),\n  Feenträume: \"Feen\".concat(SHY, \"tr\\xE4ume\"),\n  'Strahlende Glanzhaftigkeit': \"Strah\".concat(SHY, \"lende Glan\").concat(SHY, \"zhaf\").concat(SHY, \"tig\").concat(SHY, \"keit\"),\n  Rauchschwaden: \"Rauch\".concat(SHY, \"schwaden\"),\n  Apokalyptisch: \"Apo\".concat(SHY, \"kalyp\").concat(SHY, \"tisch\"),\n  Feuerseelenwinde: \"Feuer\".concat(SHY, \"seelen\").concat(SHY, \"winde\"),\n  Erdseelenwinde: \"Erd\".concat(SHY, \"seelen\").concat(SHY, \"winde\"),\n  Donnerseelenwinde: \"Donner\".concat(SHY, \"seelen\").concat(SHY, \"winde\"),\n  Sturmseelenwinde: \"Sturm\".concat(SHY, \"seelen\").concat(SHY, \"winde\"),\n  Wetterleuchten: \"Wetter\".concat(SHY, \"leuch\").concat(SHY, \"ten\"),\n  Flammensturm: \"Flammen\".concat(SHY, \"sturm\"),\n  Phantomströmung: \"Phantom\".concat(SHY, \"str\\xF6mung\"),\n  Brouillard: \"Brouil\".concat(SHY, \"lard\"),\n  'Pluie torrentielle': \"Pluie torren\".concat(SHY, \"tielle\"),\n  Désespérance: \"D\\xE9ses\".concat(SHY, \"p\\xE9rance\"),\n  'Radiations du Cœur': \"Radia\".concat(SHY, \"tions du C\\u0153ur\"),\n  Hyperélectricité: \"Hyper\".concat(SHY, \"\\xE9lectri\").concat(SHY, \"cit\\xE9\"),\n  // Oppression: `Oppression`,\n  Multiplicité: \"Multi\".concat(SHY, \"pli\").concat(SHY, \"cit\\xE9\"),\n  Souterrain: \"Sou\".concat(SHY, \"ter\").concat(SHY, \"rain\"),\n  'Infini démoniaque': \"Infini d\\xE9mo\".concat(SHY, \"niaque\"),\n  'Tempête draconique': \"Temp\\xEAte draco\".concat(SHY, \"nique\"),\n  'Perturbation dimensionnelle': \"Pertur\".concat(SHY, \"bation dimen\").concat(SHY, \"sion\").concat(SHY, \"nelle\"),\n  Fantasmagorique: \"Fantas\".concat(SHY, \"mago\").concat(SHY, \"rique\"),\n  'Turbulences ombrales': \"Turbu\".concat(SHY, \"lences ombrales\"),\n  Apocalypse: \"Apoca\".concat(SHY, \"lypse\"),\n  Rayonnement: \"Rayon\".concat(SHY, \"nement\")\n};\nexport default function softHyphens(str) {\n  return WITH_HYPHENS[str] !== undefined ? WITH_HYPHENS[str] : str;\n}","map":null,"metadata":{},"sourceType":"module"}