{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport NextApp from 'next/app';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport GlobalStyles from '../src/GlobalStyles';\nimport Header from '../src/Header';\nimport { lightTheme, darkTheme } from '../src/themes';\nimport * as gtag from '../src/gtag';\nimport i18n from '../src/i18n';\nconst useStyles = makeStyles(() => ({\n  main: {\n    paddingTop: '4rem',\n    paddingBottom: '6rem'\n  }\n}));\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    0: theme,\n    1: setTheme\n  } = useState('light');\n  useEffect(() => {\n    const handleRouteChange = url => {\n      gtag.pageview(url);\n    };\n\n    router.events.on('routeChangeComplete', handleRouteChange);\n    return () => {\n      router.events.off('routeChangeComplete', handleRouteChange);\n    };\n  }, [router.events]);\n  useEffect(() => {\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Lulu\\u2019s FFXIV Tools\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n      }), /*#__PURE__*/_jsx(\"script\", {\n        src: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-AMS_HTML\"\n      })]\n    }), /*#__PURE__*/_jsxs(ThemeProvider, {\n      theme: theme === 'dark' ? darkTheme : lightTheme,\n      children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(GlobalStyles, {}), /*#__PURE__*/_jsx(Header, {\n        theme: theme,\n        setTheme: setTheme\n      }), /*#__PURE__*/_jsx(Container, {\n        maxWidth: \"lg\",\n        className: classes.main,\n        component: \"main\",\n        children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n      })]\n    })]\n  });\n};\n\nApp.getInitialProps = async appContext => _objectSpread({}, await NextApp.getInitialProps(appContext));\n\nexport default i18n.appWithTranslation(App);","map":null,"metadata":{},"sourceType":"module"}