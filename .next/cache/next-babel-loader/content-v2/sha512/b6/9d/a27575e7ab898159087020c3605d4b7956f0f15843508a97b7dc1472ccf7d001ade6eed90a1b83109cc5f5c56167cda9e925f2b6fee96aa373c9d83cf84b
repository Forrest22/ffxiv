{"ast":null,"code":"import _regeneratorRuntime from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { useQueryState } from 'next-usequerystate';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport Page from '../src/Page';\nimport Section from '../src/Section';\nimport Results from '../src/xivapi/Results';\nimport { useTranslation } from '../src/i18n';\nvar useStyles = makeStyles(function () {\n  return {\n    inputContainer: {\n      display: 'flex'\n    },\n    input: {\n      flex: 1\n    }\n  };\n});\n\nvar Xivapi = function Xivapi() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('xivapi'),\n      t = _useTranslation.t;\n\n  var _useQueryState = useQueryState('url', {\n    history: 'push'\n  }),\n      _useQueryState2 = _slicedToArray(_useQueryState, 2),\n      url = _useQueryState2[0],\n      setUrl = _useQueryState2[1];\n\n  var _useState = useState(''),\n      inputUrl = _useState[0],\n      setInputUrl = _useState[1];\n\n  useEffect(function () {\n    if (url === null) {\n      setUrl('/content');\n    }\n  }, []);\n  useEffect(function () {\n    if (url !== null) {\n      setInputUrl(url);\n    }\n  }, [url]);\n\n  var handleInputUrl = function handleInputUrl(event) {\n    setInputUrl(event.target.value);\n  };\n\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === 'Enter') {\n      setUrl(inputUrl);\n    }\n  };\n\n  var handleClickGo = function handleClickGo() {\n    setUrl(inputUrl);\n  };\n\n  return /*#__PURE__*/_jsx(Page, {\n    title: t('_title'),\n    description: t('_description'),\n    children: /*#__PURE__*/_jsx(Section, {\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxs(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.inputContainer,\n          children: [/*#__PURE__*/_jsx(TextField, {\n            variant: \"filled\",\n            label: \"URL\",\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n                position: \"start\",\n                children: \"https://xivapi.com\"\n              })\n            },\n            value: inputUrl !== null ? inputUrl : '',\n            onChange: handleInputUrl,\n            onKeyPress: handleKeyPress,\n            className: classes.input\n          }), /*#__PURE__*/_jsx(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleClickGo,\n            children: \"Enter\"\n          })]\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(NoSsr, {\n            children: url !== null && /*#__PURE__*/_jsx(Results, {\n              url: url,\n              onChangeUrl: setUrl\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nXivapi.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: ['common', 'xivapi']\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Xivapi;","map":null,"metadata":{},"sourceType":"module"}