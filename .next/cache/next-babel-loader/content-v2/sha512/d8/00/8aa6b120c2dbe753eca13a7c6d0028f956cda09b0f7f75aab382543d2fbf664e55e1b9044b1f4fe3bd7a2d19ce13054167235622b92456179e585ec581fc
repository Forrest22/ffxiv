{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport fetch from '../fetch-xivapi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Pagination from './Pagination';\nimport renderJSON from './render-json';\nvar CACHE = [];\n\nfunction getCached(key) {\n  return CACHE.find(function (item) {\n    return item.key === key;\n  });\n}\n\nfunction addCached(key, value) {\n  CACHE.push({\n    key: key,\n    value: value\n  });\n\n  if (CACHE.length > 100) {\n    CACHE.shift();\n  }\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    results: {\n      padding: theme.spacing(2, 2, 2, 4),\n      whiteSpace: 'pre-wrap',\n      fontFamily: 'monospace',\n      fontSize: '1.33em'\n    }\n  };\n});\n\nvar Results = function Results(_ref) {\n  var url = _ref.url,\n      onChangeUrl = _ref.onChangeUrl;\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    var cached = getCached(url);\n\n    if (cached !== undefined) {\n      setData(cached.value);\n    } else {\n      // Use Suspense to avoid race thinggy\n      setData(null);\n      fetch(url).then(function (json) {\n        addCached(url, json);\n        setData(json);\n      })[\"catch\"](function (err) {\n        setData(err);\n      });\n    }\n  }, [url]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Pagination, {\n      url: url,\n      data: data,\n      onChangeUrl: onChangeUrl\n    }), /*#__PURE__*/_jsx(Paper, {\n      className: classes.results,\n      children: data !== null ? renderJSON(data, {\n        depth: 0,\n        onChangeUrl: onChangeUrl,\n        _isContent: url === '/content' || url === '/Content'\n      }) : 'Loading...'\n    }), /*#__PURE__*/_jsx(Pagination, {\n      url: url,\n      data: data,\n      onChangeUrl: onChangeUrl\n    })]\n  });\n};\n\nexport default Results;","map":null,"metadata":{},"sourceType":"module"}