{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport bent from 'bent';\nimport Paper from '@material-ui/core/Paper';\nimport Pagination from './Pagination';\nimport renderJSON from './render-json';\nconst xivapi = bent('json', 'https://xivapi.com', 200);\nconst CACHE = [];\n\nfunction getCached(key) {\n  return CACHE.find(item => item.key === key);\n}\n\nfunction addCached(key, value) {\n  CACHE.push({\n    key,\n    value\n  });\n\n  if (CACHE.length > 100) {\n    CACHE.shift();\n  }\n}\n\nconst useStyles = makeStyles(theme => ({\n  results: {\n    padding: theme.spacing(2, 2, 2, 4),\n    whiteSpace: 'pre-wrap',\n    fontFamily: 'monospace',\n    fontSize: '1.33em'\n  }\n}));\n\nconst Results = ({\n  url,\n  onChangeUrl\n}) => {\n  const classes = useStyles();\n  const {\n    0: data,\n    1: setData\n  } = useState(null);\n  useEffect(() => {\n    const cached = getCached(url);\n\n    if (cached) {\n      setData(cached.value);\n    } else {\n      // Use Suspense to avoid race thinggy, and handle errors\n      setData(null);\n      xivapi(url).then(json => {\n        addCached(url, json);\n        setData(json);\n      }).catch(err => {\n        setData(err);\n      });\n    }\n  }, [url]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Pagination, {\n      url: url,\n      data: data,\n      onChangeUrl: onChangeUrl\n    }), /*#__PURE__*/_jsx(Paper, {\n      className: classes.results,\n      children: data ? renderJSON(data, {\n        depth: 0,\n        onChangeUrl,\n        _isContent: url === '/content' || url === '/Content'\n      }) : 'Loading...'\n    }), /*#__PURE__*/_jsx(Pagination, {\n      url: url,\n      data: data,\n      onChangeUrl: onChangeUrl\n    })]\n  });\n};\n\nexport default Results;","map":null,"metadata":{},"sourceType":"module"}