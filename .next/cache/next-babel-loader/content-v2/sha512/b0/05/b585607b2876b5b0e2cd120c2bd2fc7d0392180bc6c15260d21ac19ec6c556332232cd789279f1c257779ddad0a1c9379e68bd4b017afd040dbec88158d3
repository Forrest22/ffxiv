{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Section from '../Section';\nimport NameAutocomplete from './NameAutocomplete';\nimport MyNameIs from './MyNameIs';\nimport names from './names/data/names.json';\nimport { translate, Clan, Gender } from './names';\nimport { upperFirst, formatName } from './names/utils';\nimport { useTranslation } from '../i18n';\n\nfunction splitPhoneme(phoneme) {\n  return phoneme.slice(0, phoneme.length / 2);\n}\n\nconst DunesfolkMale = () => {\n  const {\n    t,\n    i18n\n  } = useTranslation('name-generator');\n  const {\n    0: phonemeA,\n    1: setPhonemeA\n  } = useState('');\n  const {\n    0: phonemeB,\n    1: setPhonemeB\n  } = useState('');\n  const {\n    0: phonemeC,\n    1: setPhonemeC\n  } = useState('');\n  const name = formatName(phonemeA + phonemeA + phonemeB, phonemeC + phonemeC + phonemeB);\n  const locale = i18n.language;\n  return /*#__PURE__*/_jsx(Section, {\n    title: `${translate('clan', Clan.Dunesfolk, locale)} (${translate('gender', Gender.Male, locale)})`,\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(NameAutocomplete, {\n              options: names.LalafellDunesfolkMale.map(splitPhoneme),\n              value: phonemeA,\n              onChange: setPhonemeA,\n              label: t('phoneme', {\n                label: 'A'\n              }),\n              placeholder: t('enterPhoneme')\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(NameAutocomplete, {\n              options: names.LalafellDunesfolkMaleLastName.map(upperFirst),\n              value: phonemeB,\n              onChange: setPhonemeB,\n              label: t('phoneme', {\n                label: 'B'\n              }),\n              placeholder: t('enterPhoneme')\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(NameAutocomplete, {\n              options: names.LalafellDunesfolkMale.map(splitPhoneme),\n              value: phonemeC,\n              onChange: setPhonemeC,\n              label: t('phoneme', {\n                label: 'C'\n              }),\n              placeholder: t('enterPhoneme')\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxs(Typography, {\n          paragraph: true,\n          children: [\"Lalafellen names are ruled by rhythm, repetition, and rhyming. Male Dunesfolk names follow the phoneme pattern \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"AAB CCB\"\n          }), \".\"]\n        }), /*#__PURE__*/_jsxs(Typography, {\n          paragraph: true,\n          children: [\"The \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"A\"\n          }), \" and \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"C\"\n          }), \" phonemes are one syllable, and the \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"B\"\n          }), \" phoneme is two.\"]\n        })]\n      }), name && /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(MyNameIs, {\n          name: name\n        })\n      })]\n    })\n  });\n};\n\nexport default DunesfolkMale;","map":null,"metadata":{},"sourceType":"module"}