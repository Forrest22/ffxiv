{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Section from '../Section';\nimport NameAutocomplete from './NameAutocomplete';\nimport MyNameIs from './MyNameIs';\nimport { charaMakeNames, miqoteTribes } from './ffxiv-name-generator/data';\nimport { translate, Clan, Gender } from './ffxiv-name-generator';\nimport { upperFirst } from './ffxiv-name-generator/src/utils';\nimport { useTranslation } from '../i18n';\n\nvar SeekersOfTheSunFemale = function SeekersOfTheSunFemale() {\n  var _useTranslation = useTranslation('name-generator'),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(''),\n      forename = _useState[0],\n      setForename = _useState[1];\n\n  var _useState2 = useState(''),\n      tribe = _useState2[0],\n      setTribe = _useState2[1];\n\n  var _useState3 = useState(''),\n      surname = _useState3[0],\n      setSurname = _useState3[1];\n\n  var name = \"\".concat(upperFirst([tribe, forename].filter(function (x) {\n    return x;\n  }).join('\\'')), \" \").concat(upperFirst(surname)).trim();\n  var locale = i18n.language;\n  return /*#__PURE__*/_jsx(Section, {\n    title: \"\".concat(translate('clan', Clan.SeekerOfTheSun, locale), \" (\").concat(translate('gender', Gender.Female, locale), \")\"),\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(NameAutocomplete, {\n          options: charaMakeNames.miqote_seekerOfTheSun_female.map(function (name) {\n            return upperFirst(name.replace(/^.*'/, ''));\n          }),\n          value: forename,\n          onChange: setForename,\n          label: t('forename'),\n          placeholder: t('enterForename')\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxs(Typography, {\n          paragraph: true,\n          children: [\"The extra \\u201Ch\\u201Ds (e.g. \\u201CB\", /*#__PURE__*/_jsx(\"b\", {\n            children: \"h\"\n          }), \"ee\\u201D, \\u201CKuz\", /*#__PURE__*/_jsx(\"b\", {\n            children: \"h\"\n          }), \"\\u201D, and \\u201CPa\", /*#__PURE__*/_jsx(\"b\", {\n            children: \"h\"\n          }), \"sh\\u201D) represent a slight hissing/spitting sound that are pronounced by the Miqo\\u2019te and ignored by the other races.\"]\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(NameAutocomplete, {\n          options: Object.keys(miqoteTribes),\n          getOptionLabel: function getOptionLabel(tribe) {\n            return \"\".concat(tribe, \" - \").concat(miqoteTribes[tribe]);\n          },\n          value: tribe,\n          onChange: setTribe,\n          label: t('tribe'),\n          placeholder: t('enterTribe')\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(Typography, {\n          paragraph: true,\n          children: \"The forename is always preceeded by a letter representing their tribe. Tribe names are based on traditional beastkin, scalekin, or cloudkin totems said to protect the tribe.\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(NameAutocomplete, {\n          options: charaMakeNames.miqote_seekerOfTheSun_female_lastName,\n          value: surname,\n          onChange: setSurname,\n          label: t('surname'),\n          placeholder: t('enterSurname')\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(Typography, {\n          paragraph: true,\n          children: \"The female\\u2019s surname is taken from the breeding male who sired her.\"\n        })\n      }), name.length > 0 && /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(MyNameIs, {\n          name: name\n        })\n      })]\n    })\n  });\n};\n\nexport default SeekersOfTheSunFemale;","map":null,"metadata":{},"sourceType":"module"}