{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Section from '../Section';\nimport NameAutocomplete from './NameAutocomplete';\nimport MyNameIs from './MyNameIs';\nimport { charaMakeNames } from './ffxiv-name-generator/data';\nimport { translate, Clan, Gender } from './ffxiv-name-generator';\nimport { upperFirst, formatName } from './ffxiv-name-generator/src/utils';\nimport { useTranslation } from '../i18n';\n\nconst PlainsfolkMale = () => {\n  const {\n    t,\n    i18n\n  } = useTranslation('name-generator');\n  const {\n    0: phonemeA,\n    1: setPhonemeA\n  } = useState('');\n  const {\n    0: phonemeB,\n    1: setPhonemeB\n  } = useState('');\n  const {\n    0: phonemeC,\n    1: setPhonemeC\n  } = useState('');\n  const name = formatName(phonemeA + phonemeB, phonemeC + phonemeB);\n  const locale = i18n.language;\n  return /*#__PURE__*/_jsx(Section, {\n    title: `${translate('clan', Clan.Plainsfolk, locale)} (${translate('gender', Gender.Male, locale)})`,\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(NameAutocomplete, {\n              options: charaMakeNames.lalafell_plainsfolk_firstNameStart,\n              value: phonemeA,\n              onChange: setPhonemeA,\n              label: t('phoneme', {\n                label: 'A'\n              }),\n              placeholder: t('enterPhoneme')\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(NameAutocomplete, {\n              options: charaMakeNames.lalafell_plainsfolk_endOfNames.map(upperFirst),\n              value: phonemeB,\n              onChange: setPhonemeB,\n              label: t('phoneme', {\n                label: 'B'\n              }),\n              placeholder: t('enterPhoneme')\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(NameAutocomplete, {\n              options: charaMakeNames.lalafell_plainsfolk_lastNameStart,\n              value: phonemeC,\n              onChange: setPhonemeC,\n              label: t('phoneme', {\n                label: 'C'\n              }),\n              placeholder: t('enterPhoneme')\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxs(Typography, {\n          paragraph: true,\n          children: [\"Lalafellen names are ruled by rhythm, repetition, and rhyming. Male Plainsfolk names follow the phoneme pattern \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"AB CB\"\n          }), \".\"]\n        }), /*#__PURE__*/_jsxs(Typography, {\n          paragraph: true,\n          children: [\"The \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"A\"\n          }), \" and \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"C\"\n          }), \" phonemes do not have to rhyme, and the \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"A\"\n          }), \", \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"B\"\n          }), \", and \", /*#__PURE__*/_jsx(\"b\", {\n            children: \"C\"\n          }), \" phonemes are usually limited to one or two syllables.\"]\n        })]\n      }), name.length > 0 && /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(MyNameIs, {\n          name: name\n        })\n      })]\n    })\n  });\n};\n\nexport default PlainsfolkMale;","map":null,"metadata":{},"sourceType":"module"}