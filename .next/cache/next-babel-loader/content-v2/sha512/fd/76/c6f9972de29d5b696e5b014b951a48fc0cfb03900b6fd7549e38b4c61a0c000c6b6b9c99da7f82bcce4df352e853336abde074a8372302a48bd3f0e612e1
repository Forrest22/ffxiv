{"ast":null,"code":"import names from './data/names.json';\nimport { randomElement, formatName } from './utils';\nimport { Clan, Gender } from './types';\nconst GENERATORS = {\n  [Clan.Midlander]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.HyurMidlanderMale);\n      const surname = randomElement(names.HyurMidlanderLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.HyurMidlanderFemale);\n      const surname = randomElement(names.HyurMidlanderLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.Highlander]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.HyurHighlanderMale);\n      const surname = randomElement(names.HyurHighlanderLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.HyurHighlanderFemale);\n      const surname = randomElement(names.HyurHighlanderLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.Wildwood]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.ElezenMale);\n      const surname = randomElement(names.ElezenWildwoodLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.ElezenFemale);\n      const surname = randomElement(names.ElezenWildwoodLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.Duskwight]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.ElezenMale);\n      const surname = randomElement(names.ElezenDuskwightLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.ElezenFemale);\n      const surname = randomElement(names.ElezenDuskwightLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.Plainsfolk]: {\n    [Gender.Male]: () => {\n      const phonemeA = randomElement(names.LalafellPlainsfolkFirstNameStart);\n      const phonemeB = randomElement(names.LalafellPlainsfolkEndOfNames);\n      const phonemeC = randomElement(names.LalafellPlainsfolkLastNameStart);\n      return formatName(phonemeA + phonemeB, phonemeC + phonemeB);\n    },\n    [Gender.Female]: () => {\n      const phonemeA = randomElement(names.LalafellPlainsfolkFirstNameStart);\n      const phonemeB = randomElement(names.LalafellPlainsfolkEndOfNames);\n      return formatName(phonemeA + phonemeB + phonemeB, phonemeA + phonemeB);\n    }\n  },\n  [Clan.Dunesfolk]: {\n    [Gender.Male]: () => {\n      const phonemeAA = randomElement(names.LalafellDunesfolkMale);\n      const phonemeB = randomElement(names.LalafellDunesfolkMaleLastName);\n      const phonemeCC = randomElement(names.LalafellDunesfolkMale);\n      return formatName(phonemeAA + phonemeB, phonemeCC + phonemeB);\n    },\n    [Gender.Female]: () => {\n      const phonemeA = randomElement(names.LalafellDunesfolkFemale);\n      const phonemeB = randomElement(names.LalafellDunesfolkFemaleLastName);\n      return formatName(phonemeA + phonemeA + phonemeB, phonemeA + phonemeB);\n    }\n  },\n  [Clan.SeekerOfTheSun]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.MiqoteSunMale);\n      const surname = randomElement(names.MiqoteSunMaleLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.MiqoteSunFemale);\n      const surname = randomElement(names.MiqoteSunFemaleLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.KeeperOfTheMoon]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.MiqoteMoonMale);\n      const surname = randomElement(names.MiqoteMoonLastname);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.MiqoteMoonFemale);\n      const surname = randomElement(names.MiqoteMoonLastname);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.SeaWolf]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.RoegadynSeaWolfMale);\n      const surname = randomElement(names.RoegadynSeaWolfMaleLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.RoegadynSeaWolfFemale);\n      const surname = randomElement(names.RoegadynSeaWolfFemaleLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.Hellsguard]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.RoegadynHellsguardFirstName);\n      const surname = randomElement(names.RoegadynHellsguardMaleLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.RoegadynHellsguardFirstName);\n      const surname = randomElement(names.RoegadynHellsguardFemaleLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.Raen]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.AuRaRaenMale);\n      const surname = randomElement(names.AuRaRaenLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.AuRaRaenFemale);\n      const surname = randomElement(names.AuRaRaenLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.Xaela]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.AuRaXaelaMale);\n      const surname = randomElement(names.AuRaXaelaLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.AuRaXaelaFemale);\n      const surname = randomElement(names.AuRaXaelaLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.Helions]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.HrothgarHellionsFirstName);\n      const surname = randomElement(names.HrothgarHellionsLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      throw new Error(`Cannot generate: ${Clan.Helions} ${Gender.Female}`);\n    }\n  },\n  [Clan.TheLost]: {\n    [Gender.Male]: () => {\n      const forename = randomElement(names.HrothgarLostFirstName);\n      const surname = randomElement(names.HrothgarLostLastName);\n      return formatName(forename, surname);\n    },\n    [Gender.Female]: () => {\n      throw new Error(`Cannot generate: ${Clan.TheLost} ${Gender.Female}`);\n    }\n  },\n  [Clan.Rava]: {\n    [Gender.Male]: () => {\n      throw new Error(`Cannot generate: ${Clan.Rava} ${Gender.Male}`);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.VieraFirstName);\n      const surname = randomElement(names.VieraRavaLastName);\n      return formatName(forename, surname);\n    }\n  },\n  [Clan.Veena]: {\n    [Gender.Male]: () => {\n      throw new Error(`Cannot generate: ${Clan.Veena} ${Gender.Male}`);\n    },\n    [Gender.Female]: () => {\n      const forename = randomElement(names.VieraFirstName);\n      const surname = randomElement(names.VieraVeenaLastName);\n      return formatName(forename, surname);\n    }\n  }\n};\nexport default function generate(clan, gender) {\n  return GENERATORS[clan][gender]();\n}","map":null,"metadata":{},"sourceType":"module"}