{"ast":null,"code":"import _fishingSpots from './fishing-spots.json';\nimport _placeNames from './place-names.json';\nimport _fishes from './fishes.json';\nimport _baits from './baits.json';\nimport _contentBonuses from './content-bonuses.json';\nimport _achievements from './achievements.json';\nimport _biteTimes from './bite-times.json';\nimport spreadsheetData from './spreadsheet-data.json';\nimport lodestoneData from './lodestone-data.json';\nimport { Weather } from '../../../skywatcher/ffxiv-skywatcher/src/types';\nvar baitMap = Object.values(_baits).reduce(function (acc, curr) {\n  acc[curr.name.en] = curr;\n  return acc;\n}, {});\nvar fishMap = Object.values(_fishes).reduce(function (acc, curr) {\n  acc[curr.name.en] = curr;\n  return acc;\n}, {});\nvar spreadsheetMap = Object.values(spreadsheetData).flatMap(function (x) {\n  return x;\n}).reduce(function (acc, curr) {\n  acc[curr.name] = curr;\n  return acc;\n}, {});\n\nfunction getMapped(map, name) {\n  if (name === null) {\n    return null;\n  }\n\n  if (map[name] === undefined) {\n    throw new Error(\"Could not find '\".concat(name, \"'\"));\n  }\n\n  return map[name];\n}\n\nfor (var _i = 0, _Object$values = Object.values(_fishingSpots); _i < _Object$values.length; _i++) {\n  var fishingSpot = _Object$values[_i];\n  fishingSpot.placeName_main = _placeNames[fishingSpot.placeName_main];\n  fishingSpot.placeName_sub = _placeNames[fishingSpot.placeName_sub];\n  fishingSpot.placeName = _placeNames[fishingSpot.placeName];\n  fishingSpot.fishes = fishingSpot.fishes.map(function (fishId) {\n    return _fishes[fishId];\n  }); // eslint-disable-line @typescript-eslint/no-unnecessary-type-assertion\n}\n\nexport var fishingSpots = _fishingSpots;\nexport var placeNames = _placeNames;\n\nfor (var _i2 = 0, _Object$values2 = Object.values(_fishes); _i2 < _Object$values2.length; _i2++) {\n  var fish = _Object$values2[_i2];\n  fish.contentBonus = fish.contentBonus !== null ? _contentBonuses[fish.contentBonus] : null; // Attach bite times\n\n  fish.biteTimes = _biteTimes[fish.id]; // Attach spreadsheet data\n\n  if (fish.id === 0) {\n    fish.spreadsheetData = {\n      bait: null,\n      points: null,\n      doubleHook: null,\n      mooch: null,\n      tug: null,\n      time: null,\n      weathers: null,\n      stars: null,\n      intuition: null\n    };\n  } else {\n    (function () {\n      var spreadsheetData = getMapped(spreadsheetMap, fish.name.en);\n      fish.spreadsheetData = {\n        bait: getMapped(baitMap, spreadsheetData.bait),\n        points: spreadsheetData.points,\n        doubleHook: spreadsheetData.doubleHook,\n        mooch: getMapped(fishMap, spreadsheetData.mooch),\n        tug: spreadsheetData.tug,\n        time: spreadsheetData.time !== null ? spreadsheetData.time.split('') : null,\n        weathers: spreadsheetData.weathers !== null ? function () {\n          switch (spreadsheetData.weathers.type) {\n            case 'ALL':\n              return spreadsheetData.weathers;\n\n            case 'OK':\n            case 'NOT OK':\n              return {\n                type: spreadsheetData.weathers.type,\n                list: spreadsheetData.weathers.list.map(function (weather) {\n                  return Weather[weather];\n                })\n              };\n          }\n        }() : null,\n        stars: spreadsheetData.stars,\n        intuition: spreadsheetData.intuition != null ? spreadsheetData.intuition.map(function (_ref) {\n          var name = _ref.name,\n              count = _ref.count;\n          return {\n            fish: getMapped(fishMap, name),\n            count: count\n          };\n        }) : null\n      };\n    })();\n  } // Attach Lodestone data\n\n\n  fish.lodestoneData = lodestoneData[fish.id];\n}\n\nexport var fishes = _fishes;\nexport var baits = _baits;\nexport var contentBonuses = _contentBonuses;\nexport var achievements = _achievements;","map":null,"metadata":{},"sourceType":"module"}