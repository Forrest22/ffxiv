{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { translate } from './weather';\nimport Section from '../Section';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport UpcomingWeatherTable from './UpcomingWeatherTable';\nimport { Region } from './weather/consts';\nimport PARTITION from './weather/regions-partition';\nimport { useTranslation } from '../i18n';\nvar REGIONS = [Region.LaNoscea, Region.TheBlackShroud, Region.Thanalan, Region.IshgardAndSurroundingAreas, Region.GyrAbania, Region.TheFarEast, Region.Norvrandt, Region.Others];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    options: {\n      marginBottom: theme.spacing(2)\n    }\n  };\n});\n\nvar UpcomingWeather = function UpcomingWeather(_ref) {\n  var now = _ref.now;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('skywatcher'),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var router = useRouter();\n\n  var _useState = useState(null),\n      filter = _useState[0],\n      setFilter = _useState[1];\n\n  var _useState2 = useState(true),\n      showLabels = _useState2[0],\n      setShowLabels = _useState2[1];\n\n  var _useState3 = useState(false),\n      showLocalTime = _useState3[0],\n      setShowLocalTime = _useState3[1];\n\n  var _useState4 = useState(false),\n      showWeatherChance = _useState4[0],\n      setShowWeatherChance = _useState4[1];\n\n  var locale = i18n.language;\n  useEffect(function () {\n    var queryFilter = String(router.query.filter);\n    setFilter(Object.values(Region).includes(queryFilter) ? queryFilter : null);\n  }, [router.query.filter]);\n\n  var handleSelectFilter = function handleSelectFilter(event) {\n    var filter = event.target.value === 'none' ? null : event.target.value;\n    router.push({\n      pathname: router.pathname,\n      query: filter && {\n        filter: filter\n      }\n    });\n  };\n\n  var handleToggleLabels = function handleToggleLabels() {\n    setShowLabels(!showLabels);\n  };\n\n  var handleToggleLocalTime = function handleToggleLocalTime() {\n    setShowLocalTime(!showLocalTime);\n  };\n\n  var handleToggleWeatherChance = function handleToggleWeatherChance() {\n    setShowWeatherChance(!showWeatherChance);\n  };\n\n  return /*#__PURE__*/_jsxs(Section, {\n    title: t('upcomingWeather'),\n    children: [/*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 1,\n      className: classes.options,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          variant: \"filled\",\n          fullWidth: true,\n          margin: \"dense\",\n          children: [/*#__PURE__*/_jsx(InputLabel, {\n            children: t('selectRegion')\n          }), /*#__PURE__*/_jsxs(Select, {\n            onChange: handleSelectFilter,\n            value: filter || 'none',\n            children: [/*#__PURE__*/_jsx(MenuItem, {\n              value: \"none\",\n              children: t('showAllRegions')\n            }), REGIONS.map(function (region) {\n              return /*#__PURE__*/_jsx(MenuItem, {\n                value: region,\n                children: translate('region', region, locale)\n              }, region);\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsx(FormControlLabel, {\n          control: /*#__PURE__*/_jsx(Checkbox, {\n            checked: showLabels,\n            onChange: handleToggleLabels,\n            color: \"primary\"\n          }),\n          label: t('showLabels')\n        }), /*#__PURE__*/_jsx(FormControlLabel, {\n          control: /*#__PURE__*/_jsx(Checkbox, {\n            checked: showLocalTime,\n            onChange: handleToggleLocalTime,\n            color: \"primary\"\n          }),\n          label: t('showLocalTimes')\n        }), /*#__PURE__*/_jsx(FormControlLabel, {\n          control: /*#__PURE__*/_jsx(Checkbox, {\n            checked: showWeatherChance,\n            onChange: handleToggleWeatherChance,\n            color: \"primary\"\n          }),\n          label: /*#__PURE__*/_jsxs(_Fragment, {\n            children: [\"Show \", /*#__PURE__*/_jsx(\"code\", {\n              children: \"weatherChance\"\n            })]\n          })\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(NoSsr, {\n      children: function () {\n        if (!now) return null;\n        var sections = (filter ? [filter] : REGIONS).map(function (region) {\n          return {\n            region: region,\n            zones: PARTITION[region]\n          };\n        });\n        return sections.map(function (_ref2) {\n          var region = _ref2.region,\n              zones = _ref2.zones;\n          return /*#__PURE__*/_jsxs(Section, {\n            children: [/*#__PURE__*/_jsx(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: translate('region', region, locale)\n            }), /*#__PURE__*/_jsx(UpcomingWeatherTable, {\n              now: now,\n              zones: zones,\n              showLabels: showLabels,\n              showLocalTime: showLocalTime,\n              showWeatherChance: showWeatherChance\n            })]\n          }, region);\n        });\n      }()\n    })]\n  });\n};\n\nexport default UpcomingWeather;","map":null,"metadata":{},"sourceType":"module"}