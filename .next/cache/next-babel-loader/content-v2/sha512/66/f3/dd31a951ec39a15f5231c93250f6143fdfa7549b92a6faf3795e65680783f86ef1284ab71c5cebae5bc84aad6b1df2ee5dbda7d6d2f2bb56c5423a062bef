{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { translateWeather } from './weather';\nimport { useTranslation } from '../i18n';\nimport ICONS from './weather/data/weather-icons-map.json';\nconst ICON_SIZE = 32;\nconst useStyles = makeStyles(() => {\n  const styles = {\n    weatherIcon: {\n      display: 'inline-block',\n      width: ICON_SIZE,\n      height: ICON_SIZE,\n      verticalAlign: 'middle',\n      backgroundImage: 'url(\"/images/weather-icons.png\")',\n      backgroundSize: `${ICONS.length * 100}% 100%`\n    }\n  };\n  ICONS.forEach((weather, index) => {\n    styles[`w${weather}`] = {\n      backgroundPosition: `${index * -100}% 0%`\n    };\n  });\n  return styles;\n});\n\nconst WeatherIcon = ({\n  weather,\n  showLabel = false\n}) => {\n  const classes = useStyles();\n  const {\n    i18n\n  } = useTranslation();\n  const locale = i18n.language;\n  const weatherName = translateWeather(weather, locale);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Tooltip, {\n      arrow: true,\n      placement: \"top\",\n      title: weatherName,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: clsx(classes.weatherIcon, classes[`w${weather}`])\n      })\n    }), showLabel && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Typography, {\n        variant: \"caption\",\n        children: weatherName\n      })]\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(WeatherIcon);","map":null,"metadata":{},"sourceType":"module"}