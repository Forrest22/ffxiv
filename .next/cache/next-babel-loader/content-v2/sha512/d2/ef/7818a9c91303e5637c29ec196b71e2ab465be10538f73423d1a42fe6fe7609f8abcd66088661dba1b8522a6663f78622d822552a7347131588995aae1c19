{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport OceanFishIcon from './OceanFishIcon';\nimport TimeIcon from './TimeIcon';\nimport Tug from './Tug';\nimport ChecklistCheckmark from './ChecklistCheckmark';\nimport WeatherIcon from '../skywatcher/WeatherIcon';\nimport { fishingSpots, fishes } from './ocean-fishing/data';\nimport * as maps from './maps';\nimport { translate } from './utils';\nimport { useTranslation } from '../i18n';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    table: {\n      '& td': {\n        fontSize: '0.9em',\n        padding: 0\n      }\n    },\n    stars: {\n      marginTop: '-0.3em',\n      opacity: 0.8\n    },\n    count: {\n      verticalAlign: 'middle'\n    },\n    baitCell: {\n      whiteSpace: 'nowrap'\n    },\n    intuition: {\n      position: 'relative',\n      verticalAlign: 'middle',\n      margin: '2px 2px 0'\n    },\n    tug: {\n      fontSize: '1.33em'\n    },\n    disabled: {\n      backgroundColor: theme.palette.type === 'dark' ? '#333333' : '#DDDDDD',\n      opacity: 0.5\n    }\n  };\n});\n\nvar FishTable = function FishTable(_ref) {\n  var spots = _ref.spots,\n      time = _ref.time;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('ocean-fishing'),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var locale = i18n.language;\n  return /*#__PURE__*/_jsx(TableContainer, {\n    children: /*#__PURE__*/_jsx(Table, {\n      size: \"small\",\n      className: classes.table,\n      children: spots.map(function (spotId) {\n        var fishingSpot = fishingSpots[spotId];\n        var isSpectral = /spectral/i.test(fishingSpot.place_name_en);\n        return /*#__PURE__*/_jsxs(React.Fragment, {\n          children: [/*#__PURE__*/_jsx(TableHead, {\n            children: /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                colSpan: 3,\n                align: \"center\",\n                children: t('fish')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.bait')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.tug')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.biteTime')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.points')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.doubleHook')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t(\"fishInfo.\".concat(isSpectral ? 'timeOfDay' : 'weather'))\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: t('fishInfo.category')\n              })]\n            })\n          }), /*#__PURE__*/_jsx(TableBody, {\n            children: fishingSpot.fishes.map(function (fishId) {\n              var fish = fishes[fishId];\n              var fishInfo = fish.spreadsheet_data;\n              return /*#__PURE__*/_jsxs(TableRow, {\n                hover: true,\n                className: clsx(time && fishInfo.time && fishInfo.time.indexOf(time) === -1 && classes.disabled),\n                children: [/*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsx(ChecklistCheckmark, {\n                    fishId: fish.id\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  children: /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"fish\",\n                    id: fish.id\n                  })\n                }), /*#__PURE__*/_jsxs(TableCell, {\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    children: /*#__PURE__*/_jsx(Typography, {\n                      children: translate(locale, fish, 'name')\n                    })\n                  }), fishInfo.stars && /*#__PURE__*/_jsx(\"div\", {\n                    className: classes.stars,\n                    children: 'â˜…'.repeat(fishInfo.stars)\n                  })]\n                }), /*#__PURE__*/_jsxs(TableCell, {\n                  align: \"center\",\n                  className: classes.baitCell,\n                  children: [fishInfo.intuition && /*#__PURE__*/_jsxs(_Fragment, {\n                    children: [fishInfo.intuition.map(function (intuitionFish, index) {\n                      return /*#__PURE__*/_jsxs(React.Fragment, {\n                        children: [/*#__PURE__*/_jsx(Typography, {\n                          className: classes.count,\n                          display: \"inline\",\n                          children: index === 0 ? \"\".concat(intuitionFish.count, \"\\xD7\") : \", \".concat(intuitionFish.count, \"\\xD7\")\n                        }), /*#__PURE__*/_jsx(OceanFishIcon, {\n                          type: \"fish\",\n                          id: intuitionFish.id\n                        })]\n                      }, index);\n                    }), /*#__PURE__*/_jsx(\"img\", {\n                      src: \"/images/ocean-fishing/fishers-intuition.png\",\n                      className: classes.intuition\n                    })]\n                  }), fishInfo.bait && /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"bait\",\n                    id: fishInfo.bait\n                  }), fishInfo.bait && fishInfo.mooch && 'or', fishInfo.mooch && /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"fish\",\n                    id: fishInfo.mooch\n                  })]\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.tug && /*#__PURE__*/_jsx(Tug, {\n                    strength: fishInfo.tug,\n                    className: classes.tug\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.bite_time.all && /*#__PURE__*/_jsx(Typography, {\n                    children: fishInfo.bite_time.all[0] === fishInfo.bite_time.all[1] ? fishInfo.bite_time.all[0] : fishInfo.bite_time.all.join('-')\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.points && /*#__PURE__*/_jsx(Typography, {\n                    children: fishInfo.points\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.double_hook && /*#__PURE__*/_jsx(Typography, {\n                    children: Array.isArray(fishInfo.double_hook) ? fishInfo.double_hook.join('-') : fishInfo.double_hook\n                  })\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: function () {\n                    if (isSpectral) {\n                      return fishInfo.time === 'DSN' ? 'Any' : fishInfo.time && fishInfo.time.split('').map(function (time) {\n                        return /*#__PURE__*/_jsx(TimeIcon, {\n                          time: time\n                        }, time);\n                      });\n                    } else {\n                      if (!fishInfo.weathers) return null;\n\n                      switch (fishInfo.weathers.type) {\n                        case 'ALL':\n                          return 'Any';\n\n                        case 'OK':\n                          return fishInfo.weathers.list.map(function (weather) {\n                            return /*#__PURE__*/_jsx(WeatherIcon, {\n                              weather: weather,\n                              showLabel: false\n                            }, weather);\n                          });\n\n                        case 'NOT OK':\n                          return /*#__PURE__*/_jsxs(_Fragment, {\n                            children: [/*#__PURE__*/_jsx(\"span\", {\n                              style: {\n                                verticalAlign: 'middle'\n                              },\n                              children: \"Not \"\n                            }), fishInfo.weathers.list.map(function (weather) {\n                              return /*#__PURE__*/_jsx(WeatherIcon, {\n                                weather: weather,\n                                showLabel: false\n                              }, weather);\n                            })]\n                          });\n                      }\n                    }\n                  }()\n                }), /*#__PURE__*/_jsx(TableCell, {\n                  align: \"center\",\n                  children: fishInfo.category && /*#__PURE__*/_jsx(OceanFishIcon, {\n                    type: \"objective\",\n                    id: maps.OBJECTIVES_MAP[fishInfo.category],\n                    size: 30\n                  })\n                })]\n              }, fishId);\n            })\n          })]\n        }, spotId);\n      })\n    })\n  });\n};\n\nexport default FishTable;","map":null,"metadata":{},"sourceType":"module"}