{"ast":null,"code":"import generateHyur from './generate-hyur';\nimport generateElezen from './generate-elezen';\nimport generateLalafell from './generate-lalafell';\nimport generateMiqote from './generate-miqote';\nimport generateRoegadyn from './generate-roegadyn';\nimport generateAuRa from './generate-au-ra';\nimport generateHrothgar from './generate-hrothgar';\nimport generateViera from './generate-viera';\nimport { Race, Clan, Gender } from './types';\nimport en from './locales/en.json';\nimport de from './locales/de.json';\nimport fr from './locales/fr.json';\nimport ja from './locales/ja.json';\nconst LOCALES = {\n  en,\n  de,\n  fr,\n  ja\n};\nconst CLANS = {\n  [Race.Hyur]: [Clan.Midlander, Clan.Highlander],\n  [Race.Elezen]: [Clan.Wildwood, Clan.Duskwight],\n  [Race.Lalafell]: [Clan.Plainsfolk, Clan.Dunesfolk],\n  [Race.Miqote]: [Clan.SeekerOfTheSun, Clan.KeeperOfTheMoon],\n  [Race.Roegadyn]: [Clan.SeaWolf, Clan.Hellsguard],\n  [Race.AuRa]: [Clan.Raen, Clan.Xaela],\n  [Race.Hrothgar]: [Clan.Helions, Clan.TheLost],\n  [Race.Viera]: [Clan.Rava, Clan.Veena]\n};\nconst GENERATORS = {\n  [Race.Hyur]: generateHyur,\n  [Race.Elezen]: generateElezen,\n  [Race.Lalafell]: generateLalafell,\n  [Race.Miqote]: generateMiqote,\n  [Race.Roegadyn]: generateRoegadyn,\n  [Race.AuRa]: generateAuRa,\n  [Race.Hrothgar]: generateHrothgar,\n  [Race.Viera]: generateViera\n};\nexport function getClans(race) {\n  return CLANS[race];\n}\nexport function getGenders(race) {\n  switch (race) {\n    case Race.Hrothgar:\n      return [Gender.Male];\n\n    case Race.Viera:\n      return [Gender.Female];\n\n    default:\n      return [Gender.Male, Gender.Female];\n  }\n}\nexport function translate(type, id, locale = 'en') {\n  return LOCALES[locale] && LOCALES[locale][type][id] || id;\n}\nexport default function generate(race, clan, gender) {\n  return GENERATORS[race](clan, gender);\n}","map":null,"metadata":{},"sourceType":"module"}