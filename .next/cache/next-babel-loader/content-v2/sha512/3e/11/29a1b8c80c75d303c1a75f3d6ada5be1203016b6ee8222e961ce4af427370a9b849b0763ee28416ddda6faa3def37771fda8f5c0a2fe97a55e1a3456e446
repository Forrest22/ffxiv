{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport WeatherIcon from './WeatherIcon';\nimport { toTimeString, timeUntil } from '../utils';\nconst DATE_FORMAT = {\n  month: '2-digit',\n  day: '2-digit'\n};\nconst WEATHER_CELL_WIDTH = 75;\nconst useStyles = makeStyles(theme => ({\n  dateCell: {\n    width: '150px'\n  },\n  forecastCell: {\n    whiteSpace: 'nowrap'\n  },\n  bellCell: {\n    width: 50,\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5)\n  },\n  weatherCell: {\n    width: WEATHER_CELL_WIDTH + theme.spacing(1),\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    verticalAlign: 'top',\n    lineHeight: 1,\n    '& span': {\n      display: 'inline-block',\n      width: WEATHER_CELL_WIDTH,\n      lineHeight: 1.1\n    },\n    '&:last-child': {\n      paddingRight: theme.spacing(5),\n      width: WEATHER_CELL_WIDTH + theme.spacing(5.5)\n    }\n  },\n  transitionCell: {\n    width: 50,\n    padding: theme.spacing(1),\n    textAlign: 'center'\n  }\n}));\n\nfunction displayBell(seed) {\n  switch (seed % 3) {\n    case 0:\n      return '00:00';\n\n    case 1:\n      return '08:00';\n\n    case 2:\n      return '16:00';\n  }\n}\n\nconst Forecaster = ({\n  now,\n  forecast\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsx(TableContainer, {\n    children: /*#__PURE__*/_jsx(Table, {\n      size: \"small\",\n      children: /*#__PURE__*/_jsx(TableBody, {\n        children: (() => {\n          let previousDate;\n          return forecast.map(({\n            prevWeather,\n            currWeather,\n            seed,\n            date\n          }, index) => {\n            const dateString = date.toLocaleDateString(undefined, DATE_FORMAT);\n            const timeString = toTimeString(date, {\n              padded: true\n            });\n            return /*#__PURE__*/_jsxs(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                className: classes.dateCell,\n                align: \"right\",\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: previousDate !== (previousDate = dateString) && dateString\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                className: classes.dateCell,\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: timeString\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                className: classes.forecastCell,\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: timeUntil(now, date)\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"right\",\n                className: classes.bellCell,\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: displayBell(seed - 1)\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                className: classes.weatherCell,\n                children: /*#__PURE__*/_jsx(WeatherIcon, {\n                  weather: prevWeather,\n                  showLabel: true\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                className: classes.transitionCell,\n                children: /*#__PURE__*/_jsx(ArrowForwardIcon, {})\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"right\",\n                className: classes.bellCell,\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: displayBell(seed)\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                className: classes.weatherCell,\n                children: /*#__PURE__*/_jsx(WeatherIcon, {\n                  weather: currWeather,\n                  showLabel: true\n                })\n              })]\n            }, index);\n          });\n        })()\n      })\n    })\n  });\n};\n\nexport default Forecaster;","map":null,"metadata":{},"sourceType":"module"}