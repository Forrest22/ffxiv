{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport CheckIcon from '@material-ui/icons/Check';\nimport FruitIcon from './FruitIcon';\nimport { fruits } from './ffxiv-chocobo-color/data';\nimport translate from '../translate';\nimport { useTranslation } from '../i18n';\nconst useStyles = makeStyles(theme => ({\n  fruitsList: {\n    padding: 0,\n    '& > li': {\n      padding: theme.spacing(0.25, 0)\n    },\n    '& > li > div:first-child': {\n      paddingTop: 0,\n      paddingBottom: 0\n    }\n  },\n  counter: {\n    width: '2em',\n    marginRight: theme.spacing(2),\n    textAlign: 'right'\n  },\n  fruitName: {\n    marginLeft: theme.spacing(2)\n  },\n  item: {\n    cursor: 'pointer',\n    transition: 'all 0.1s linear'\n  },\n  itemChecked: {\n    backgroundColor: theme.palette.type === 'dark' ? '#111111' : '#DDDDDD',\n    opacity: 0.5\n  },\n  checkUnchecked: {\n    opacity: 0.33\n  },\n  checkChecked: {\n    color: theme.palette.success.main\n  }\n}));\n\nconst FruitsList = ({\n  fruits: fruitIds\n}) => {\n  const classes = useStyles();\n  const {\n    i18n\n  } = useTranslation('chocobo-color');\n  const {\n    0: checklist,\n    1: setChecklist\n  } = useState({});\n  const locale = i18n.language;\n  useEffect(() => {\n    setChecklist({});\n  }, [fruitIds]);\n\n  const handleClickItem = index => {\n    setChecklist(_objectSpread(_objectSpread({}, checklist), {}, {\n      [index]: !checklist[index]\n    }));\n  };\n\n  return /*#__PURE__*/_jsx(Paper, {\n    children: /*#__PURE__*/_jsx(List, {\n      component: \"ol\",\n      dense: true,\n      className: classes.fruitsList,\n      children: fruitIds.map((fruit, index) => /*#__PURE__*/_jsxs(ListItem, {\n        divider: true,\n        ContainerProps: {\n          className: clsx(classes.item, checklist[index] && classes.itemChecked),\n          onClick: handleClickItem.bind(null, index)\n        },\n        children: [/*#__PURE__*/_jsx(Typography, {\n          variant: \"body2\",\n          className: classes.counter,\n          children: index + 1\n        }), /*#__PURE__*/_jsx(FruitIcon, {\n          fruit: fruit,\n          size: 0.9\n        }), /*#__PURE__*/_jsx(Typography, {\n          className: classes.fruitName,\n          children: translate(locale, fruits[fruit], 'name')\n        }), /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsx(CheckIcon, {\n            className: checklist[index] ? classes.checkChecked : classes.checkUnchecked\n          })\n        })]\n      }, index))\n    })\n  });\n};\n\nexport default FruitsList;","map":null,"metadata":{},"sourceType":"module"}