{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _stains from './stains.json';\nimport _fruits from './fruits.json';\n\nfunction clampRGB(value) {\n  return value < 0 ? 0 : value > 255 ? 255 : value;\n}\n\nexport var Color = /*#__PURE__*/function () {\n  function Color(R, G, B) {\n    _classCallCheck(this, Color);\n\n    _defineProperty(this, \"R\", void 0);\n\n    _defineProperty(this, \"G\", void 0);\n\n    _defineProperty(this, \"B\", void 0);\n\n    this.R = clampRGB(R);\n    this.G = clampRGB(G);\n    this.B = clampRGB(B);\n  }\n\n  _createClass(Color, [{\n    key: \"add\",\n    value: function add(_ref) {\n      var R = _ref.R,\n          G = _ref.G,\n          B = _ref.B;\n      return new Color(this.R + R, this.G + G, this.B + B);\n    }\n  }, {\n    key: \"differenceFrom\",\n    value: function differenceFrom(color) {\n      return {\n        R: color.R - this.R,\n        G: color.G - this.G,\n        B: color.B - this.B\n      };\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(color) {\n      return Math.hypot(this.R - color.R, this.G - color.G, this.B - color.B);\n    }\n  }]);\n\n  return Color;\n}();\nexport var Shade;\n\n(function (Shade) {\n  Shade[\"White\"] = \"white\";\n  Shade[\"Red\"] = \"red\";\n  Shade[\"Brown\"] = \"brown\";\n  Shade[\"Yellow\"] = \"yellow\";\n  Shade[\"Green\"] = \"green\";\n  Shade[\"Blue\"] = \"blue\";\n  Shade[\"Purple\"] = \"purple\";\n})(Shade || (Shade = {}));\n\nfor (var _i = 0, _Object$values = Object.values(_stains); _i < _Object$values.length; _i++) {\n  var stain = _Object$values[_i];\n  stain.color = new Color(stain.color.R, stain.color.G, stain.color.B);\n}\n\nexport var stains = _stains;\nexport var fruits = _fruits;","map":null,"metadata":{},"sourceType":"module"}