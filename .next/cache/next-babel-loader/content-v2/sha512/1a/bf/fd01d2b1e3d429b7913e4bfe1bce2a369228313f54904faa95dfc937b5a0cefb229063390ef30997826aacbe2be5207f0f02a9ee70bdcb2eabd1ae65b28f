{"ast":null,"code":"// Keep locale as `string` because of i18n.language\nexport default function translate(locale, obj) {\n  for (var _len = arguments.length, keys = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    keys[_key - 2] = arguments[_key];\n  }\n\n  for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n    var key = _keys[_i];\n    var translation = obj[key][locale];\n\n    if (translation != null && translation !== '') {\n      return translation;\n    }\n  } // Fallback to 'en'\n\n\n  if (locale !== 'en') {\n    return translate.apply(void 0, ['en', obj].concat(keys));\n  }\n\n  return \"{\".concat(keys.join(','), \"}\");\n}","map":null,"metadata":{},"sourceType":"module"}