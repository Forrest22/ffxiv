{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Section from '../Section';\nimport MidlanderMale from './MidlanderMale';\nimport MidlanderFemale from './MidlanderFemale';\nimport HighlanderMale from './HighlanderMale';\nimport HighlanderFemale from './HighlanderFemale';\nimport WildwoodMale from './WildwoodMale';\nimport WildwoodFemale from './WildwoodFemale';\nimport DuskwightMale from './DuskwightMale';\nimport DuskwightFemale from './DuskwightFemale';\nimport PlainsfolkMale from './PlainsfolkMale';\nimport PlainsfolkFemale from './PlainsfolkFemale';\nimport DunesfolkMale from './DunesfolkMale';\nimport DunesfolkFemale from './DunesfolkFemale';\nimport SeekerOfTheSunMale from './SeekerOfTheSunMale';\nimport SeekerOfTheSunFemale from './SeekerOfTheSunFemale';\nimport KeeperOfTheMoonMale from './KeeperOfTheMoonMale';\nimport KeeperOfTheMoonFemale from './KeeperOfTheMoonFemale';\nimport SeaWolfMale from './SeaWolfMale';\nimport SeaWolfFemale from './SeaWolfFemale';\nimport HellsguardMale from './HellsguardMale';\nimport HellsguardFemale from './HellsguardFemale';\nimport { generate, getRaces, getClans, getGenders, translate, Clan, Gender } from './ffxiv-name-generator';\nimport { useTranslation } from '../i18n';\nconst ADVANCED = {\n  [`${Clan.Midlander},${Gender.Male}`]: MidlanderMale,\n  [`${Clan.Midlander},${Gender.Female}`]: MidlanderFemale,\n  [`${Clan.Highlander},${Gender.Male}`]: HighlanderMale,\n  [`${Clan.Highlander},${Gender.Female}`]: HighlanderFemale,\n  [`${Clan.Wildwood},${Gender.Male}`]: WildwoodMale,\n  [`${Clan.Wildwood},${Gender.Female}`]: WildwoodFemale,\n  [`${Clan.Duskwight},${Gender.Male}`]: DuskwightMale,\n  [`${Clan.Duskwight},${Gender.Female}`]: DuskwightFemale,\n  [`${Clan.Plainsfolk},${Gender.Male}`]: PlainsfolkMale,\n  [`${Clan.Plainsfolk},${Gender.Female}`]: PlainsfolkFemale,\n  [`${Clan.Dunesfolk},${Gender.Male}`]: DunesfolkMale,\n  [`${Clan.Dunesfolk},${Gender.Female}`]: DunesfolkFemale,\n  [`${Clan.SeekerOfTheSun},${Gender.Male}`]: SeekerOfTheSunMale,\n  [`${Clan.SeekerOfTheSun},${Gender.Female}`]: SeekerOfTheSunFemale,\n  [`${Clan.KeeperOfTheMoon},${Gender.Male}`]: KeeperOfTheMoonMale,\n  [`${Clan.KeeperOfTheMoon},${Gender.Female}`]: KeeperOfTheMoonFemale,\n  [`${Clan.SeaWolf},${Gender.Male}`]: SeaWolfMale,\n  [`${Clan.SeaWolf},${Gender.Female}`]: SeaWolfFemale,\n  [`${Clan.Hellsguard},${Gender.Male}`]: HellsguardMale,\n  [`${Clan.Hellsguard},${Gender.Female}`]: HellsguardFemale\n};\n\nfunction randomElement(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nconst useStyles = makeStyles(theme => ({\n  results: {\n    margin: theme.spacing(2, 0),\n    padding: theme.spacing(1),\n    [theme.breakpoints.up('md')]: {\n      margin: theme.spacing(4),\n      padding: theme.spacing(2)\n    },\n    fontSize: '1.75em',\n    '& > span': {\n      display: 'block',\n      margin: theme.spacing(1),\n      textAlign: 'center',\n      whiteSpace: 'nowrap'\n    }\n  }\n}));\n\nconst Generator = () => {\n  const classes = useStyles();\n  const {\n    t,\n    i18n\n  } = useTranslation('name-generator');\n  const {\n    0: race,\n    1: setRace\n  } = useState(null);\n  const {\n    0: clan,\n    1: setClan\n  } = useState(null);\n  const {\n    0: gender,\n    1: setGender\n  } = useState(null);\n  const {\n    0: results,\n    1: setResults\n  } = useState(['Click the Generate button!']);\n  const locale = i18n.language;\n  const raceClans = race ? getClans(race) : [];\n  const raceGenders = race ? getGenders(race) : [];\n  const AdvancedComponent = clan && gender && ADVANCED[`${clan},${gender}`];\n\n  const handleSelectRace = event => {\n    const race = event.target.value === 'none' ? null : event.target.value;\n    const raceClans = race && getClans(race);\n    const raceGenders = race && getGenders(race);\n    setRace(race);\n    setClan(race && raceClans.length === 1 ? raceClans[0] : null);\n    setGender(race && raceGenders.length === 1 ? raceGenders[0] : null);\n  };\n\n  const handleSelectClan = event => {\n    const clan = event.target.value;\n    setClan(clan === 'none' ? null : clan);\n  };\n\n  const handleSelectGender = event => {\n    const gender = event.target.value;\n    setGender(gender === 'none' ? null : gender);\n  };\n\n  const handleClickGenerate = () => {\n    const newResults = [];\n\n    for (let i = 0; i < 10; ++i) {\n      const genRace = race || randomElement(getRaces());\n      const genClan = clan || randomElement(getClans(genRace));\n      const genGender = gender || randomElement(getGenders(genRace));\n      newResults.push(generate(genClan, genGender));\n    }\n\n    setResults(newResults);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Section, {\n      children: [/*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxs(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsx(InputLabel, {\n              children: t('race')\n            }), /*#__PURE__*/_jsxs(Select, {\n              value: race || 'none',\n              onChange: handleSelectRace,\n              children: [/*#__PURE__*/_jsx(MenuItem, {\n                value: \"none\",\n                children: t('anyRace')\n              }), getRaces().map(race => /*#__PURE__*/_jsx(MenuItem, {\n                value: race,\n                children: translate('race', race, locale)\n              }, race))]\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxs(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsx(InputLabel, {\n              children: t('clan')\n            }), /*#__PURE__*/_jsxs(Select, {\n              value: clan || 'none',\n              onChange: handleSelectClan,\n              children: [raceClans.length !== 1 && /*#__PURE__*/_jsx(MenuItem, {\n                value: \"none\",\n                children: t('anyClan')\n              }), raceClans.map(clan => /*#__PURE__*/_jsx(MenuItem, {\n                value: clan,\n                children: translate('clan', clan, locale)\n              }, clan))]\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxs(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsx(InputLabel, {\n              children: t('gender')\n            }), /*#__PURE__*/_jsxs(Select, {\n              value: gender || 'none',\n              onChange: handleSelectGender,\n              children: [raceGenders.length !== 1 && /*#__PURE__*/_jsx(MenuItem, {\n                value: \"none\",\n                children: t('anyGender')\n              }), raceGenders.map(gender => /*#__PURE__*/_jsx(MenuItem, {\n                value: gender,\n                children: translate('gender', gender, locale)\n              }, gender))]\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsx(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            onClick: handleClickGenerate,\n            children: t('generate')\n          })\n        })]\n      }), /*#__PURE__*/_jsx(Paper, {\n        variant: \"outlined\",\n        className: classes.results,\n        children: results.map((result, index) => /*#__PURE__*/_jsx(\"span\", {\n          children: result\n        }, index))\n      })]\n    }), AdvancedComponent && /*#__PURE__*/_jsx(AdvancedComponent, {})]\n  });\n};\n\nexport default Generator;","map":null,"metadata":{},"sourceType":"module"}