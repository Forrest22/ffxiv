{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/root/ffxiv/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Head from 'next/head';\nimport { Icon, CRS } from 'leaflet';\nimport { MapContainer, ImageOverlay, Pane, Marker, Tooltip } from 'react-leaflet';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Section from '../Section';\nimport bozja from './ffxiv-bozja/data/bozja.json';\nimport { useTranslation } from '../i18n';\nimport { translate } from '../utils';\nvar ICON_SIZE = 32;\n\nfunction toCoords(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      x = _ref2[0],\n      y = _ref2[1];\n\n  var scale = bozja.sizeFactor / 100;\n  var cX = (x + bozja.offsetX) * scale;\n  var cY = (y + bozja.offsetY) * scale; // Not sure why I'm offset by -18, -12 here\n\n  var fX = 41 / scale * ((cX + 1024) / 2048) + 1 - 18;\n  var fY = 41 / scale * ((cY + 1024) / 2048) + 1 - 12;\n  return [fX, fY];\n}\n\nfunction toLatLong(_ref3) {\n  var _ref4 = _slicedToArray(_ref3, 2),\n      x = _ref4[0],\n      y = _ref4[1];\n\n  return [43 - y, x];\n}\n\nfunction getDirection(orientation) {\n  switch (orientation) {\n    case 1:\n      return 'left';\n\n    case 3:\n      return 'bottom';\n\n    case 4:\n      return 'top';\n\n    case 9:\n      return 'center';\n\n    default:\n      return 'auto';\n  }\n}\n\nfunction toRoman(num) {\n  switch (num) {\n    case 1:\n      return 'I';\n\n    case 2:\n      return 'II';\n\n    case 3:\n      return 'III';\n\n    case 4:\n      return 'IV';\n\n    case 5:\n      return 'V';\n\n    default:\n      return '?';\n  }\n}\n\nfunction getSpriteIcon(spriteType) {\n  switch (spriteType) {\n    case 'wind':\n      return 60659;\n\n    case 'earth':\n      return 60660;\n\n    case 'lightning':\n      return 60661;\n\n    case 'water':\n      return 60662;\n  }\n}\n\nfunction formatMonster(label, locale) {\n  switch (locale) {\n    case 'en':\n    case 'de':\n      return label.split(' ').map(function (word) {\n        if (['of', 'des'].includes(word)) {\n          return word;\n        } else {\n          return word[0].toUpperCase() + word.slice(1);\n        }\n      }).join(' ');\n\n    case 'fr':\n      return label[0].toUpperCase() + label.slice(1);\n\n    default:\n      return label;\n  }\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      width: '100%',\n      height: 0,\n      paddingBottom: '100%',\n      margin: theme.spacing(0, 'auto'),\n      border: '1px solid black',\n      overflow: 'hidden'\n    },\n    tooltipBare: {\n      background: 'none',\n      border: 'none',\n      boxShadow: 'none',\n      padding: theme.spacing(1, 1.5),\n      color: 'white',\n      fontSize: '1.25em',\n      textShadow: '0 0 3px black, 0 0 3px black, 0 0 3px black, 0 0 3px black',\n      '&::before, &::after': {\n        display: 'none'\n      }\n    },\n    tooltip: {\n      background: 'rgba(0, 0, 0, 0.75)',\n      border: 'none',\n      boxShadow: 'none',\n      padding: theme.spacing(0, 1),\n      color: 'white',\n      fontSize: '1.25em',\n      '&::before, &::after': {\n        display: 'none'\n      }\n    }\n  };\n});\n\nvar Map = function Map() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(false),\n      showMapLabels = _useState[0],\n      setShowMapLabels = _useState[1];\n\n  var _useState2 = useState(false),\n      showStarMonsters = _useState2[0],\n      setShowStarMonsters = _useState2[1];\n\n  var _useState3 = useState(false),\n      showSprites = _useState3[0],\n      setShowSprites = _useState3[1];\n\n  var locale = i18n.language;\n  useEffect(function () {\n    // Fixes offset markers on initial load for some reason\n    setTimeout(function () {\n      setShowMapLabels(true);\n    }, 0);\n  }, []);\n\n  var handleToggleMapLabels = function handleToggleMapLabels() {\n    setShowMapLabels(!showMapLabels);\n  };\n\n  var handleToggleStarMonsters = function handleToggleStarMonsters() {\n    setShowStarMonsters(!showStarMonsters);\n  };\n\n  var handleToggleSprites = function handleToggleSprites() {\n    setShowSprites(!showSprites);\n  };\n\n  return /*#__PURE__*/_jsxs(Section, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"link\", {\n        href: \"/static/leaflet.css\",\n        rel: \"stylesheet\"\n      }, 'leaflet')\n    }), /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsx(FormGroup, {\n            children: /*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(Checkbox, {\n                checked: showMapLabels,\n                onChange: handleToggleMapLabels\n              }),\n              label: \"Map labels\"\n            })\n          }), /*#__PURE__*/_jsx(FormGroup, {\n            children: /*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(Checkbox, {\n                checked: showStarMonsters,\n                onChange: handleToggleStarMonsters\n              }),\n              label: \"Star-rank monsters\"\n            })\n          }), /*#__PURE__*/_jsx(FormGroup, {\n            children: /*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(Checkbox, {\n                checked: showSprites,\n                onChange: handleToggleSprites\n              }),\n              label: \"Sprites\"\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: /*#__PURE__*/_jsxs(MapContainer, {\n            bounds: [[1, 1], [42, 42]],\n            maxBounds: [[1, 1], [42, 42]],\n            attributionControl: false,\n            crs: CRS.Simple,\n            zoomSnap: 0.1,\n            className: classes.container,\n            children: [/*#__PURE__*/_jsx(ImageOverlay, {\n              bounds: [[1, 1], [42, 42]],\n              url: \"/images/bozja/bozja.png\"\n            }), /*#__PURE__*/_jsx(Pane, {\n              name: \"map\",\n              children: bozja.mapMarkers.filter(function (mapMarker) {\n                return mapMarker.icon !== 0;\n              }).map(function (mapMarker, index) {\n                return /*#__PURE__*/_jsx(Marker, {\n                  position: toLatLong(toCoords([mapMarker.x, mapMarker.y])),\n                  icon: new Icon({\n                    iconUrl: \"/images/bozja/icon-\".concat([7, 8, 15].includes(mapMarker.id) ? 60959 : mapMarker.icon, \".png\"),\n                    iconSize: [32, 32]\n                  }),\n                  children: showMapLabels && mapMarker.placeName_subtext_en !== '' && /*#__PURE__*/_jsx(Tooltip, {\n                    permanent: true,\n                    direction: getDirection(mapMarker.subtextOrientation),\n                    className: classes.tooltipBare,\n                    children: translate(locale, mapMarker, 'placeName_subtext')\n                  })\n                }, index);\n              })\n            }), showStarMonsters && bozja.starMonsters.map(function (starMonster) {\n              return /*#__PURE__*/_jsx(Marker, {\n                position: toLatLong([starMonster.x, starMonster.y]),\n                icon: new Icon({\n                  iconUrl: '/images/bozja/icon-61804.png',\n                  iconSize: [ICON_SIZE, ICON_SIZE]\n                }),\n                children: /*#__PURE__*/_jsx(Tooltip, {\n                  direction: \"top\",\n                  offset: [0, -10],\n                  className: classes.tooltip,\n                  children: formatMonster(translate(locale, starMonster, 'name'), locale)\n                })\n              }, starMonster.id);\n            }), showSprites && ['wind', 'water', 'lightning', 'earth'].flatMap(function (spriteType) {\n              return bozja.sprites[spriteType].locations.map(function (location) {\n                return /*#__PURE__*/_jsx(Marker, {\n                  position: toLatLong([location.x, location.y]),\n                  icon: new Icon({\n                    iconUrl: \"/images/bozja/icon-\".concat(getSpriteIcon(spriteType), \".png\"),\n                    iconSize: [ICON_SIZE, ICON_SIZE]\n                  }),\n                  children: /*#__PURE__*/_jsx(Tooltip, {\n                    permanent: true,\n                    direction: \"top\",\n                    offset: [0, -10],\n                    className: classes.tooltip,\n                    children: toRoman(location.level)\n                  })\n                }, \"\".concat(spriteType, \"-\").concat(location.level));\n              });\n            })]\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default Map;","map":null,"metadata":{},"sourceType":"module"}