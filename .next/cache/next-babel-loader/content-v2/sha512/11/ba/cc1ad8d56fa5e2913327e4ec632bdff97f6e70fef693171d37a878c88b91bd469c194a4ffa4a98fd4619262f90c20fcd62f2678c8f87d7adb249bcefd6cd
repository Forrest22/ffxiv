{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckIcon from '@material-ui/icons/Check';\nimport Page from '../../src/Page';\nimport Section from '../../src/Section';\nimport OceanFishIcon from '../../src/ocean-fishing/OceanFishIcon';\nimport { objectives } from '../../src/ocean-fishing/ocean-fishing/data';\nimport { translate } from '../../src/ocean-fishing/utils';\nimport { useTranslation } from '../../src/i18n';\nconst useStyles = makeStyles(theme => ({\n  check: {\n    padding: 10\n  },\n  unchecked: {\n    opacity: 0.4\n  },\n  checked: {\n    color: 'green'\n  },\n  bonusContainer: {\n    margin: theme.spacing(2, 0),\n    paddingBottom: theme.spacing(4),\n    textAlign: 'center',\n    '& > *': {\n      display: 'inline-block',\n      verticalAlign: 'middle'\n    }\n  },\n  bonus: {\n    position: 'relative'\n  },\n  bonusPercentage: {\n    position: 'absolute',\n    left: 0,\n    right: 0\n  },\n  bigger: {\n    fontSize: '1.5em'\n  },\n  calculatorGoal: {\n    textAlign: 'justify',\n    textAlignLast: 'justify',\n    '& > *': {\n      display: 'inline-block'\n    }\n  }\n}));\n\nfunction getOverrides(objectiveId) {\n  switch (objectiveId) {\n    case 'big-fish-in-a-small-pond':\n      return ['small-fish-in-a-big-pond'];\n\n    case 'teach-a-man-to-fish':\n      return ['give-a-man-a-fish'];\n\n    case 'ocean-fishing-enthusiast':\n      return ['ocean-fishing-amateur'];\n\n    case 'ocean-fishing-fanatic':\n      return ['ocean-fishing-amateur', 'ocean-fishing-enthusiast'];\n\n    default:\n      return [];\n  }\n}\n\nfunction getOverriddenBy(objectiveId) {\n  switch (objectiveId) {\n    case 'small-fish-in-a-big-pond':\n      return ['big-fish-in-a-small-pond'];\n\n    case 'give-a-man-a-fish':\n      return ['teach-a-man-to-fish'];\n\n    case 'ocean-fishing-amateur':\n      return ['ocean-fishing-enthusiast', 'ocean-fishing-fanatic'];\n\n    case 'ocean-fishing-enthusiast':\n      return ['ocean-fishing-fanatic'];\n\n    default:\n      return [];\n  }\n}\n\nconst Objectives = () => {\n  const classes = useStyles();\n  const {\n    0: basePoints,\n    1: setBasePoints\n  } = useState(5000);\n  const {\n    0: checked,\n    1: setChecked\n  } = useState({\n    'small-fish-in-a-big-pond': true,\n    'big-fish-in-a-small-pond': true,\n    'a-rare-catch': true,\n    'give-a-man-a-fish': true,\n    'bream-team-galadion-bay': true,\n    'bream-team-southern-strait-of-merlthor': true,\n    'bream-team-northern-strait-of-merlthor': true,\n    'ocean-fishing-amateur': true,\n    'ocean-fishing-enthusiast': true,\n    'ocean-fishing-fanatic': true\n  });\n  const {\n    t,\n    i18n\n  } = useTranslation('ocean-fishing');\n  const locale = i18n.language;\n  const filteredObjectives = Object.values(objectives).filter(objective => {\n    if (!checked[objective.id]) {\n      return false;\n    }\n\n    for (const override of getOverriddenBy(objective.id)) {\n      if (checked[override]) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n  const totalBonus = filteredObjectives.reduce((acc, curr) => acc + curr.bonus, 0);\n  const totalBonusPercentage = (100 + totalBonus) / 100;\n\n  const handleClickChecked = objectiveId => {\n    const newChecked = _objectSpread(_objectSpread({}, checked), {}, {\n      [objectiveId]: !checked[objectiveId]\n    });\n\n    if (newChecked[objectiveId]) {\n      getOverrides(objectiveId).forEach(objective => {\n        newChecked[objective] = true;\n      });\n    } else {\n      getOverriddenBy(objectiveId).forEach(objective => {\n        newChecked[objective] = false;\n      });\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleInputBasePoints = event => {\n    setBasePoints(Math.max(0, Number(event.target.value)));\n  };\n\n  return /*#__PURE__*/_jsxs(Page, {\n    title: `${t('title')} - ${t('objectivesPage.title')}`,\n    children: [/*#__PURE__*/_jsx(Section, {\n      children: /*#__PURE__*/_jsxs(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsx(TableHead, {\n          children: /*#__PURE__*/_jsxs(TableRow, {\n            children: [/*#__PURE__*/_jsx(TableCell, {\n              colSpan: 3,\n              align: \"center\",\n              children: \"Objective\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Description\"\n            }), /*#__PURE__*/_jsx(TableCell, {\n              align: \"center\",\n              children: \"Bonus\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(TableBody, {\n          children: Object.values(objectives).map(objective => /*#__PURE__*/_jsxs(TableRow, {\n            children: [/*#__PURE__*/_jsx(TableCell, {\n              children: /*#__PURE__*/_jsx(IconButton, {\n                className: clsx(classes.check, checked[objective.id] ? classes.checked : classes.unchecked),\n                onClick: handleClickChecked.bind(null, objective.id),\n                children: /*#__PURE__*/_jsx(CheckIcon, {})\n              })\n            }), /*#__PURE__*/_jsx(TableCell, {\n              children: /*#__PURE__*/_jsx(OceanFishIcon, {\n                type: \"objective\",\n                id: objective.id\n              })\n            }), /*#__PURE__*/_jsx(TableCell, {\n              children: /*#__PURE__*/_jsx(Typography, {\n                children: translate(locale, objective, 'name')\n              })\n            }), /*#__PURE__*/_jsx(TableCell, {\n              children: /*#__PURE__*/_jsx(Typography, {\n                children: translate(locale, objective, 'description')\n              })\n            }), /*#__PURE__*/_jsx(TableCell, {\n              children: /*#__PURE__*/_jsxs(Typography, {\n                align: \"center\",\n                children: [objective.bonus, \"%\"]\n              })\n            })]\n          }, objective.id))\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(Section, {\n      title: t('objectivesPage.calculator'),\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.bonusContainer,\n        children: [filteredObjectives.length > 0 ? filteredObjectives.map(objective => /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.bonus,\n          children: [/*#__PURE__*/_jsx(OceanFishIcon, {\n            type: \"objective\",\n            id: objective.id\n          }, objective.id), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(Typography, {\n            variant: \"body2\",\n            className: classes.bonusPercentage,\n            children: [objective.bonus, \"%\"]\n          })]\n        })) : /*#__PURE__*/_jsx(Typography, {\n          children: \"No objectives selected\"\n        }), /*#__PURE__*/_jsxs(Typography, {\n          className: classes.bigger,\n          children: [\"\\xA0= \", totalBonus, \"%\"]\n        })]\n      }), /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        justify: \"center\",\n        children: /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"flex-end\",\n            children: [/*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsx(TextField, {\n                type: \"number\",\n                fullWidth: true,\n                label: t('objectivesPage.basePoints'),\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxs(InputAdornment, {\n                    position: \"end\",\n                    children: [\"\\xD7\", 100 + totalBonus, \"%\"]\n                  })\n                },\n                value: basePoints,\n                onChange: handleInputBasePoints\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxs(Typography, {\n                className: classes.bigger,\n                children: [\"= \", Math.floor(basePoints * totalBonusPercentage).toLocaleString(locale)]\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsx(Box, {\n                m: 2\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: classes.calculatorGoal,\n                children: [/*#__PURE__*/_jsx(Typography, {\n                  children: \"The Major-General\"\n                }), \"\\xA0\", /*#__PURE__*/_jsxs(Typography, {\n                  component: \"div\",\n                  align: \"right\",\n                  className: classes.bigger,\n                  children: [Math.ceil(5000 / totalBonusPercentage).toLocaleString(locale), /*#__PURE__*/_jsx(Box, {\n                    display: \"inline\",\n                    ml: 2,\n                    children: /*#__PURE__*/_jsxs(Typography, {\n                      display: \"inline\",\n                      children: [\"\\xD7\", 100 + totalBonus, \"%\"]\n                    })\n                  })]\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxs(Typography, {\n                className: classes.bigger,\n                children: [\"= \", 5000 .toLocaleString(locale)]\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: classes.calculatorGoal,\n                children: [/*#__PURE__*/_jsx(Typography, {\n                  children: \"Hybodus\"\n                }), \"\\xA0\", /*#__PURE__*/_jsxs(Typography, {\n                  component: \"div\",\n                  align: \"right\",\n                  className: classes.bigger,\n                  children: [Math.ceil(10000 / totalBonusPercentage).toLocaleString(locale), /*#__PURE__*/_jsx(Box, {\n                    display: \"inline\",\n                    ml: 2,\n                    children: /*#__PURE__*/_jsxs(Typography, {\n                      display: \"inline\",\n                      children: [\"\\xD7\", 100 + totalBonus, \"%\"]\n                    })\n                  })]\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxs(Typography, {\n                className: classes.bigger,\n                children: [\"= \", 10000 .toLocaleString(locale)]\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: classes.calculatorGoal,\n                children: [/*#__PURE__*/_jsx(Typography, {\n                  children: \"\\u201COcean Fisher\\u201D\"\n                }), \"\\xA0\", /*#__PURE__*/_jsxs(Typography, {\n                  component: \"div\",\n                  align: \"right\",\n                  className: classes.bigger,\n                  children: [Math.ceil(16000 / totalBonusPercentage).toLocaleString(locale), /*#__PURE__*/_jsx(Box, {\n                    display: \"inline\",\n                    ml: 2,\n                    children: /*#__PURE__*/_jsxs(Typography, {\n                      display: \"inline\",\n                      children: [\"\\xD7\", 100 + totalBonus, \"%\"]\n                    })\n                  })]\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxs(Typography, {\n                className: classes.bigger,\n                children: [\"= \", 16000 .toLocaleString(locale)]\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: classes.calculatorGoal,\n                children: [/*#__PURE__*/_jsx(Typography, {\n                  children: \"\\u201CMaster of the Sea\\u201D\"\n                }), \"\\xA0\", /*#__PURE__*/_jsxs(Typography, {\n                  component: \"div\",\n                  align: \"right\",\n                  className: classes.bigger,\n                  children: [Math.ceil(20000 / totalBonusPercentage).toLocaleString(locale), /*#__PURE__*/_jsx(Box, {\n                    display: \"inline\",\n                    ml: 2,\n                    children: /*#__PURE__*/_jsxs(Typography, {\n                      display: \"inline\",\n                      children: [\"\\xD7\", 100 + totalBonus, \"%\"]\n                    })\n                  })]\n                })]\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxs(Typography, {\n                className: classes.bigger,\n                children: [\"= \", 20000 .toLocaleString(locale)]\n              })\n            })]\n          })\n        })\n      })]\n    })]\n  });\n};\n\nObjectives.getInitialProps = async () => ({\n  namespacesRequired: ['common', 'ocean-fishing']\n});\n\nexport default Objectives;","map":null,"metadata":{},"sourceType":"module"}