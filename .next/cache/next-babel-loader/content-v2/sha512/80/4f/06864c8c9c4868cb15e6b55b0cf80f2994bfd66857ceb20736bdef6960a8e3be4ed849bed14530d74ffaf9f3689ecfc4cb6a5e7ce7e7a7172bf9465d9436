{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Popper from '@material-ui/core/Popper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport OceanFishPopper from './OceanFishPopper';\nimport { oceanFishes, baits, achievements, contentBonuses } from './ffxiv-ocean-fishing/data';\nimport ICONS_MAP from './ffxiv-ocean-fishing/data/ocean-fishing-icons-map.json';\nimport { translate } from '../utils';\nimport { useTranslation } from '../i18n';\nvar ICON_ROWS = ICONS_MAP.length;\nvar ICON_COLS = Math.max.apply(Math, _toConsumableArray(ICONS_MAP.map(function (row) {\n  return row.length;\n})));\nmakeStyles;\nvar useStyles = makeStyles(function (theme) {\n  var styles = {\n    iconContainer: {\n      display: 'inline-block',\n      position: 'relative',\n      width: function width(_ref) {\n        var size = _ref.size;\n        return size * 1.2;\n      },\n      height: function height(_ref2) {\n        var size = _ref2.size;\n        return size * 1.2;\n      },\n      margin: theme.spacing(0.1),\n      verticalAlign: 'middle'\n    },\n    oceanFishIcon: {\n      position: 'absolute',\n      top: function top(_ref3) {\n        var size = _ref3.size;\n        return size * 0.1;\n      },\n      left: function left(_ref4) {\n        var size = _ref4.size;\n        return size * 0.1;\n      },\n      width: function width(_ref5) {\n        var size = _ref5.size;\n        return size;\n      },\n      height: function height(_ref6) {\n        var size = _ref6.size;\n        return size;\n      },\n      backgroundImage: 'url(\"/images/ocean-fishing/ocean-fishing-icons.png\")',\n      backgroundSize: \"\".concat(ICON_COLS * 100, \"% \").concat(ICON_ROWS * 100, \"%\")\n    },\n    itemCover: {\n      position: 'absolute',\n      top: function top(_ref7) {\n        var size = _ref7.size;\n        return size * 0.05;\n      },\n      left: 0,\n      width: function width(_ref8) {\n        var size = _ref8.size;\n        return size * 1.2;\n      },\n      height: function height(_ref9) {\n        var size = _ref9.size;\n        return size * 1.1;\n      },\n      backgroundImage: 'url(\"/images/ocean-fishing/item-cover.png\")'\n    },\n    achievementCover: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: function width(_ref10) {\n        var size = _ref10.size;\n        return size * 1.2;\n      },\n      height: function height(_ref11) {\n        var size = _ref11.size;\n        return size * 1.2;\n      },\n      backgroundImage: 'url(\"/images/ocean-fishing/achievement-cover.png\")'\n    },\n    hasPopper: {\n      cursor: 'pointer'\n    }\n  };\n\n  for (var row = 0; row < ICON_ROWS; ++row) {\n    for (var col = 0; col < ICONS_MAP[row].length; ++col) {\n      styles[ICONS_MAP[row][col]] = {\n        backgroundPosition: \"\".concat(col * -100, \"% \").concat(row * -100, \"%\")\n      };\n    }\n  }\n\n  return styles;\n});\n\nvar OceanFishIcon = function OceanFishIcon(_ref12) {\n  var type = _ref12.type,\n      id = _ref12.id,\n      _ref12$size = _ref12.size,\n      size = _ref12$size === void 0 ? 40 : _ref12$size,\n      className = _ref12.className;\n  var classes = useStyles({\n    size: size\n  });\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(null),\n      anchorEl = _useState[0],\n      setAnchorEl = _useState[1];\n\n  var locale = i18n.language;\n\n  var handleClick = function handleClick(event) {\n    if (type === 'fish' && !anchorEl) {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  var handleClickAway = function handleClickAway() {\n    setAnchorEl(null);\n  };\n\n  var tooltip;\n\n  switch (type) {\n    case 'fish':\n      tooltip = translate(locale, oceanFishes[id], 'name');\n      break;\n\n    case 'bait':\n      tooltip = translate(locale, baits[id], 'name');\n      break;\n\n    case 'achievement':\n      tooltip = translate(locale, achievements[id], 'name');\n      break;\n\n    case 'content-bonus':\n      tooltip = translate(locale, contentBonuses[id], 'objective');\n      break;\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Tooltip, {\n      arrow: true,\n      placement: \"top\",\n      title: tooltip,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: clsx(classes.iconContainer, type === 'fish' && classes.hasPopper, className),\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: clsx(classes.oceanFishIcon, classes[\"\".concat(type, \"_\").concat(id)])\n        }), type === 'fish' && /*#__PURE__*/_jsx(\"div\", {\n          className: classes.itemCover\n        }), type === 'bait' && /*#__PURE__*/_jsx(\"div\", {\n          className: classes.itemCover\n        }), type === 'achievement' && /*#__PURE__*/_jsx(\"div\", {\n          className: classes.achievementCover\n        })]\n      })\n    }), type === 'fish' && /*#__PURE__*/_jsx(Popper, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      placement: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(ClickAwayListener, {\n        onClickAway: handleClickAway,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(OceanFishPopper, {\n            fishId: id\n          })\n        })\n      })\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(OceanFishIcon);","map":null,"metadata":{},"sourceType":"module"}