{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport translateWeather from './ffxiv-skywatcher/src/translate-weather';\nimport ICONS from './ffxiv-skywatcher/data/weather-icons-map.json';\nimport softHyphens from './soft-hyphens';\nimport { useTranslation } from '../i18n';\nvar ICON_SIZE = 32;\nvar useStyles = makeStyles(function () {\n  var styles = {\n    weatherIcon: {\n      display: 'inline-block',\n      width: ICON_SIZE,\n      height: ICON_SIZE,\n      verticalAlign: 'middle',\n      backgroundImage: 'url(\"/images/skywatcher/weather-icons.png\")',\n      backgroundSize: \"\".concat(ICONS.length * 100, \"% 100%\")\n    }\n  };\n  ICONS.forEach(function (weather, index) {\n    styles[weather] = {\n      backgroundPosition: \"\".concat(index * -100, \"% 0%\")\n    };\n  });\n  return styles;\n});\n\nvar WeatherIcon = function WeatherIcon(_ref) {\n  var weather = _ref.weather,\n      _ref$showLabel = _ref.showLabel,\n      showLabel = _ref$showLabel === void 0 ? false : _ref$showLabel;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var locale = i18n.language;\n  var weatherName = softHyphens(translateWeather(weather, locale));\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Tooltip, {\n      arrow: true,\n      placement: \"top\",\n      title: weatherName,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: clsx(classes.weatherIcon, classes[weather])\n      })\n    }), showLabel && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Typography, {\n        variant: \"caption\",\n        children: weatherName\n      })]\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(WeatherIcon);","map":null,"metadata":{},"sourceType":"module"}