{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Section from '../Section';\nimport NameAutocomplete from './NameAutocomplete';\nimport MyNameIs from './MyNameIs';\nimport { translate } from './names';\nimport { upperFirst } from './names/utils';\nimport { Clan, Gender } from './names/types';\nimport { FORENAMES, SURNAMES } from './names/generate-miqote';\nimport miqoteTribes from './names/data/miqote-tribes.json';\nimport i18n from '../i18n';\n\nconst SeekersOfTheSunFemale = ({\n  i18n\n}) => {\n  const {\n    0: forename,\n    1: setForename\n  } = useState('');\n  const {\n    0: tribe,\n    1: setTribe\n  } = useState('');\n  const {\n    0: surname,\n    1: setSurname\n  } = useState('');\n  const name = `${upperFirst([tribe, forename].filter(x => x).join('’'))} ${upperFirst(surname)}`.trim();\n  const locale = i18n.language;\n  return /*#__PURE__*/_jsx(Section, {\n    title: `${translate('clan', Clan.SeekersOfTheSun, locale)} (${translate('gender', Gender.Female, locale)})`,\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(NameAutocomplete, {\n          options: FORENAMES[Clan.SeekersOfTheSun][Gender.Female].map(name => upperFirst(name.replace(/^.*’/, ''))).filter((name, index, array) => array.indexOf(name, index + 1) === -1),\n          value: forename,\n          onChange: setForename,\n          label: \"Forename\",\n          placeholder: \"Enter a forename\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxs(Typography, {\n          paragraph: true,\n          children: [\"The extra \\u201Ch\\u201Ds (e.g. \\u201CB\", /*#__PURE__*/_jsx(\"b\", {\n            children: \"h\"\n          }), \"ee\\u201D, \\u201CKuz\", /*#__PURE__*/_jsx(\"b\", {\n            children: \"h\"\n          }), \"\\u201D, and \\u201CPa\", /*#__PURE__*/_jsx(\"b\", {\n            children: \"h\"\n          }), \"sh\\u201D) represent a slight hissing/spitting sound that are pronounced by the Miqo\\u2019te and ignored by the other races.\"]\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(NameAutocomplete, {\n          options: Object.keys(miqoteTribes),\n          getOptionLabel: tribe => `${tribe} - ${miqoteTribes[tribe]}`,\n          value: tribe,\n          onChange: setTribe,\n          label: \"Tribe\",\n          placeholder: \"Enter a tribe\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(Typography, {\n          paragraph: true,\n          children: \"The forename is always preceeded by a letter representing their tribe.\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(NameAutocomplete, {\n          options: SURNAMES[Clan.SeekersOfTheSun],\n          value: surname,\n          onChange: setSurname,\n          label: \"Position\",\n          placeholder: \"Tia or Nunh\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsx(Typography, {\n          paragraph: true,\n          children: \"The female\\u2019s surname is taken from the breeding male who sired her.\"\n        })\n      }), name && /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(MyNameIs, {\n          name: name\n        })\n      })]\n    })\n  });\n};\n\nexport default i18n.withTranslation('name-generator')(SeekersOfTheSunFemale);","map":null,"metadata":{},"sourceType":"module"}