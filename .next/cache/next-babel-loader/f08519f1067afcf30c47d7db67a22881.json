{"ast":null,"code":"import CHANCES from './chances';\nexport function getSeed() {\n  var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n  return Math.floor(date.getTime() / 1400000);\n}\nexport function getDate() {\n  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getSeed();\n  return new Date(seed * 1400000);\n}\nexport function hashSeed() {\n  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getSeed();\n  var base = Math.floor(seed / 3) * 100 + (seed + 1) % 3 * 8;\n  var step1 = (base << 11 ^ base) >>> 0;\n  var step2 = (step1 >>> 8 ^ step1) >>> 0;\n  return step2 % 100;\n}\nexport function getNextWeathers() {\n  var seed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getSeed();\n  var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return Array(count).fill().map(function (_, index) {\n    return hashSeed(seed + index);\n  });\n}\nexport function getZoneWeather(zone, hash) {\n  var chances = CHANCES[zone];\n\n  for (var index = 0;; ++index) {\n    if (chances[index] > hash) {\n      return chances[index + 1];\n    }\n  }\n}\nexport function getPossibleWeathers(zone) {\n  var chances = CHANCES[zone];\n  return chances.filter(function (_, index) {\n    return index % 2 === 1;\n  });\n}\nvar cache = {};\nexport function translateId(id) {\n  return cache[id] || (cache[id] = (id[0].toUpperCase() + id.slice(1)).split(/(?=[A-Z])/).join(' '));\n}","map":null,"metadata":{},"sourceType":"module"}