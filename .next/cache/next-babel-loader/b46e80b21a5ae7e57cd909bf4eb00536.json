{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport moment from 'moment';\nimport cn from 'classnames';\nimport calculateVoyages, { LULU_EPOCH } from './calculate-voyages';\nimport { DEST_MAP, TIME_MAP, OBJECTIVES_MAP, FILTER_MAP } from './maps';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport Paper from '@material-ui/core/Paper';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport OceanFishIcon from './OceanFishIcon';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: {\n      marginBottom: theme.spacing(2)\n    },\n    schedule: {\n      minWidth: theme.breakpoints.values.sm,\n      '& td': {\n        paddingTop: theme.spacing(0.25),\n        paddingBottom: theme.spacing(0.25),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(2)\n      },\n      '& tbody tr:hover': {\n        cursor: 'pointer'\n      }\n    },\n    hoverRow: {\n      backgroundColor: theme.palette.action.hover\n    },\n    timeCell: {\n      '& svg': {\n        top: '0',\n        verticalAlign: 'middle'\n      }\n    },\n    objectivesCell: {\n      '& div': {\n        verticalAlign: 'middle'\n      }\n    }\n  };\n});\nexport default function OceanFishingTable(props) {\n  var now = props.now,\n      onSelectRoute = props.onSelectRoute;\n\n  var _useState = useState(10),\n      numRows = _useState[0],\n      setNumRows = _useState[1];\n\n  var _useState2 = useState('none'),\n      filter = _useState2[0],\n      setFilter = _useState2[1];\n\n  var _useState3 = useState(null),\n      hover = _useState3[0],\n      setHover = _useState3[1];\n\n  var classes = useStyles();\n  var router = useRouter();\n  var firstRender = useRef(false);\n  var voyagesCache = useRef(null);\n  useEffect(function () {\n    var queryFilter = FILTER_MAP[router.query.filter] ? router.query.filter : 'none';\n\n    if (!firstRender.current && now || filter !== queryFilter) {\n      voyagesCache.current = null;\n      firstRender.current = true;\n      setFilter(queryFilter);\n      onSelectRoute(calculateVoyages(now, 1, FILTER_MAP[queryFilter] || null)[0].destinationCode);\n    }\n  });\n\n  var handleInputNumRows = function handleInputNumRows(event) {\n    voyagesCache.current = null;\n    setNumRows(event.target.value);\n  };\n\n  var handleBlurNumRows = function handleBlurNumRows(event) {\n    var numRows = Number(event.target.value);\n\n    if (!numRows) {\n      setNumRows(10);\n    } else {\n      setNumRows(Math.min(Math.max(Number(numRows) || 10, 1), 50));\n    }\n  };\n\n  var handleSelectFilter = function handleSelectFilter(event) {\n    voyagesCache.current = null;\n    var filter = event.target.value;\n    router.push({\n      pathname: router.pathname,\n      query: filter === 'none' ? null : {\n        filter: filter\n      }\n    });\n  };\n\n  var handleHoverRow = {\n    none: setHover.bind(null, null),\n    ND: setHover.bind(null, 'ND'),\n    NS: setHover.bind(null, 'NS'),\n    NN: setHover.bind(null, 'NN'),\n    RD: setHover.bind(null, 'RD'),\n    RS: setHover.bind(null, 'RS'),\n    RN: setHover.bind(null, 'RN')\n  };\n  var handleSelectRow = {\n    ND: onSelectRoute.bind(null, 'ND'),\n    NS: onSelectRoute.bind(null, 'NS'),\n    NN: onSelectRoute.bind(null, 'NN'),\n    RD: onSelectRoute.bind(null, 'RD'),\n    RS: onSelectRoute.bind(null, 'RS'),\n    RN: onSelectRoute.bind(null, 'RN')\n  };\n  var upcomingVoyages = now && (voyagesCache.current || (voyagesCache.current = calculateVoyages(now, Math.min(Math.max(Number(numRows) || 10, 1), 50), FILTER_MAP[filter] || null)));\n  var previousDate;\n  return __jsx(\"section\", null, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true\n  }, \"Schedule\"), __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.form\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(FormControl, {\n    fullWidth: true\n  }, __jsx(TextField, {\n    variant: \"filled\",\n    label: \"Number of rows\",\n    type: \"number\",\n    value: numRows,\n    onChange: handleInputNumRows,\n    onBlur: handleBlurNumRows\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    variant: \"filled\"\n  }, __jsx(InputLabel, null, \"Filter Route\"), __jsx(Select, {\n    \"native\": true,\n    value: filter,\n    onChange: handleSelectFilter\n  }, __jsx(\"option\", {\n    value: \"none\"\n  }, \"No filter\"), __jsx(\"optgroup\", {\n    label: \"Route\"\n  }, __jsx(\"option\", {\n    value: \"ND\"\n  }, \"Northern Strait - Day\"), __jsx(\"option\", {\n    value: \"NS\"\n  }, \"Northern Strait - Sunset\"), __jsx(\"option\", {\n    value: \"NN\"\n  }, \"Northern Strait - Night\"), __jsx(\"option\", {\n    value: \"RD\"\n  }, \"Rhotano Sea - Day\"), __jsx(\"option\", {\n    value: \"RS\"\n  }, \"Rhotano Sea - Sunset\"), __jsx(\"option\", {\n    value: \"RN\"\n  }, \"Rhotano Sea - Night\")), __jsx(\"optgroup\", {\n    label: \"Blue Fish\"\n  }, __jsx(\"option\", {\n    value: \"sothis\"\n  }, \"Sothis\"), __jsx(\"option\", {\n    value: \"coral_manta\"\n  }, \"Coral Manta\"), __jsx(\"option\", {\n    value: \"elasmosaurus\"\n  }, \"Elasmosaurus\"), __jsx(\"option\", {\n    value: \"stonescale\"\n  }, \"Stonescale\")), __jsx(\"optgroup\", {\n    label: \"Achievements\"\n  }, __jsx(\"option\", {\n    value: \"jellyfish\"\n  }, \"Jellyfish\"), __jsx(\"option\", {\n    value: \"seadragons\"\n  }, \"Seadragons\"), __jsx(\"option\", {\n    value: \"sharks\"\n  }, \"Sharks\"), __jsx(\"option\", {\n    value: \"octopodes\"\n  }, \"Octopodes\")))))), __jsx(NoSsr, null, now && __jsx(TableContainer, {\n    component: Paper\n  }, __jsx(Table, {\n    size: \"small\",\n    className: classes.schedule\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, {\n    colSpan: 2\n  }, __jsx(Typography, {\n    align: \"center\"\n  }, \"Time\")), __jsx(TableCell, {\n    colSpan: 2\n  }, __jsx(Typography, {\n    align: \"center\"\n  }, \"Route\")), __jsx(TableCell, null, __jsx(Typography, {\n    align: \"center\"\n  }, \"Objectives\")))), __jsx(TableBody, {\n    onMouseOut: handleHoverRow.none\n  }, upcomingVoyages.map(function (_ref) {\n    var day = _ref.day,\n        hour = _ref.hour,\n        destinationCode = _ref.destinationCode;\n    var time = LULU_EPOCH.clone().add(day, 'days').add(hour, 'hours').utcOffset(moment().utcOffset());\n    var date = time.format('M/D');\n    var dateChange = previousDate !== (previousDate = date);\n    return __jsx(TableRow, {\n      key: \"\".concat(day, \":\").concat(hour),\n      hover: true,\n      className: cn(filter === 'none' && hover === destinationCode && classes.hoverRow),\n      onMouseOver: handleHoverRow[destinationCode],\n      onClick: handleSelectRow[destinationCode]\n    }, __jsx(TableCell, null, dateChange && __jsx(Typography, {\n      variant: \"body2\",\n      align: \"right\"\n    }, date)), __jsx(TableCell, null, __jsx(Typography, {\n      variant: \"body2\"\n    }, time.format('HH:mm'))), __jsx(TableCell, null, __jsx(Typography, {\n      variant: \"body2\",\n      align: \"right\"\n    }, DEST_MAP[destinationCode[0]])), __jsx(TableCell, {\n      className: classes.timeCell\n    }, TIME_MAP[destinationCode[1]]), __jsx(TableCell, {\n      className: classes.objectivesCell\n    }, OBJECTIVES_MAP[destinationCode].map(function (name, index) {\n      return __jsx(OceanFishIcon, {\n        key: index,\n        name: name\n      });\n    })));\n  }))))));\n}","map":null,"metadata":{},"sourceType":"module"}