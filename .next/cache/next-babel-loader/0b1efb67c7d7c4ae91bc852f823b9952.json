{"ast":null,"code":"export function paddedZero(n) {\n  return n > 9 ? n : '0' + n;\n}\nexport function formatTime(date) {\n  return \"\".concat(paddedZero(date.getUTCHours()), \":\").concat(paddedZero(date.getUTCMinutes()));\n}\nexport function toTimeString(now, padded) {\n  var hours = now.getHours();\n  var minutes = now.getMinutes();\n  var displayHours = hours % 12 === 0 ? 12 : hours % 12;\n  return \"\".concat(padded && displayHours < 10 ? 'â€‡' + displayHours : displayHours, \":\").concat(paddedZero(minutes), \" \").concat(hours < 12 ? 'AM' : 'PM');\n}\n\nfunction getTimeUntil(now, then) {\n  var diff = then.getTime() - now.getTime();\n  var days = diff / 86400000;\n\n  if (days >= 1) {\n    days = Math.round(days);\n    return \"\".concat(days, \" \").concat(days > 1 ? 'days' : 'day');\n  }\n\n  var hours = diff / 3600000;\n\n  if (hours >= 1) {\n    hours = Math.round(hours);\n    return \"\".concat(hours, \" \").concat(hours > 1 ? 'hours' : 'hour');\n  }\n\n  var minutes = Math.round(diff / 60000);\n  return \"\".concat(minutes, \" \").concat(minutes > 1 ? 'minutes' : 'minute');\n}\n\nexport function timeUntil(now, then, full) {\n  var diff = then.getTime() - now.getTime();\n\n  if (Math.abs(diff) < 60000) {\n    return 'now';\n  }\n\n  if (diff < 0) {\n    var timeString = getTimeUntil(then, now);\n    return full ? \"last was \".concat(timeString, \" ago at \").concat(toTimeString(then)) : \"\".concat(timeString, \" ago\");\n  } else {\n    var _timeString = getTimeUntil(now, then);\n\n    return full ? \"next is in \".concat(_timeString, \" at \").concat(toTimeString(then)) : \"in \".concat(_timeString);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}