{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport OceanFishIconLarge from './OceanFishIconLarge';\nimport TimeIcon from './TimeIcon';\nimport BaitGroup from './BaitGroup';\nimport WeatherIcon from '../skywatcher/WeatherIcon';\nimport { fishes } from './gists/data/ocean-fish-data.json';\nimport { getFishInfo, getBaitGroup, subtextBiteTime, translate } from './utils';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    maxWidth: 400\n  },\n  header: {\n    padding: theme.spacing(1, 2, 0, 1)\n  },\n  content: {\n    padding: theme.spacing(2, 2, 0)\n  },\n  description: {\n    whiteSpace: 'pre-line'\n  }\n}));\n\nconst OceanFishPopper = ({\n  fishId\n}) => {\n  const classes = useStyles();\n  const router = useRouter();\n  const fish = fishes[fishId];\n  const fishInfo = getFishInfo(fish.name_en);\n  const locale = router.locale;\n  return /*#__PURE__*/_jsx(Box, {\n    boxShadow: 8,\n    children: /*#__PURE__*/_jsxs(Card, {\n      variant: \"outlined\",\n      className: classes.container,\n      children: [/*#__PURE__*/_jsx(CardHeader, {\n        avatar: /*#__PURE__*/_jsx(OceanFishIconLarge, {\n          fishId: fishId,\n          size: 100\n        }),\n        title: translate(locale, fish, 'name'),\n        titleTypographyProps: {\n          variant: 'h6'\n        },\n        subheader: /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"subtitle2\",\n            paragraph: true,\n            children: fishInfo.stars && 'â˜…'.repeat(fishInfo.stars)\n          }), fish.lodestone_data ? /*#__PURE__*/_jsx(Link, {\n            href: `https://na.finalfantasyxiv.com${fish.lodestone_data.url}`,\n            children: \"Lodestone\"\n          }) : 'Lodestone', /*#__PURE__*/_jsx(_Fragment, {\n            children: \" | \"\n          }), /*#__PURE__*/_jsx(Link, {\n            href: `https://ffxivteamcraft.com/db/${locale}/item/${fishId}`,\n            children: \"Teamcraft\"\n          })]\n        }),\n        className: classes.header\n      }), /*#__PURE__*/_jsx(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsx(BaitGroup, _objectSpread(_objectSpread({}, getBaitGroup(fishId)), {}, {\n          subtext: subtextBiteTime\n        }))\n      }), /*#__PURE__*/_jsx(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsx(Table, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxs(TableBody, {\n            children: [/*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: \"Points\"\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fishInfo.points\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: \"Double Hook\"\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fishInfo.doubleHook\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: \"Weather\"\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fishInfo.weathers ? (() => {\n                  switch (fishInfo.weathers.type) {\n                    case 'ALL':\n                      return 'Any';\n\n                    case 'OK':\n                      return fishInfo.weathers.list.map(weather => /*#__PURE__*/_jsx(WeatherIcon, {\n                        weatherId: weather,\n                        showLabel: false\n                      }, weather));\n\n                    case 'NOT OK':\n                      return /*#__PURE__*/_jsxs(_Fragment, {\n                        children: [/*#__PURE__*/_jsx(\"span\", {\n                          style: {\n                            verticalAlign: 'super'\n                          },\n                          children: \"Not\\xA0\"\n                        }), fishInfo.weathers.list.map(weather => /*#__PURE__*/_jsx(WeatherIcon, {\n                          weatherId: weather,\n                          showLabel: false\n                        }, weather))]\n                      });\n                  }\n                })() : '?'\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: /*#__PURE__*/_jsx(Typography, {\n                  children: \"Time\"\n                })\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fishInfo.time ? fishInfo.time === 'DSN' ? 'Any' : fishInfo.time && fishInfo.time.split('').map(time => /*#__PURE__*/_jsx(TimeIcon, {\n                  time: time\n                }, time)) : '?'\n              })]\n            })]\n          })\n        })\n      }), /*#__PURE__*/_jsx(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"caption\",\n          className: classes.description,\n          children: translate(locale, fish, 'description').replace(/\\[[^\\]]*\\]/g, '').trim()\n        })\n      })]\n    })\n  });\n};\n\nexport default OceanFishPopper;","map":null,"metadata":{},"sourceType":"module"}