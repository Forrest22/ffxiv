{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport cn from 'classnames';\nimport { TIME_MAP } from './maps';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport CheckIcon from '@material-ui/icons/Check';\nimport OceanFishIcon from './OceanFishIcon';\nimport Tug from './Tug';\nimport WeatherIcon from '../skywatcher/WeatherIcon';\nimport FISH from './gists/fish.json';\nconst useStyles = makeStyles(theme => ({\n  table: {\n    '& td': {\n      padding: 0\n    }\n  },\n  tableTug: {\n    fontSize: '1.5em'\n  },\n  disabled: {\n    backgroundColor: theme.palette.type === 'dark' ? '#333333' : '#DDDDDD',\n    opacity: 0.5\n  },\n  unchecked: {\n    opacity: 0.33\n  },\n  checked: {\n    color: 'green'\n  }\n}));\n\nconst FishTable = ({\n  regions,\n  time,\n  checklist,\n  setChecklist\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsx(Table, {\n    size: \"small\",\n    className: classes.table,\n    children: regions.map((region, index) => /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(TableHead, {\n        children: /*#__PURE__*/_jsxs(TableRow, {\n          children: [/*#__PURE__*/_jsx(TableCell, {\n            colSpan: 3,\n            align: \"center\",\n            children: \"Fish\"\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: \"Bait\"\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: \"Tug\"\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: \"Points\"\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: \"Double Hook\"\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: \"Line Time\"\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: \"Time\"\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: \"Weather\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(TableBody, {\n        children: FISH[region].map(fish => /*#__PURE__*/_jsxs(TableRow, {\n          hover: true,\n          className: cn(time && fish.time && fish.time.indexOf(time) === -1 && classes.disabled),\n          children: [/*#__PURE__*/_jsx(TableCell, {\n            children: /*#__PURE__*/_jsx(IconButton, {\n              className: checklist.includes(fish.name) ? classes.checked : classes.unchecked,\n              onClick: () => {\n                if (checklist.includes(fish.name)) {\n                  const copy = checklist.slice();\n                  copy.splice(copy.findIndex(x => x === fish.name), 1);\n                  setChecklist(copy);\n                } else {\n                  const copy = checklist.slice();\n                  copy.push(fish.name);\n                  setChecklist(copy);\n                }\n              },\n              children: /*#__PURE__*/_jsx(CheckIcon, {})\n            })\n          }), /*#__PURE__*/_jsx(TableCell, {\n            children: /*#__PURE__*/_jsx(OceanFishIcon, {\n              name: fish.name\n            })\n          }), /*#__PURE__*/_jsx(TableCell, {\n            children: /*#__PURE__*/_jsx(Typography, {\n              children: fish.name\n            })\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: [fish.bait, fish.mooch].filter(x => x).map(bait => /*#__PURE__*/_jsx(OceanFishIcon, {\n              name: bait\n            }, bait))\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: fish.tug && /*#__PURE__*/_jsx(Tug, {\n              strength: fish.tug,\n              className: classes.tableTug\n            })\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsx(Typography, {\n              children: fish.points\n            })\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsx(Typography, {\n              children: Array.isArray(fish.doubleHook) ? fish.doubleHook.join(', ') : fish.doubleHook\n            })\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsx(Typography, {\n              children: Array.isArray(fish.timer) ? fish.timer.join('-') : fish.timer\n            })\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: fish.time === 'DSN' ? /*#__PURE__*/_jsx(Typography, {\n              children: \"Any\"\n            }) : fish.time.split('').map(time => TIME_MAP[time])\n          }), /*#__PURE__*/_jsx(TableCell, {\n            align: \"center\",\n            children: fish.weathers && (() => {\n              switch (fish.weathers.type) {\n                case 'ALL':\n                  return /*#__PURE__*/_jsx(Typography, {\n                    children: \"Any\"\n                  });\n\n                case 'OK':\n                  return fish.weathers.list.map(weather => /*#__PURE__*/_jsx(WeatherIcon, {\n                    weatherId: weather,\n                    showLabel: false\n                  }, weather));\n\n                case 'NOT OK':\n                  return /*#__PURE__*/_jsxs(_Fragment, {\n                    children: [/*#__PURE__*/_jsx(\"span\", {\n                      style: {\n                        verticalAlign: 'super'\n                      },\n                      children: \"Not\\xA0\"\n                    }), fish.weathers.list.map(weather => /*#__PURE__*/_jsx(WeatherIcon, {\n                      weatherId: weather,\n                      showLabel: false\n                    }, weather))]\n                  });\n              }\n            })()\n          })]\n        }, fish.name))\n      })]\n    }, index))\n  });\n};\n\nexport default FishTable;","map":null,"metadata":{},"sourceType":"module"}