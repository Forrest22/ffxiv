{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport OceanFishIconLarge from './OceanFishIconLarge';\nimport TimeIcon from './TimeIcon';\nimport BaitGroup from './BaitGroup';\nimport ChecklistCheckmark from './ChecklistCheckmark';\nimport WeatherIcon from '../skywatcher/WeatherIcon';\nimport { fishes, baits } from './gists/data';\nimport { getBaitGroup, subtextBiteTime, translate, getBlindDHRanges } from './utils';\nimport i18n from '../../i18n';\nconst BAITS = [29714, 29715, 29716, 2587, 2591, 2603, 2613, 2619, 27590, 29722, 29761, 29718, 32107];\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: 400\n  },\n  header: {\n    padding: theme.spacing(2),\n    alignItems: 'start'\n  },\n  title: {\n    paddingTop: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 2, 2)\n  },\n  description: {\n    whiteSpace: 'pre-line'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\n\nconst OceanFishPopper = ({\n  fishId,\n  t,\n  i18n\n}) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [blindDHBait, setBlindDHBait] = React.useState(BAITS[0]);\n  const [blindDHTime, setBlindDHTime] = React.useState('D');\n  const fish = fishes[fishId];\n  const fishInfo = fish.spreadsheet_data;\n  const blindDHRanges = getBlindDHRanges(fishId, blindDHBait, blindDHTime);\n  console.log(fishId, blindDHBait, blindDHTime);\n  console.log(blindDHRanges);\n\n  const handleClickExpand = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleSelectBlindDHBait = event => {\n    setBlindDHBait(+event.target.value);\n  };\n\n  const handleSelectBlindDHTime = event => {\n    setBlindDHTime(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsx(Box, {\n    boxShadow: 8,\n    children: /*#__PURE__*/_jsxs(Card, {\n      variant: \"outlined\",\n      className: classes.container,\n      children: [/*#__PURE__*/_jsx(CardHeader, {\n        avatar: /*#__PURE__*/_jsx(OceanFishIconLarge, {\n          fishId: fishId,\n          size: 100\n        }),\n        title: translate(i18n.language, fish, 'name'),\n        titleTypographyProps: {\n          variant: 'h6',\n          paragraph: true,\n          className: classes.title\n        },\n        subheader: /*#__PURE__*/_jsxs(\"div\", {\n          children: [fish.lodestone_data && fish.lodestone_data.url ? /*#__PURE__*/_jsx(Link, {\n            href: `https://na.finalfantasyxiv.com${fish.lodestone_data.url}`,\n            children: \"Lodestone\"\n          }) : 'Lodestone', /*#__PURE__*/_jsx(_Fragment, {\n            children: \" | \"\n          }), /*#__PURE__*/_jsx(Link, {\n            href: `https://ffxivteamcraft.com/db/${i18n.language}/item/${fishId}`,\n            children: \"Teamcraft\"\n          })]\n        }),\n        action: /*#__PURE__*/_jsx(ChecklistCheckmark, {\n          fishId: fishId\n        }),\n        className: classes.header\n      }), /*#__PURE__*/_jsx(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsx(BaitGroup, _objectSpread(_objectSpread({}, getBaitGroup(fishId)), {}, {\n          subtext: subtextBiteTime\n        }))\n      }), /*#__PURE__*/_jsx(CardContent, {\n        className: classes.content,\n        children: /*#__PURE__*/_jsx(Table, {\n          size: \"small\",\n          children: /*#__PURE__*/_jsxs(TableBody, {\n            children: [/*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('rating')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fishInfo.stars ? 'â˜…'.repeat(fishInfo.stars) : '?'\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('points')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fishInfo.points ? fishInfo.points : '?'\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('double-hook')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fishInfo.double_hook ? Array.isArray(fishInfo.double_hook) ? fishInfo.double_hook.join('-') : fishInfo.double_hook : '?'\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('weather')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fishInfo.weathers ? (() => {\n                  switch (fishInfo.weathers.type) {\n                    case 'ALL':\n                      return 'Any';\n\n                    case 'OK':\n                      return fishInfo.weathers.list.map(weather => /*#__PURE__*/_jsx(WeatherIcon, {\n                        weather: weather,\n                        showLabel: false\n                      }, weather));\n\n                    case 'NOT OK':\n                      return /*#__PURE__*/_jsxs(_Fragment, {\n                        children: [/*#__PURE__*/_jsx(\"span\", {\n                          style: {\n                            verticalAlign: 'middle'\n                          },\n                          children: \"Not \"\n                        }), fishInfo.weathers.list.map(weather => /*#__PURE__*/_jsx(WeatherIcon, {\n                          weather: weather,\n                          showLabel: false\n                        }, weather))]\n                      });\n                  }\n                })() : '?'\n              })]\n            }), /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsx(TableCell, {\n                variant: \"head\",\n                children: t('time-of-day')\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: fishInfo.time ? fishInfo.time === 'DSN' ? 'Any' : fishInfo.time && fishInfo.time.split('').map(time => /*#__PURE__*/_jsx(TimeIcon, {\n                  time: time\n                }, time)) : '?'\n              })]\n            }), expanded && /*#__PURE__*/_jsxs(TableRow, {\n              children: [/*#__PURE__*/_jsxs(TableCell, {\n                variant: \"head\",\n                children: [\"Blind DH?\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"select\", {\n                  value: blindDHBait,\n                  onChange: handleSelectBlindDHBait,\n                  children: BAITS.map(baitId => /*#__PURE__*/_jsx(\"option\", {\n                    value: baitId,\n                    children: translate(i18n.language, baits[baitId] || fishes[baitId], 'name')\n                  }, baitId))\n                }), /*#__PURE__*/_jsxs(\"select\", {\n                  value: blindDHTime,\n                  onChange: handleSelectBlindDHTime,\n                  children: [/*#__PURE__*/_jsx(\"option\", {\n                    value: \"D\",\n                    children: t('time-day')\n                  }), /*#__PURE__*/_jsx(\"option\", {\n                    value: \"S\",\n                    children: t('time-sunset')\n                  }), /*#__PURE__*/_jsx(\"option\", {\n                    value: \"N\",\n                    children: t('time-night')\n                  })]\n                })]\n              }), /*#__PURE__*/_jsx(TableCell, {\n                align: \"center\",\n                children: blindDHRanges ? blindDHRanges.length === 0 ? 'Cannot blind DH' : blindDHRanges.map(range => range[0] === range[1] ? range[0] : range.join('-')).join(', ') : 'No data'\n              })]\n            })]\n          })\n        })\n      }), /*#__PURE__*/_jsx(Collapse, {\n        in: expanded,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsx(CardContent, {\n          className: classes.content,\n          children: /*#__PURE__*/_jsx(Typography, {\n            variant: \"body2\",\n            className: classes.description,\n            children: translate(i18n.language, fish, 'description').replace(/\\n\\n+/g, '\\n\\n')\n          })\n        })\n      }), /*#__PURE__*/_jsx(CardActions, {\n        disableSpacing: true,\n        children: /*#__PURE__*/_jsx(IconButton, {\n          onClick: handleClickExpand,\n          className: clsx(classes.expand, expanded && classes.expandOpen),\n          children: /*#__PURE__*/_jsx(ExpandMoreIcon, {})\n        })\n      })]\n    })\n  });\n};\n\nexport default i18n.withTranslation('ocean-fishing')(OceanFishPopper);","map":null,"metadata":{},"sourceType":"module"}