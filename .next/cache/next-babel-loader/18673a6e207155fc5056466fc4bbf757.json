{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport cn from 'classnames';\nimport EorzeaWeather from '@pillowfication/eorzea-weather';\nimport REGIONS from './regions';\nimport getEorzeanTime from './get-eorzean-time';\nimport calculateWeathers from './calculate-weathers';\nimport { paddedZero } from '../utils';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport WeatherIcon from './WeatherIcon';\nconst ZONES = REGIONS.map(region => region.zones).flat();\nconst WEATHER_CELL_WIDTH = 75;\nconst eorzeaWeather = new EorzeaWeather({\n  locale: 'en'\n});\nconst useStyles = makeStyles(theme => ({\n  selectRegion: {\n    marginBottom: theme.spacing(2)\n  },\n  weatherTable: {\n    ':not(:last-child) > &': {\n      marginBottom: theme.spacing(4)\n    }\n  },\n  weatherTime: {\n    textAlign: 'center',\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    '&:last-child': {\n      paddingRight: theme.spacing(1),\n      width: WEATHER_CELL_WIDTH + theme.spacing(1.5)\n    }\n  },\n  regionCell: {\n    minWidth: 200\n  },\n  weatherCell: {\n    width: WEATHER_CELL_WIDTH + theme.spacing(1),\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    textAlign: 'center',\n    verticalAlign: 'top',\n    lineHeight: 1,\n    '& span': {\n      display: 'inline-block',\n      width: WEATHER_CELL_WIDTH,\n      lineHeight: 1.1\n    },\n    '&:last-child': {\n      paddingRight: theme.spacing(1),\n      width: WEATHER_CELL_WIDTH + theme.spacing(1.5)\n    }\n  },\n  current: {\n    backgroundColor: theme.palette.action.hover,\n    'th&': {\n      fontWeight: 'bold'\n    }\n  }\n}));\nexport default function WeatherTable(props) {\n  const {\n    now\n  } = props;\n  const {\n    0: filter,\n    1: setFilter\n  } = useState(null);\n  const classes = useStyles();\n  const router = useRouter();\n  const firstRender = useRef(false);\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.up('sm'));\n  const md = useMediaQuery(theme.breakpoints.up('md'));\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\n  useEffect(() => {\n    const queryFilter = REGIONS.find(region => region.query === router.query.filter) ? router.query.filter : 'none';\n\n    if (!firstRender.current && now || filter !== queryFilter) {\n      firstRender.current = true;\n      setFilter(queryFilter);\n    }\n  });\n\n  const handleSelectFilter = event => {\n    const filter = event.target.value;\n    router.push({\n      pathname: router.pathname,\n      query: filter === 'none' ? null : {\n        filter\n      }\n    });\n  };\n\n  return __jsx(\"section\", null, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true\n  }, \"Upcoming Weather\"), __jsx(FormControl, {\n    variant: \"filled\",\n    fullWidth: true,\n    margin: \"dense\",\n    className: classes.selectRegion\n  }, __jsx(InputLabel, null, \"Select a region\"), __jsx(Select, {\n    onChange: handleSelectFilter,\n    value: filter || 'none'\n  }, __jsx(MenuItem, {\n    value: \"none\"\n  }, \"Show all regions\"), REGIONS.map(({\n    regionId,\n    query\n  }) => __jsx(MenuItem, {\n    key: query,\n    value: query\n  }, eorzeaWeather.translateRegion(regionId))))), __jsx(NoSsr, null, (() => {\n    if (!now) return null;\n    const weathersCount = lg ? 9 : md ? 7 : sm ? 6 : 3;\n    const weathers = calculateWeathers(ZONES, weathersCount, now);\n    const eorzeanTime = getEorzeanTime(now);\n    const timeChunk = Math.floor(eorzeanTime.getUTCHours() / 8) * 8;\n    const filteredRegion = filter && filter !== 'none' && REGIONS.find(region => region.query === filter);\n    return (filteredRegion ? [filteredRegion] : REGIONS).map(({\n      regionId,\n      zones\n    }) => __jsx(React.Fragment, {\n      key: regionId\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true\n    }, eorzeaWeather.translateRegion(regionId)), __jsx(TableContainer, null, __jsx(Table, {\n      size: \"small\",\n      className: classes.weatherTable\n    }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, null), Array(weathersCount + 1).fill().map((_, index) => __jsx(TableCell, {\n      key: index,\n      className: cn(classes.weatherTime, index === 1 && classes.current)\n    }, paddedZero((24 + timeChunk + 8 * (index - 1)) % 24) + ':00')))), __jsx(TableBody, null, zones.map(zoneId => __jsx(TableRow, {\n      key: zoneId,\n      hover: true\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      className: classes.regionCell\n    }, __jsx(Typography, null, eorzeaWeather.translateZone(zoneId))), weathers[zoneId].map((weatherId, index) => __jsx(TableCell, {\n      key: index,\n      className: cn(classes.weatherCell, index === 1 && classes.current)\n    }, __jsx(WeatherIcon, {\n      weatherId: weatherId\n    }))))))))));\n  })()));\n}","map":null,"metadata":{},"sourceType":"module"}